==                                N{stan lika med.
ABS(x)                            Absolutbeloppet av x.
ADD a%,5                          Adderar 5 till a%.
ALERT a,msstr{ng,b,kstr{ng,var    Skapar en "Alertbox".
a=0  Ingen symbol.
a=1  !.
a=2  ?.
a=3  STOP.

b=0 Ingen markering.
b=1-3 Markerar motsvarande knapp.

mstr{ng inneh}ller texten som ska skrivas ut.
kstr{ng inneh}ller texten i knapparna.
Raderna i texten och knapparna }tskiljs av |.
 
ARRAYFILL arry(),n                Fyller en dimensionerad variabel med n.
ARRPTR(var)                       Ger adressen till en variabel.
ASC(X$)                           Ger ascii koden f\r x$.
ATN(x)                            Ger arctangens av x.
BASEPAGE                          Ger adressen till BASEPAGE.
BIN$(X)                           Omvandlar x till en bin{r str{ng.
BGET[#]i,adr,cnt                  L[ser cnt bytes fr]n kannal i till adress adr.
BITBLIT s%,d%,p%                  Anropar operativsystemets blitterfunktion.
s%() inneh]ler k[llbeskrivningen.
d%() inneh]ler destinations beskrivningen.
p%() inneh]ler koordinaterna f\r de tv] rektanglarna sam kopierings mode.

s%(0)=Rasteradress
s%(1)=Rasterbred i punkter, m[ste vara delbart med 16
s%(2)=Rasterh\jd i punkter
s%(3)=Rasterbredd i ord,(s%(1)/16)
s%(4)=Alltid 0
s%(5)=Antal bitplan 1,2,4
d%() samma som s%()
p%(0..3)=K[ll rektangel (x0,y0,x1,y1)
p%(4..7)=Destinations rektangle som p%(0..3)
p%(8)=mod


BMOVE k[lla,destination,antal     Snabb flyttnig av minnesblock.
BLOAD "filnamn"[,adress]          Laddar in en minnesarea.
BOX x0,y0,x1,y1                   Ritar en box.
BPUT [#]i,adr,cnt                 S[nder cnt bytes fr]n adress adr p] kannal i.
BSAVE "filnamn",adress,l[ngd      Sparar en minnes area som startat p[ adr till adr+l[ngd.
C:                                Anropar ett maskinspr]ksprogram.
CALL var                          Anropar en maskinspr]ks rutin p] adressen var.
CHAIN "filnamn"                   Laddar in ett program samt exekverar det.
CHDIR "foldernamn"                Best[mmer vilken folder man vill arbeta inom.
CHDRIVE n                         V[ljer drive 1=A,2=A osv.
CHR$(x)                           Skriver ut det tecken som har ascii koden x.
CIRCLE x,y,r[,phi0,phi1]          Ritar en circkel b]ge/segment.
x,y=koordinater f\r cirkelns centrum.
r=radien.
phi0=startvinkel i 1/10 grader.
phi1=stopvinkel i 1/10 grader.

CLEAR                             Raderar alla variabler och f[lt.
CLEARW n                           Raderar inneh]let i f\nster n.
CLOSE [[#]n]                      St]nger kannal n eller om inget har angets st[ngs alla.
CLOSEW n                          St[nger f\nster n.
CLR var,[var...]                  Nollst[ller variabler och t\mmer str[ngvariabler.
CLS [#i]                          Raderar sk[rmen och flyttar mark\ren till 0,0.
COLOR n                           S[tter f[rg till nr n (0-15),(0-3),(0-1) vid l]g,medium resp h\g.
CONT                              Forts[tter programmet d[r det stoppades.
COS(X)                            Retunerar cosinusv[rdet f\r argumentet i radianer.
CRSCOL,CRSLIN                     Returnerar mark\rens position.
CVI(x$),CVL(x$),CVS(x$),CVF(x$),CVD(x$) Omvandlar en str[ng till ett numriskt v[rde.
CVI omvandlar en 2 bytes teckenstr[ng till ett 16 bitars heltal.
CVL omvandlar en 4 bytes teckenstr[ng till ett 32 bitars heltal.
CVS omvandlar en 4 bytes teckenstr[ng till ett 32 bitars flyttal enligt ST-BASIC.
CVF omvandlar en 6 bytes teckenstr[ng till ett 48 bitars flyttal enligt GFA-BASIC.
CVD omvandlar en 8 bytes teckenstr[ng till ett 64 bitars flyttal enligt M-BASIC & GFA-BASIC 68881.
DATA  [const[,const]..]           Anger data som l[ses med READ.
DATE$                             Returnerar systemklockans datum. DD.MM.AAAA
DEC var                           Minskar variabel var med 1.
DEFFIL [c],[a],[b]                Anger fyllf[rg och m\nster.
DEFFIL [c],a$                     Definierar ett eget fyllm\nster.
c=f[rg#

a=fylls[ttet
0=Tomt.
1=Fyllt.
2=Punktm\nster.
3=Linjerat

b=V[ljer ett f\rdefinierat m\nster 1-24.

a$=M\nsterrastret.

DEFFN namn[(var lista)]=uttryck   Definierar en funktion.
DEFLINE [s],[b],[a],[e]           Definierar linjetyp,linjebredd,[ndmarkering.
s=typ.
b=bred
a=startmarkering
e=endmarkering
0=normal
1=pilar
2=rundade
DEFLIST x                         Best[mmer hur kommandon, funktionsnamn och variabler listas.
DEFMARK [c],[a],[g]               Definierar f[rg,typ och storlek p] k\rnpunkterna som anv[nds av polymark.
c=f[rg#
a=typ
1=punkt
2=plustecken
3=stj[rna
4=fyrkant
5=kryss
6=romb

g=storlek

DEFMOUSE n                        V[ljer en f\rdefinierad musform.
0=pil
1=streckat kryss
2=timglas
3=pekandehand
4=\ppen hand
5=tund h]rkors
6=kraftigth]rkors
7=omringath]rkors

DEFMOUSE a$                       Definierar musform.
a$=mki$(x-koordinat f\r reaktions punkt)
+mki$(y-koordinat f\r reaktions punkt)
+mki$(1)
+mki$(maskf[rg)
+mki$(mark\rf]rg)
+m$(bitm\nster f\r mark\ren)
+c$(bitm\nster f\r mark\r)

DEFNUM n                           Avrundar alla tal vid utskrift till n decimaler.
DEFTEXT [c],[s],[r],[g]            Definierar f{rg,stil,rotation och storlek f\r den text som skrivs ut med TEXT.
c=f{rg
s=stil
0=normal
1=fetstil
2=ljusstil
4=kursivstil
8=understruken stil
16=omringad stil
r=rotation i 1/10 grader dock endast 0,900,1800 och 2700 kan anv[ndas
g=storlek p] texten.
DFREE(n)                           Returnerar hur mycket utrymme det finns p] disk n.1=a 2=b osv.
DIM var(index)[,var(index),...]    Definierar dimensionen f\r ett eller flera f{lt.
DIM?(f[lt())                       Returnerar storleken p] ett f[lt.
DIR["filspec"[to"fil"]]            Listar inneh]let p] en disk.om fil=lst f]r man utskriften p] skrivaren.
DIR$(n)                            Anger i vilken folder man befinner sig i.n=disk#.1=a 2=b osv.
DIV var,n                          Dividerar var med n.
DRAW x0,y0 to x1,y1 to..           S[tter en punkt eller f\rbinder tv] eller f;era punkter.
EDIT                               G]r direkt till editorn n{r programmet {r klart.
ELLIPSE x,y,rx,ry[,phi0,phi1]      Ritar en ellips eller ett segment av en ellips med mittpunkten x,y.
END                                Avbryter programmet.
EOF ([n]n)                         Anger om filpekaren har n]tt slutet p] filen.
ERASE f[lt()                       Raderar ett f[lt.
ERR                                Inneh]ller nummret p] det senaste felmedelandet.
ERROR n                            Skriver ut felmedelande #n.
EVEN(n)                            Testar om ett tal [r j[mt.
EXEC flg,namn,cmd,env              Laddar in och k\r ett maskinspr[ksprogram om flg=0 annars laddas det bara in.
EXIST ("filspec")                  Kontrollerar om en best[md fil finns p] disketten.
EXIT [IF]                          Hoppar ur en slinga FOR...NEXT, DO...LOOP, REPEAT...UNTIL och WHILE...WEND.
EXP(x)                             Ber]knar exponentialfunktionen f\r argumentet.bas e=2.7182881828
FALSE                              Logisk konstant 0.
FATAL                              Returnerar beroende p} fel, v{rdet -1 eller 0. Vid normala fel returneras 0.
FIELD [#]n,utr as stv [,as stv]   Delara up ett data blocck i f{lt. utr anger index.
FILES ["filespec"[TO "fil"]]       Listar inneh}let p} en diskett eller h}rddisk.
FILESELECT "filspec","fnamn",x$   Anropar GEM's "fileselector box" rutin.
FILL x,y                           Fyller ett inramat omr}de med ett m|nster som tidigare definierats med deffill.
FIX(x)                             Returnerar heltalsdelen av argumentet genom att kapa av decimaldelen av argumentet.
FOR var=a [DOWN]to e [STEP s]      Skapar en slinga.
FORM INPUT [AS] n,var              L{ser in n tecken till var fr}n tangentbordet.
FRAC(x)                            Reducerar decimaldelen av argumentet.
FRE(x)                             Returnerar fritt arbetsminne i bytes.x har ingen funktion.
FULLW n                            Expanderar f|nster n till full storlek. Om f|nster n ej {r |ppnat s} |ppnas det.
GET x0,y0,x1,y1,a$                 Kopierar ett rektangul{rt utsnitt av bildsk{rmen till str{ngen a$.
GET [#]n[,i]                       L{ser ett data f{lt. i [r ett tal mellan 1 och antalet lagrade data(max 65535).
GOSUB namn[(lista p[ utr)]         Anropar en rutin.
GOTO m{rke                         Ovilkorligt hopp till angiven adress(m[rke).
GRAPHMODE n                        S[tter grafikmod:
1=ers[tter
2=transparent
3=XOR
4=inverterad transparent

HARDCOPY                           Skriver ut bildsk[rmensinneh[l p[ skivaren.
HEX$(X)                            Omvandlar ett uttryck till en hexadecimal str{ng x=-2147483648 till 2147483647.
HIDEM                              Kopplar bort mus pilen.
HIMEM                              Returnerar adressen till den del av minnet som GFA-basic inte anv{nder.
IF vilkor [THEN]                   Utf|r programblock 1 om vilkoret {r sant annars utf|r den programblock 2.
programblock 1
[ELSE]
programblock 2
ENDIF
INC var                            |kar var med 1.
INFOW n,info                       S{tter en (ny) text p} ett f|nsters informations rad.n [r nummret p} f|nstret.
INKEY$                             L{ser in en tangent tryckning fr{n tangentbordet.F1 ger chr$(0)+chr$(59) osv.
INP(#n)                            L{ser in en byte fr}n kannal n.
INP(x)                             L{ser en byte fr{n 0=lst 1=aux 2=con 3=mid.
INPUT ["text";(eller,)]var[.var..] M|jligg|r datainmatning under programetsk|rning.
INPUT #1,var[,var...]              L{ser data fr}n kanal n.
INPUT$(x[,#n])                     L{ser in x tecken fr}n tangent brdet eller kanal n.
INSTR([n,]a$,b$)                   Unders|ker om b$ finns i a$.Om den finns returneras positionen.
INT(X)                             Returnerar n{rmaste heltal <=x.
KILL "filspec"                     Rade rar en fil p} disketten eller h}rddisken.
LEFT$(str[,n])                     Returnerar de n f|rsta tecknen i en teckenstr{ng.
LEN(X$)                            Returnerar l{ngden av x$.
LET var=uttryck                    Tilldelnings kommando.
LINE x0,y0 x1,y1                   F\rbinder x0,y0 med x1,y1.
LINE INPUT["text";(,)]var[,var..]  Som INPUT fast komma g{ller ej som separator, endast return.
LINE INPUT #n,var[,var]            n=kanal nummer.
LIST"filnamn"                      Sparar programmet i ascii format. Suffix .LST.
LLIST                              Skriver ut programmet p} printern.
LOAD "filspec"                     Laddar in ett program till minnet. 
LOC ([#]n)                         Anger hur l}ngt in i en fil filpekaren pekar.Endast disk.
LOCAL var[,var...]                 Skapar en lokal varibel men namnet "var" som har prioritet |ver globalt anv{nda variabler med samma namn.
LOF ([#]n)                         Returnerar l{ngden av en fil.
LOG(x),LOG10(x)                    Returnerar naturlige respektive 10logaritmen f\r x.
LPOS(n)                            Anger i vilken kolumn skrivarhuvudet befinner sig fysiskt.n har ingen betydelse.
LPRINT [uttryck][,][;][']]         Skriver p} skrivaren om s{dan }r ansluten.
LSET var=str{ng                    V{nsterjusterar "str{ng" i "var"
MAX(utr[,utr...])                  Returnnerar det st\rsta numriska respektive str[ngutrycket i argumentlistan.
MENU f[lt                          M\jligg\r att skapa och modifiera menylistor.
f[lt {r ett endimensionellt f[lt av str{ngvariabler som inneh]ller texterna till menylistorna.
Mellan varje menytitel och tillh\rande val m]ste tv} tomstr{ngar finnas.
Efter f\rsta menyvalet m]ste se ut som: Titel,Program-info,Skillnadstecken av minustecken, sex dummystr{ngar >0 f\r desk accessories.
MENU KILL
Inaktiverar menylistan.
MENU OFF
}terst{ller en eventuellt negativt markerad Menytitel.
MENU n,x
n=text # i f{lt
x:
0=raderar en bock framf\r texten
1=s[tter en bock framf\r texten
3=kursiverar texten och g\r den icke valbar.
4=]terst[ller texten till valbar

MENU(n)
|verf\r paramentrar fr}n ON MENY GOSUB
n:
0=returnnerar numret f\r ett markerat menyval
1-8=returnerar motsvarande inneh]ll i medelandebufferten
9=ger en flaga som anger vad som h[nt (INT_OUT[0])
10-11=ger musens koordinater (INT_OUT[1&2])
12=returnerar ifall n]gon av musknapparna var nedtryckt
13=returnerar skiftknapparnas l{ge
14=ger h\gsta byten , scan koden och l[gsta ASCII tecknet
15=returnerar antalet musklick
-1 returnerar adressen till objekttr[det

MID$(st[ng,a[,n])                    Returnerar all, eller n tecken fr]n och med position a.
MIN(uttryck[,uttryck..])             Returnerar det minsta inneh]llet i argumentlistan.
MKDIR "foldernamn"                   Skapar en ny folder.
MKI$     omvandlar ett 16-bitars heltal till en 2 bytes str{ng.
MKL$     omvandlar ett 32 bitars heltal till en 4 bytes str{ng.
MKS$     omvandlar ett tal i ST-BASIC 4 btes flyttalsformat till en 4 bytes str{ng.
MKF$     omvandlar ett tal i GFA-BASIC 6 bytes flyttalsformat till en 6 bytes str{ng.
MKD$     omvandlar ett tal i M-BASIC & GFA-BASIC 68881 8 bytes flyttalsformat till en 8 bytes teckenstr{ng.

MONITOR[n]                           Anrop av en minnesresident monitor, debugger eller kommandoutvidgning.
MOUSE x,y,k                          Returnerar musensposition ock knapparnas l{gen. v{nsterknapp=1 h\gerknapp=2
MOUSEX,MOUSEY,MOUSEK                 Returnerar respektive x och y position samt knapptryckning f\rekommer.
MUL var,n                            Multiplicerar var med n.
NAME "gamla" as "nya"                Byter namn p] en fil.Kabn ocks] anv[ndas till att flytta en fil till en annan folder.
NEW                                  Raderar programmet.
OCT$(x)                              Omvandlar ett uttryck till en Octal teckenstr{ng.
ODD(n)                               Testar om ett tal {r udda.
ON utr gosub proc lista              Anropar beroende p] v[rdet av utr en av flera procedurer.
ON BREAK,ON BREAK CONT,ON BREAK GOSUB G\r avbrott av programmet m\jligt, om\jligt eller anropar en viss procedur.
ON ERROR,ON ERROR GOSUB              Anropar en procedur d] det uppst]r ett fel.
ON MENU BUTTON c,m,s GOSUB proc      Fr]gar efter musknapparnas status. c [r maximalt antal registrerade knapptryckninar, m [r en mask:1=v[nster 2=h\ger 
s [r status, samma som m.
ON MENU GOSUB proc1                  Definierar vilka procedurer som skall anropas vid menyval.
ON MENU KEY GOSUB proc2              G|r som ovans. fast med tangent tryckningar.
ON MENU MESSAGE GOSUB proc3          Anv{nds f|r kommunikation med GEM.
ON MENU IBOX a,x,y,b,h GOSUB proc4   Anger vilka procedurer som skall anropas n{r musen befinner sig i omr}det x,y,x+b,y+h.
ON MENU OBOX a,x,y,b,h GOSUB proc 5  Anger vilka procedurer som skall anropas n{r musen befinner sig utanf|r omr}det x,y,x+b,y+h.
ON MENU                              Testar alla ON MENU ..... definitioner.B|r f|rekomma ofta.
OPEN "mod",[#]n,"filnamn"[,len]      |ppnar en kanal till en fil.
mod:
O=|ppnar en kanal f|r skrivning.
I=|ppnar en kanal f|r inl{sning
A=forts[tter att skriva d{r det tidigare inneh]llet i en fil slutar.
U=medf\r att man [ven kan l[sa fr]n en kanal som redan [r \ppnad f\r skrivning.
R=Random-access datafil och g{ller b}de l{sning och skrivning till filen.
n=kanal nummer.
filnam=nammnet p] den fil man \nskar anv[nda och kan inneh]lla data om vilken folder man vill placera den i.
F|rdefinierade filnamn:
CON:=sk[rmen
LST: eller PRN:=skrivaren
AUX:=serie porten.
MID:=f\r MIDI portarna.
VID:=som CON man styrkoder utf\rs.
IKB:=direktkontakt med 6301 tangentbords processorn.
Vid dessa namn har det ingen betydelse vad man angett f|r mod, en tomstr{ng g}r lika bra.
len=har endast betydelse n{r man anv{nder random acces data och anger d] block l[ngden, saknas denna antages len=128.

OPENW n[x,y]                          |ppnar ett f|nster med nummer n.x och y s[tter koordinaterna f\r grafikkommandona.
OPTION, OPTION BASE 0 eller 1         S[tter startindex f\r f[ltvariabler till 0 eller 1 samt anger direktiv till kompilatorn.
OUT #n,a                              Skriver en byte "a" till kanal n.
OUT x,a                               Skriver en byte "a" till 0=LST 1=AUX 2=CON 3=MID 4=IKB.
OUT?(n)                               K[nner av om en enhet [r aktiv eller ej.n=0=LST 1=AUX osv.
PAUSE x                               Stoppar programmet i x 1/50 dels sekunder.
PBOX x0,y0,x1,y1                      Ritar en fylld box.
PCIRCLE x,y,r[,phi0,phi1]             Ritar en fylld circkel.
PELLEIPSE x,y,rx,ry[,phi0,phi1]       Ritar en fylld ellips.
PRBOX x0,y0,x1,y1                     Ritar en fylld box med rundade h|rn.
PEEK(x), DPPEK(x), LPEEK(x)           L{ser inneh]llet p] adress x. PEEK l[se en byte DPEEK 2 och LPEEK 4.
PI                                    3.14159265359
PLOT x,y                              Markerar en punkt p] koordinaterna x och y.
POINT(x,y)                            Retur nerar f[rgen p] punkten x,y.
POKE x,n, DPOKE x,y, LPOKE x,n        Skriver 1,2 resp 4 byte p} adressen x.
POLYLINE n,x(),y() [OFFSET x0,y0)     Ritar en (fylld) linje kedja men n h\rnpunkter eller markerade h\rnpunkter, max 128. X() och Y() inneh]ller koordinaterna
POLYFILL ---------""------------      OFFSET x0,y0 anger f|rsjutningen.
POLYMARK -------- "" -----------
POS(n)                                Returnnerar den kolumn som mark\ren befinner sig i.n har ingen betydelse.
PRINT [AT(r,k)][;][utr[,][;][']]      Skriver p] bildsk[rmen eller en p] kanal n. 
PRINT #n[,utr[,][']]                                            

PRINT USING "format",lista[;]
PRINT #n USING "format",lista[;]
Skriver ut tal och text formaterat.
lista [r ett antal med komma skilda utr.
Formatbeskrivning:
# plats f\r en siffra
. position f\r decimalpunkten
+ skriv [ven ut positivt f\rtecken
- plats f\r negativt f\rtecken
* ledande nollor ers[tts med * annars som #
$$ skriver et $
, fyller i ett komma, tusen ]tskillnad
^^^^ utskrift i exponentiellt format E+00
^^^^^ utskrift i exponentiellt format E+000
! skriver ut f\rsta tecknet i en str{ng
& skriver ut hela str{ngen.
\..\ skriver ut angiven l[ngd med backslag av str{ngen
_ skriver ut n[stf\ljande tecken.

PROCEDURE namn[(var lista)]                   Markerar b\rjan p] en procedur med namn "namn".
PUT x0,y0,a$,mod                              Skriver ut en med get inl[st str[ng som bitm\nster p] koordinaterna x0,y0.
mod:
0=0
1=S AND B
2=S AND (NOT(B))
3=S
4=(NOT(S) AND B
5=B
6=S XOR B
7=S OR B
8=NOT (S OR B)
9=NOT (S XOR B)
10=NOT B
11=S OR (NOT B)
12=NOT S
13=(NOT S) OR B
14=NOT (S AND B)
15=1

PUT [#]n[,i]                                  Skriver en datasats till en random-acces fil.i [r antalet poster.Saknas i skrivs satsen efter den 
senaste p] filen.
QUIT                                          G]r tillbaka till GEM-desktop
RANDOM(X)                                     Returnerar ett slumpm[ssigt heltal mellan 0 och (x-1)
RBOX x0,y0,x1,y1                              Ritar en box med rundade h\rn.
READ var[,var...]                             L[ser in v[rden fr]n DATA satser.
RELSEEK [#]n,x                                Flyttar filpekaren men kanal nummer n med x byte. x kan vara positivt eller negativt.
REM text                                      G\r det enkelt att l[gga in kommentarer.
REPEAT.....UNTIL vilkor                       Skapar en vilkorlig slinga.
RESERVE n                                     F\rminskning eller f\rstorning av det minne som avsatts f\r programmering.
RESTORE [m[rke]                               S[tter DATA-pekaren till programmets b\rjan eller till ett specifierat m[rke.
RESUME, RESUME NEST, RESUME label             }terhopp fr]n felrutin, RESUME f\rs[ker igen d[r det gick fel.RESUME NEXT forts[tter med kommandot
efter d[r det gick fel och RESUME label g\r att programmet ]terstartar fr]n ett m[rke.
RETURN                                        Avslutar en procedur.
RIGHT$(str[,n])                               Returnerar de n sista tecknen i str.Om man inte anger n returnneras 
sista tecknet.
RMDIR "foldernamn"                            Avl[gsnar en folder.
RND[(x)]                                      Returnerar ett slumptal mellan 0 och 1, x har inge betydelse.
RSET var=str                                  H\gerjusterar str i var.
RUN                                           Startar programmet.
SAVE "filnamn", PSAVE" filnamn"               Sparar ett programm p] diskett.PSAVE sparar programmet med listskydd och startas s] fort det laddats in.
SEEK [#]n,x                                   S[tter filpekaren till den x:te byten i filen med kanal nummer n. Om x [r positivt r[knas fr]n b\rjan och 
om x [r negativt r[knas fr]n slutet av filen.
SETCOLOR i,r,g,b  SETCOLOR i,n                S[tter f[rgregistren. i [r f[rgnummret och r,g och b [r r\tt,gr\nt och bl]tt och kan vara mellan 
0 till 7. Om man anv[der SETCOLOR i,n s] [r n=t*256+g*16+b
SETTIME tifstr[ng,datumstr[ng                 S[tter den interna klockan.
SGET var                                      L[ser in hela bildminnet i var.
SGN(x)                                        Testar om x [r negativt, 0 eller positivt.
SHOWM                                         G\r muspilen synlig.
SIN(x)                                        Returnerar sin f\r x.
SOUND st[mma,styrka,not,octav[,tid]
St{mma=1-3
styrka=0-15 (0=l{gst)
not=1-12
1=c
2=#c
3=d
4=#d
5=e
6=f
7=#f
8=g
9=#g
10=a
11=#a
12=b
oktav=1-8
tid {r i 1/50 sekunder.
Man kan {ven ange frekvensen med #period som man ber{knar:
periode=TRUNC(125000/frekvens+.5)

SPACE$(x)                            Ger en str{ng med x stycken mellanslag.
SPC(x)                               Skriver i ett print kommando, n blankslag.
SPOKE x,n SDPOKE x,n SLPOKE x,n      Skriver 1,2 eller 4 bytes i minnet. Dessa kommandon utf|rs i "supervisor" mode.
SPRITE a$[,x,y)                      Ritar ut en i a$ definierad sprite p} angivna koordinater eller raderar den om inga koordinater angivits. 
a$ {r uppbyggd p} f|ljande s{tt:
a$=mki$(x-koordinaten f|r aktionspunkten)
+mki$(y-koordinaten f|r aktionspunkten)
+mki$(x) x=0 normal x=1 XOR
+mki$(maskf{rg)
+mki$(spritef{rg)
+b$ bitm|nster f|r mask och sprite
Totalt (2*(5+2*16))=74
Bitm|nstret f|r mask och sprite ligger alternerande.
SPUT var                             Kopierar var till bildminnet.
SQR(x)                               Returnerar kvadratroten ur x.
STOP                                 Stoppar programmet men st{nger inga filer, g|r det m|jligt att starta det med CONT.
STR$(x)                              Omvandlar ett x till en decimal str{ng. 
STRING$(n,str{ng)                    Producerar en str{ng som {r n upprepningar an str{ng. str{ng kan {ven vara ett ASCII nummer.
SUB var,n                            Minskar var med n.
SWAP var1,var2                       Byter inneh}ll i 2 variabler. Om de {r f{lt s} blir {ven dimensioneringen utbytt.
SYSTEN                               G}r till GEM-desktop.
TAB(n)                               Placerar mark|ren i kolumn n. Kan bara anv{ndas med print.
TAN(X)                               Returnerar tangent funktionen f|r x.
TEXT x,y,[l,]str{ng                  Skriver ut en text i grafik mode p} koordinaterna x,y.i<0 juster mellanrummet mellan orden.i>0 justerar mellan rummet 
mellan bokst{verna.
TIME$                                Returnerar en str{ng med systemtiden. HH:MM:SS
TIMER                                Returnerar hur l{ng tid datorn har varit p} i 1/200 sek.
TITLEW n,"titel"                     Ger f|nster n en rubrik. Om man f|re OPENW utf|r TITLEW n,"" s} skrivs det inte ut n}gon titel rad.
TROFF                                Bryter TRACE funktionen.
TRON [#n]                            Aktiverar TRACE funktionen som skriver ut varje instruktion som utf|rs.Caps-lock minskar hastigheten och 
h|ger skift stoppar.
TRUE                                 Logisk konstant -1.
TRUNC(x)                             Returnerar heltalsdelen av x.Kapar vid decimal punkten.
TYPE(ptr)                            Returnerar ett v{rde beroende p} vad ptr pekar p}.
0=var
1=var$
2=var%
3=var!
4=var()
5=var$()
6=var%()
7=var!()

UPPER$(str{ng)                       {ndrar alla gemena bokst{ver i en str{ng till versaler.
VAL(x$)                              |verf|r str{ng till ett numrisktv{rde.
VAL?(x$)                             Returnerar hur m}nga tecken fr}n v{nster som VAL kan konvertera till en numrisk variabel
VARPTR(var)                         Returnerar adressen till variabelns placering i minnet.
VDIBASE                              Best{mmer adressen ovanf|r GFA-BASIC som operativsystenet anv{nder f|r tabeller 
och variabler.
VOID exp                             Anv{nds ist{llet f\r on|diga tilldelningsoperationer.
VSYNC                                Synkroniserar grafiska kommandon med bildsk{rmen.
WAVE voc,env,form,len,dur            Producerar ljud.
voc styr de 3 kanalerna bit-vis och har f|ljande inneb|rd:
1=kanal 1
2=kanal 2
4=kanal 3
8=brus 1
16=brus 2
32=brus 3
 env definierar beroende p} dess bitm|nster f|r vilka kanaler envelope skall vara aktivt, och form anger 
envelopens form:
0-3=linj{rt fallande
4-7=linj{rt stigande med stopp
8=s}gtandsform fallande
9=linj{rt fallande
10=topp d{refter fallande
11=linj{rt fallande, slinga
12=stigande s}gtand
13=linhj{rt stigande slinga
14=topp sedan stigande
15=linj{rt stigande
 len specificerar periodel{ngden av envelopen(stor period f|rl{nger envelopen) dur {r den tid det tar innan 
n{sta kommando blir utfort i 1/50 sek.WAVE 0,0 tystar alla kanalerna.

WHILE vilkor                         Skapar en vilkorlig slinga d{r programmet mellan WHILE och WEND utf|rs till vilkoret {r uppfyllt.
WEND
WRITE [utr][;]     WRITE #n[,utr][;] Skriver data till sekvensiella filer som sedan kan l{sas tillbaka in men input. utr {r en lista med utr, skilda med 
komma tecken.
------------------------------------------------------------------------------------------------------------------------------------------------------------
ADDRIN          Adress till AES adress input block.
ADDROUT         Adress till AES adress output block.
CONTRL          Adress til VDI control block.
GB              Adress till AES paramenter block.
GCONTRL         Adress til AES controll block.
GINTIN          Adress till AES integer input block.
GINTOUT         Adress till AES integer output block.    
INTIN           Adress till VDI integer input block.
INTOUT          Adress till VDI integer output block.
PTSIN           Adress till VDI point input block.
PTSOUT          Adress till VDI point output block.
WINDTAB         Adressen till f|nsterparamenter tabellen.
Tabellens uppbyggnad:
1.1=Identifikation.
2=Attribut.
3=X-koordinat         
4=Y-koordinat
5=Bredd
6=H|jd.
2=Zoom 1
3=Zoom 1
4=Zoom 1
5.1=Sken paramenter(-1)
2=Sken paramenter (0)
3=Bildsk{rm x-koordinat.
4=Bildsk{rm y-koordinat.
5=Bilsk{rm bredd
6=Bildsk{rm h|jd.
6.1=x-m|tespunkt f|r 4 f|nster.
2=y-m|tespunkt f|r 4 f|nster
7.1 x-origin f|r grafikkommandon.
2=y-origin f|r grafikkommandon.



BIOS            Bios(f[,parameterlista])
XBIOS           Xbios(f[,parameterlista])
GEMDOS          Gemdos(f[,parameterlista])

                                                   

      
                                                                        
                                    
                                                                                                                  
                                                                                       




 
 
 

 
                        









 
      


