********************************************************************
 *******     S} h{r g|r man raster interrupts p} ST:n.   **********
 *******               Av Mike Westwood 890415.          **********
******************************************************************** 

F|r att f|rs} f|ljande text s} {r det en f|ruts{tning att ni har en
bok som heter ATARI ST INTERNALS eller n}gon annan d{r det finns en
f|rklarning p} alla register i MFP:n och att du kan assembler 
n}gorlunda.
	
F|r att g|ra en raster interrupt p} ST s{ kan man anv{nda sig av 
ett chip som heter MFP. I den finns det 4 olika timers, A,B,C och D.
N{r man g|r raster interrupts s} anv{nder man timer B. I MFP:n s} finns
det olika register som man styr interrupterna med och dom ska vi anv{nda
f|r att f} ig}ng en raster interrupt.
  F|rst av allt s} ska man st{nga av alla andra interrupts utom just
timer B som vi ska anv{nda. Detta g|r men genom att s{tta alla bitarna
till noll i IERA och IERB utom timer B biten som ska vara p}. 
Sen m}ste man s{tta p} timer B i mask registret, med vilken man maska av
interrupter {ven om dom {r ig}ng, genom att s{tta p} bit 1.

  Sen m}ste man ju ocks} tala om hur ofta det ska intr{ffa en interrupt,
det g|r man med timer B data registret, i v}rat fall s} vill vi att v}ran
interrupt ska utf|ras varje raster linje s} vi sl{nger in en etta d{r.
Vill man att det ska intr{ffa en raster interrupt t.ex. varje tionde
raster linje s} {r det bara att sl{nga in tio i det registret.

Sen ska man ju tala om vart datorn hoppar vid varje HBL interrupt,HBL
kallas raster interrupts p} ST:n, det g|r man genom att {ndra en pekare
som finns p} $120. Man sl{nger in adressen p} sin egen HBL rutin in i 
$120. Varje g}ng en HBL interrupt utf|rs s} st{ngs timer B av f|r att 
det inte ska kunna intr{ffa en ny interrupt mitt i HBL rutinen, s} man
m}ste s{tta p} timer B i slutet av sin HBL rutin genom att s{tta bit 1
till noll i ISRA. 

  F|r att kunna tajma sitt raster s} m}ste man p} n}got s{tt veta n{r
raster str}len {r p} f|rsta raden,h|gst upp p} sk{rmen. Detta g|r man 
med VBL interrupten. Det {r en interrupt som intr{ffar varje g}ng raster 
str}len {r l{ngst ner p} sk{rmen och ska hoppa upp igen. I den kan man
t.ex nollst{lla en r{knare som man har f|r att r{kna var p} sk{rmen 
rasterstr}len befinner sig, genom att plussa p} med ett vid varje HBL
interrupt. Denna interrupt {r ig}ng hela tiden och datorn hoppar till
sin egen rutin vid varje interrupt. F|r att veta vart den ska hoppa 
s} kollar den i $70 efter en adress och hoppar dit. Normalt s} ligger
d{r en adress som pekar p} datorn egen VBL rutin,men om man l{gger in
en pekare d{r som pekar till sin egen rutin s} f}r man sin egen rutin
utf|rd vid varje VBL interrupt.

  Detta {r i princip allting man beh|ver f|r raster interrupts. Men f|r
att f} ett funkande program som man kan avsluta s} m}ste man spara alla
v{rden i MFP:n som man anv{nder och }terst{lla dessa n{r man avslutar 
programmet, och s} m}ste man k|ra programmet i suprvisor mode f|r MFP
registren ligger i skyddat minnes utrymme. 
  Om ni har n}gra fr}gor eller andra synpukter p} detta s} {r det bara
att skriva ett brev till mig.
  Jag har inte gjort n{got ex. prog , utan ni f}r 
sj{lv f|rs|ka f|rst, sedan om ni k|r fast s{ kan jag l{gga in ett 
exempel program, om det {r ett allm{nt |nskem}l.
