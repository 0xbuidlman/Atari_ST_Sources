head	1.10;
access;
symbols;
locks
	ersmith:1.10;
comment	@ * @;


1.10
date	93.06.15.22.53.36;	author ersmith;	state Exp;
branches;
next	1.9;

1.9
date	93.06.14.23.48.02;	author ersmith;	state Exp;
branches;
next	1.8;

1.8
date	93.06.09.23.47.00;	author ersmith;	state Exp;
branches;
next	1.7;

1.7
date	93.05.12.15.50.18;	author ersmith;	state Exp;
branches;
next	1.6;

1.6
date	93.04.27.23.00.14;	author ersmith;	state Exp;
branches;
next	1.5;

1.5
date	93.04.14.22.19.54;	author ersmith;	state Exp;
branches;
next	1.4;

1.4
date	93.03.12.19.51.12;	author ersmith;	state Exp;
branches;
next	1.3;

1.3
date	93.03.10.20.12.42;	author ersmith;	state Exp;
branches;
next	1.2;

1.2
date	93.03.08.20.07.02;	author ersmith;	state Exp;
branches;
next	1.1;

1.1
date	93.02.24.23.52.46;	author ersmith;	state Exp;
branches;
next	1.0;

1.0
date	93.02.03.21.26.46;	author ersmith;	state Exp;
branches;
next	;


desc
@GEM initialization code (?)
@


1.10
log
@Minor resource editing, elclean ups, etc.
@
text
@/*	GEMAINTS.C	1/27/84 - 01/18/85	Lee Jay Lorenzen	*/
/*	Reg Opt		03/09/95		Derek Mui		*/
/*	Changed at signal for acc wait	7/13/90	D.Mui			*/
/*	Convert to Lattice C 5.51	2/17/93 C.Gee			*/
/*	Force the use of prototypes	2/25/93 C.Gee			*/

/*	-----------------------------------------------------------
*	AES Version 4.0	MultiTOS version is written by Derek M. Mui
*	Copyright (C) 1992 
*	Atari (U.S.) Corp
*	All Rights Reserved
*	-----------------------------------------------------------
*/	

/*
*	-------------------------------------------------------------
*	GEM Application Environment Services		  Version 1.0
*	Serial No.  XXXX-0000-654321		  All Rights Reserved
*	Copyright (C) 1985			Digital Research Inc.
*	-------------------------------------------------------------
*/
#include "pgem.h"
#include "pmisc.h"

#include "machine.h"
#include "dispvars.h"


/*	Signal a sleeping process that it is ready to wake up	*/ 

	VOID
signal( e )
	EVB		*e;
{
	REG PD		*p, *p1, *q1;
	WORD		first;

	p = (PD *) e->e_pd;
	p->p_evflg |= e->e_mask;	/* mark this evb as satisfied	*/
		
	first = TRUE;

	p1 = nrl;			/* starting p	*/
	q1 = (PD*)0;
m_1:
	while( p1 )			/* Look for the process	*/
	{				/* on the nrl		*/
	  if ( p1 == p )
	    break;
	  else
	  {
	    q1 = p1;
	    p1 = p1->p_link;
	  }
	}

	if ( !p1 )
	{
	  if ( first )
	  {
	    first = FALSE;
	    p1 = drl;
	    q1 = (PD*)0;
	    goto m_1;
	  }
	}

	if ( ( p1 ) && ( p != currpd ) )
	{
	  if ( p->p_evflg & p->p_evwait )
	  {
	    if ( first )
	    {
	      if ( q1 )		/* Find the queue */
	        q1->p_link = p->p_link;
	      else		/* At the head */
	        nrl = p->p_link;
	   
	      if ( p->p_prvstate == PS_BLOCKED )
	      {
	        p->p_prvstate = PS_RUN;
	        link_head( &slr, p );
	      }
	      else
	      {
		p->p_state = PS_READY;
	        p->p_link = drl;
	        drl = p;
	      }
	    }
	  }
	}
}



/*	Put the satisfied EVB on the zombie list	*/
/* 	Must be called with dispatching off		*/

	VOID
zombie(e)
	REG EVB		*e;
{
	if ( e->e_link = zel )
	  zel->e_pred = e;

	e->e_pred = (EVB*)0;
	e->e_head = &zel;
	zel = e;
	e->e_flag = COMPLETE;
	signal(e);		/* wake up the process	*/
}

@


1.9
log
@Merged in Hans-Martin and Cary's changes
@
text
@@


1.8
log
@Another check in to save work.
@
text
@@


1.7
log
@Check in to save work
@
text
@@


1.6
log
@Merged Cary's and Hans-Martin's changes
@
text
@@


1.5
log
@Incorporated more single/multitasking changes.
@
text
@@


1.4
log
@Merged HMK's loadable resource stuff
@
text
@@


1.3
log
@Lattice port
@
text
@@


1.2
log
@REAL MultiTOS 1.01
@
text
@d4 2
d22 2
d25 2
a26 4
#include <compiler.h>
#include <machine.h>
#include <pdstruct.h>
#include <dispvars.h>
@


1.1
log
@1 meg floppy MultiTOS
@
text
@@


1.0
log
@MultiTOS version 1.0
@
text
@@
