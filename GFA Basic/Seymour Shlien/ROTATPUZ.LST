' rotatpuz
' programmed by Seymour Shlien in GFA Basic 3.5
' 624 Courtenay Avenue
' Ottawa, Ontario
' Canada  K2A 3B5
DIM frame%(10000)
DIM frame_ptr%(2)
DIM diskcolor%(16)
DIM deskcolors%(16)
DIM circ$(16)
DIM xthresh%(4),ythresh%(4)
DIM goal%(7,16)
frame_ptr%(1)=VARPTR(frame%(0))
frame_ptr%(1)=(frame_ptr%(1)+256) AND &HFFFFFF00
frame_ptr%(0)=XBIOS(2)
unit_space=15
x_left=40
y_top=40
radius=10
@load_goal
@load_diskcolor
@get_deskcolors
VSETCOLOR 2,12,0,0
VSETCOLOR 3,0,12,0
VSETCOLOR 4,0,0,12
VSETCOLOR 5,14,14,0
VSETCOLOR 6,10,10,10
CLS
DEFMOUSE 0
DEFFILL 1
PBOX 0,0,2*radius,2*radius
FOR i%=0 TO 15
  DEFFILL (i% DIV 4)+2,1
  PCIRCLE radius,radius,radius
  GRAPHMODE 2
  TEXT radius-3,radius+3,STR$(i% MOD 4)
  GRAPHMODE 1
  GET 0,0,2*radius,2*radius,circ$(i%)
NEXT i%
DEFFILL 1
PBOX 0,0,2*radius,2*radius
DEFFILL 6
PCIRCLE 6,6,6
GET 0,0,12,12,knob$
DEFFILL 0
PBOX 0,0,2*radius,2*radius
TEXT 250,185,"Quit"
problem%=0
@draw_puzzle
@show_goal
@shuffle
quit%=0
REPEAT
  @get_pick
UNTIL quit%=1
@restore_deskcolors
> PROCEDURE get_deskcolors
  LOCAL i%
  FOR i%=0 TO 15
    deskcolors%(i%)=XBIOS(7,i%,-1)
  NEXT i%
RETURN
> PROCEDURE restore_deskcolors
  LOCAL i%
  FOR i%=0 TO 15
    SETCOLOR i%,deskcolors%(i%)
  NEXT i%
RETURN
> PROCEDURE blocks_doc
  '
  ' the blocks in diskcolor% array are ordered as follows
  '   0  1  4  5
  '   3  2  7  6
  '   8  9 12 13
  '  10 11 15 14
RETURN
> PROCEDURE draw_4_disks(angle,num%,i%)
  screen1%=i% MOD 2
  screen2%=(i%+1) MOD 2
  shift%=num%*4
  VSYNC
  ~XBIOS(5,L:frame_ptr%(screen1%),L:-1,-1)
  DEFFILL 1
  side=unit_space+radius+8
  PBOX x_offset2-side,y_offset2-side,x_offset2+side,y_offset2+side
  DEFFILL 1
  xproj=COS(angle)
  yproj=SIN(angle)
  xr=unit_space*(xproj+yproj)
  yr=unit_space*(xproj-yproj)
  '
  ' the disk are drawn in the order
  '                 2nd  3rd
  '                 4th  1st
  IF num%<4
    PUT x_offset+xr,y_offset+yr,circ$(diskcolor%(shift%+2))
    PUT x_offset-xr,y_offset-yr,circ$(diskcolor%(shift%))
    PUT x_offset-yr,y_offset+xr,circ$(diskcolor%(shift%+3))
    PUT x_offset+yr,y_offset-xr,circ$(diskcolor%(shift%+1))
  ENDIF
  IF num%=4
    PUT x_offset+xr,y_offset+yr,circ$(diskcolor%(12))
    PUT x_offset-xr,y_offset-yr,circ$(diskcolor%(2))
    PUT x_offset-yr,y_offset+xr,circ$(diskcolor%(9))
    PUT x_offset+yr,y_offset-xr,circ$(diskcolor%(7))
  ENDIF
  @place_knobs
  ~XBIOS(5,L:-1,L:frame_ptr%(screen1%),-1)
RETURN
> PROCEDURE rotate_disk_set(num%,dir%)
  LOCAL angle,shift%,tmp%
  angle=1.5708
  ' angle=0.3
  IF (dir%<0)
    angle=-angle
  ENDIF
  IF num%<4
    x_offset=(num% MOD 2)*unit_space*4+x_left
    y_offset=(num% DIV 2)*unit_space*4+y_top
    x_offset2=x_offset+radius
    y_offset2=y_offset+radius
    FOR i%=1 TO 30
      fangle=angle*i%/30
      draw_4_disks(fangle,num%,i%)
    NEXT i%
    BMOVE frame_ptr%(screen1%),frame_ptr%(screen2%),32000
    shift%=num%*4
    tmp%=diskcolor%(shift%)
    IF dir%>0
      diskcolor%(shift%)=diskcolor%(shift%+1)
      diskcolor%(shift%+1)=diskcolor%(shift%+2)
      diskcolor%(shift%+2)=diskcolor%(shift%+3)
      diskcolor%(shift%+3)=tmp%
    ELSE
      diskcolor%(shift%)=diskcolor%(shift%+3)
      diskcolor%(shift%+3)=diskcolor%(shift%+2)
      diskcolor%(shift%+2)=diskcolor%(shift%+1)
      diskcolor%(shift%+1)=tmp%
    ENDIF
  ENDIF
  IF num%=4
    x_offset=unit_space*2+x_left
    y_offset=unit_space*2+y_top
    x_offset2=x_offset+radius
    y_offset2=y_offset+radius
    FOR i%=1 TO 30
      fangle=angle*i%/30
      draw_4_disks(fangle,num%,i%)
    NEXT i%
    BMOVE frame_ptr%(screen1%),frame_ptr%(screen2%),32000
    tmp%=diskcolor%(7)
    IF dir%>0
      diskcolor%(7)=diskcolor%(12)
      diskcolor%(12)=diskcolor%(9)
      diskcolor%(9)=diskcolor%(2)
      diskcolor%(2)=tmp%
    ELSE
      diskcolor%(7)=diskcolor%(2)
      diskcolor%(2)=diskcolor%(9)
      diskcolor%(9)=diskcolor%(12)
      diskcolor%(12)=tmp%
    ENDIF
  ENDIF
  SHOWM
  IF @goal_achieved=TRUE
    TEXT 100,180,"very good"
  ENDIF
RETURN
> PROCEDURE draw_puzzle
  LOCAL k%,si,sj
  k%=0
  DEFFILL 6
  si=x_left-unit_space-8
  sj=y_top-unit_space-8
  PBOX si,sj,si+8*unit_space+12,sj+8*unit_space+12
  DEFFILL 1
  PBOX si,sj,si+8*unit_space+8,sj+8*unit_space+8
  FOR j%=0 TO 1
    FOR i%=0 TO 1
      si=unit_space*4*i%
      sj=unit_space*4*j%
      PUT si+x_left-unit_space,sj+y_top-unit_space,circ$(diskcolor%(k%))
      INC k%
      PUT si+x_left+unit_space,sj+y_top-unit_space,circ$(diskcolor%(k%))
      INC k%
      PUT si+x_left+unit_space,sj+y_top+unit_space,circ$(diskcolor%(k%))
      INC k%
      PUT si+x_left-unit_space,sj+y_top+unit_space,circ$(diskcolor%(k%))
      INC k%
    NEXT i%
  NEXT j%
  FOR i%=0 TO 3
    si=unit_space*2*i%+x_left-radius/2
    xthresh%(i%)=si
    '    LINE si,10,si,190
  NEXT i%
  FOR j%=0 TO 3
    sj=unit_space*2*j%+y_top-radius/2
    ythresh%(j%)=sj
    '   LINE 5,sj,250,sj
  NEXT j%
  @place_knobs
  BMOVE frame_ptr%(0),frame_ptr%(1),32000
  SHOWM
RETURN
> PROCEDURE place_knobs
  DEFFILL 6
  si=(xthresh%(0)+xthresh%(1))/2-6
  sj=(ythresh%(0)+ythresh%(1))/2-6
  PUT si,sj,knob$
  sj=(ythresh%(2)+ythresh%(3))/2-6
  PUT si,sj,knob$
  si=(xthresh%(2)+xthresh%(3))/2-6
  PUT si,sj,knob$
  sj=(ythresh%(0)+ythresh%(1))/2-6
  PUT si,sj,knob$
  si=(xthresh%(1)+xthresh%(2))/2-6
  sj=(ythresh%(1)+ythresh%(2))/2-6
  PUT si,sj,knob$
  SHOWM
RETURN
> PROCEDURE get_pick
  IF MOUSEK<>0
    IF MOUSEK=1
      clock%=1
    ELSE
      clock%=-1
    ENDIF
    xpick%=MOUSEX
    ypick%=MOUSEY
    IF xpick%>xthresh%(0)
      IF xpick%<xthresh%(3)
        IF ypick%>ythresh%(0)
          IF ypick%<ythresh%(3)
            '
            IF xpick%<xthresh%(1)
              IF ypick%<ythresh%(1)
                @rotate_disk_set(0,clock%)
              ELSE IF ypick%>ythresh%(2)
                @rotate_disk_set(2,clock%)
              ENDIF
            ELSE IF xpick%>xthresh%(2)
              IF ypick%<ythresh%(1)
                @rotate_disk_set(1,clock%)
              ELSE IF ypick%>ythresh%(2)
                @rotate_disk_set(3,clock%)
              ENDIF
            ELSE IF xpick%<xthresh%(2)
              IF ypick%>ythresh%(1)
                IF ypick%<ythresh%(2)
                  @rotate_disk_set(4,clock%)
                ENDIF
              ENDIF
            ENDIF
          ENDIF
        ENDIF
      ENDIF
    ENDIF
    IF xpick%>250 AND ypick%>170
      quit%=1
    ENDIF
    IF xpick%>240
      IF xpick%<300
        IF ypick%>20
          IF ypick%<80
            INC problem%
            IF problem%>6
              problem%=0
            ENDIF
            @show_goal
            PAUSE 20
          ENDIF
        ENDIF
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE shuffle
  LOCAL t%,clock%
  FOR t%=0 TO 3
    clock%=RANDOM(2)
    IF clock%=0
      clock%=-1
    ENDIF
    rotate_disk_set(4,clock%)
    disk%=RANDOM(4)
    clock%=RANDOM(2)
    IF clock%=0
      clock%=-1
    ENDIF
    rotate_disk_set(disk%,clock%)
  NEXT t%
RETURN
> PROCEDURE show_goal
  LOCAL k%,si,sj
  k%=0
  TEXT 256,14,"goal"
  DEFFILL 1
  PBOX 240,20,300,80
  FOR j%=0 TO 1
    FOR i%=0 TO 1
      si=250+i%*20
      sj=30+j%*20
      DEFFILL goal%(problem%,k%) DIV 4+2
      PBOX si,sj,si+8,sj+8
      GRAPHMODE 2
      TEXT si,sj+7,STR$(goal%(problem%,k%) MOD 4)
      GRAPHMODE 1
      INC k%
      DEFFILL goal%(problem%,k%) DIV 4+2
      PBOX si+10,sj,si+18,sj+8
      GRAPHMODE 2
      TEXT si+10,sj+7,STR$(goal%(problem%,k%) MOD 4)
      GRAPHMODE 1
      INC k%
      DEFFILL goal%(problem%,k%) DIV 4+2
      PBOX si+10,sj+10,si+18,sj+18
      GRAPHMODE 2
      TEXT si+10,sj+17,STR$(goal%(problem%,k%) MOD 4)
      GRAPHMODE 1
      INC k%
      DEFFILL goal%(problem%,k%) DIV 4+2
      PBOX si,sj+10,si+8,sj+18
      GRAPHMODE 2
      TEXT si,sj+17,STR$(goal%(problem%,k%) MOD 4)
      GRAPHMODE 1
      INC k%
    NEXT i%
  NEXT j%
  BMOVE frame_ptr%(0),frame_ptr%(1),32000
  SHOWM
  TEXT 100,180,"         "
RETURN
> FUNCTION goal_achieved
LOCAL k%
FOR k%=0 TO 15
  IF goal%(problem%,k%)<>diskcolor%(k%)
    RETURN FALSE
  ENDIF
NEXT k%
RETURN TRUE
ENDFUNC
> PROCEDURE load_goal
LOCAL i%,j%
FOR j%=0 TO 6
  FOR i%=0 TO 15
    READ goal%(j%,i%)
  NEXT i%
NEXT j%
DATA 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
DATA 0,4,8,12,1,5,9,13,2,6,10,14,3,7,11,15
DATA 8,12,13,9,4,5,6,7,10,14,15,11,0,1,2,3
DATA 4,8,9,5,0,12,13,1,6,10,11,7,2,14,15,3
DATA 4,12,5,13,8,0,9,1,14,6,15,7,2,10,3,11
DATA 0,1,5,4,2,3,7,6,8,9,12,12,10,11,15,14
DATA 8,4,0,9,5,12,13,1,10,3,6,11,2,14,15,7
RETURN
> PROCEDURE load_diskcolor
LOCAL i%
FOR i%=0 TO 15
  READ diskcolor%(i%)
NEXT i%
DATA 0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15
RETURN
