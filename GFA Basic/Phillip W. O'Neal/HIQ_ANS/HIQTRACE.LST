RESERVE 2000000
@init
@trace
'
> PROCEDURE init
  COLOR 1
  DIM x%(14),y%(14),see%(14)
  DIM moves%(2,59),answer%(1,14,1000)
  '
  FOR x%=0 TO 59
    READ moves%(0,x%)
    READ moves%(1,x%)
    READ moves%(2,x%)
    '
  NEXT x%
  '
  FOR x%=0 TO 14
    READ x%(x%),y%(x%)
  NEXT x%
  '
  screen_width%=WORK_OUT(0)+1
  screen_height%=WORK_OUT(1)+1
  peg_step%=11
  board_step%=peg_step%*12
  '
RETURN
'
> PROCEDURE trace
  current%=&X111111111110111
  answer%(0,0,0)=current%
  FOR move%=1 TO 13
    seed%=0
    max_check%=0
    DO
      @test
      INC seed%
    LOOP UNTIL answer%(0,move%-1,seed%)=0
  NEXT move%
  '
  answer%=0
  DO
    current%=answer%(0,0,0)
    see%(0)=current%
    '
    back%=answer%(1,13,answer%)
    FOR move%=1 TO 12
      current%=answer%(0,13-move%,back%)
      see%(13-move%)=current%
      back%=answer%(1,13-move%,back%)
    NEXT move%
    '
    current%=answer%(0,13,answer%)
    see%(13)=current%
    '
    FOR move%=0 TO 13
      current%=see%(move%)
      @show
      '
    NEXT move%
    '
    INC answer%
    '
    DO
    LOOP UNTIL MOUSEK=2
    '
    board_x%=0
    board_y%=0
    CLS
    '
  LOOP WHILE answer%(0,13,answer%)>0
  '
RETURN
'
> PROCEDURE test
  FOR try%=0 TO 59
    current%=answer%(0,move%-1,seed%)
    temp_current%=current%
    test_on%=moves%(0,try%)
    test_on2%=moves%(1,try%)
    test_off%=moves%(2,try%)
    '
    IF test_on2%+test_off% THEN
      IF BTST(current%,test_on%)=-1 AND BTST(current%,test_on2%)=-1 AND BTST(current%,test_off%)=0 THEN
        temp_current%=BCLR(temp_current%,test_on%)
        temp_current%=BCLR(temp_current%,test_on2%)
        temp_current%=BSET(temp_current%,test_off%)
        '
        IF max_check%>0 THEN
          flag%=0
          temp%=0
          DO
            IF answer%(0,move%,temp%)=temp_current%
              flag%=1
            ENDIF
            INC temp%
            '
          LOOP UNTIL answer%(0,move%,temp%)=0 OR flag%=1
          IF flag%=0 THEN
            answer%(0,move%,max_check%)=temp_current%
            answer%(1,move%,max_check%)=seed%
            INC max_check%
          ENDIF
        ELSE
          answer%(0,move%,max_check%)=temp_current%
          answer%(1,move%,max_check%)=seed%
          INC max_check%
        ENDIF
        '
      ENDIF
      '
    ENDIF
  NEXT try%
  '
RETURN
'
> PROCEDURE show
  FOR bit%=0 TO 14
    IF BTST(current%,bit%) THEN
      PCIRCLE x%(bit%)*peg_step%+board_x%,y%(bit%)*peg_step%+board_y%,peg_step%/2
    ELSE
      CIRCLE x%(bit%)*peg_step%+board_x%,y%(bit%)*peg_step%+board_y%,peg_step%/2
    ENDIF
    '
  NEXT bit%
  board_x%=board_x%+board_step%
  IF board_x%>screen_width%-board_step% THEN
    board_x%=0
    board_y%=board_y%+board_step%
    IF board_y%>screen_height%-board_step% THEN
      board_x%=0
      board_y%=0
      DO
      LOOP UNTIL MOUSEK=2
      CLS
    ENDIF
  ENDIF
  '
RETURN
'
DATA 0,1,3,0,2,5,0,0,0,0,0,0
DATA 1,3,6,1,4,8,1,0,0,1,0,0
DATA 2,4,7,2,5,9,2,0,0,2,0,0
DATA 3,1,0,3,4,5,3,7,12,3,6,10
DATA 4,7,11,4,8,13,4,0,0,4,0,0
DATA 5,2,0,5,4,3,5,8,12,5,9,14
DATA 6,3,1,6,7,8,6,0,0,6,0,0
DATA 7,4,2,7,8,9,7,0,0,7,0,0
DATA 8,4,1,8,7,6,8,0,0,8,0,0
DATA 9,5,2,9,8,7,9,0,0,9,0,0
DATA 10,6,3,10,11,12,10,0,0,10,0,0
DATA 11,7,4,11,12,13,11,0,0,11,0,0
DATA 12,7,3,12,8,5,12,11,10,12,13,14
DATA 13,8,4,13,12,11,13,0,0,13,0,0
DATA 14,9,5,14,13,12,14,0,0,14,0,0
'
DATA 5,1,4,3,6,3,3,5,5,5,7,5,2,7,4,7,6,7,8,7,1,9,3,9,5,9,7,9,9,9
