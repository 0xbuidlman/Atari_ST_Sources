' RESERVE 2000000
$M2048000
@init_variables
DO
  @event ! JUST WAIT FOR THE USER TO DO SOMETHING
LOOP
> PROCEDURE event
  event_type&=EVNT_MULTI(&X110011,1,1,1,0,0,0,0,0,0,0,0,0,0,buffer%,1000,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
  @check_event
RETURN
> PROCEDURE init_variables
  my_handle&=V~H  ! GET VDI HANDLE OF PROGRAMS WORKSTATION
  handle&=APPL_INIT()
  @check_jar
  IF id$<>"_SPD"
    END
  ENDIF
  screen_width%=WORK_OUT(0)
  screen_height%=WORK_OUT(1)
  old_dta%=FGETDTA()
  dta%=GEMDOS(72,L:1024)
  ~FSETDTA(dta%)
  DEFLINE 1,2,8
  OPTION BASE 0
  DIM buffer&(7)  ! EVENT BUFFER FOR EVENT_MULTI CALL
  buffer%=VARPTR(buffer&(0))
  DIM address%(32000),ow%(32000),oh%(32000)
  current_drive%=GEMDOS(25)            ! DRIVE PROGRAM WAS RAN FROM
  my_path$=DIR$(current_drive%+1)+"\"  ! PATH     "     "   "   "
  IF MID$(my_path$,1,1)="\" THEN
    my_path$=CHR$(current_drive%+65)+":"+my_path$
  ENDIF
  view_path$=my_path$
  view_name$=""
  rsc%=0
  @window_setup
  DEFMOUSE 0  ! BE SURE MOUSE SHAPE IS A POINTER
RETURN
> PROCEDURE window_setup
  main_w%=168
  main_h%=16
  main_x%=(screen_width%-main_w%)/2
  main_y%=(screen_height%-main_h%)/2
  INLINE window_title%,128
  flag%=WIND_GET(0,4,mwx%,mwy%,mww%,mwh%)
  ~WIND_CALC(0,&X1001,main_x%,main_y%,main_w%,main_h%,window_x%,window_y%,window_w%,window_h%)
  window_handle%=WIND_CREATE(&X1001,mwx%,mwy%,mww%,mwh%)
  window_title$=" GDOS RSC printer"+CHR$(0)
  CHAR{window_title%}=window_title$
  flag%=WIND_SET(window_handle%,2,CARD(SWAP(window_title%)),CARD(window_title%),0,0)
  flag%=WIND_OPEN(window_handle%,window_x%,window_y%,window_w%,window_h%)
  flag%=WIND_GET(window_handle%,4,window_ix%,window_iy%,window_iw%,window_ih%)
RETURN
> PROCEDURE check_event
  IF event_type& AND &X1 THEN        ! KEY
    @event_keypress
  ENDIF
  IF event_type& AND &X10 THEN      ! BUTTON
    clicked_on%=WIND_FIND(x_mouse&,y_mouse&)
    IF window_handle%=clicked_on% THEN
      dialog_button%=INT((x_mouse&-window_ix%)/56)+1
      @process_button
    ENDIF
  ENDIF
  IF event_type& AND &X10000 THEN   ! MENU OR WINDOW EVENT
    command%=buffer&(0)       ! TYPE OF EVENT
    @event_window
  ENDIF
RETURN
> PROCEDURE event_window
  SELECT command%
  CASE 20     ! WIND UPDATE
    @repair
  CASE 21     ! WINDOW CLICKED ON
    flag%=WIND_SET(window_handle%,10,0,0,0,0) ! WINDOW SET TO TOP
    DEFMOUSE 0
  CASE 28 ! WINDOW MOVED
    window_x%=buffer&(4) ! GET NEW WINDOW POSITION/SIZE
    window_y%=buffer&(5)
    flag%=WIND_SET(window_handle%,5,window_x%,window_y%,window_w%,window_h%)     ! SIZE WINDOW
    flag%=WIND_GET(window_handle%,4,window_ix%,window_iy%,window_iw%,window_ih%) ! GET INSIDE SIZE
  ENDSELECT
RETURN
> PROCEDURE event_keypress
  code&=SHR(key_press& AND &HFF00,8)
  SELECT code&
  CASE 24 ! 'O' LOAD
    dialog_button%=1
    @process_button
  CASE 25 ! 'P'RINT
    dialog_button%=2
    @process_button
  CASE 16 ! 'Q'UIT
    dialog_button%=3
    @process_button
  ENDSELECT
RETURN
> PROCEDURE process_button
  SELECT dialog_button%
  CASE 1 ! LOAD
    @load
  CASE 2 ! PRINT
    @show
    ' @on_line
    ' IF on_line%=1 THEN
    ' @print
    ' ENDIF
  CASE 3 ! QUIT
    @trying_to_quit
  ENDSELECT
RETURN
> PROCEDURE repair
  er%=WIND_UPDATE(1)                      ! TELL GEM WE ARE TAKING OVER SCREEN
  er%=WIND_UPDATE(3)
  HIDEM
  er%=WIND_GET(window_handle%,11,fx%,fy%,fx2%,fy2%) ! GET FIRST RECTANGLE
  fix_wx%=buffer&(4)
  fix_wy%=buffer&(5)
  fix_ww%=buffer&(6)
  fix_wh%=buffer&(7)
  fix_flag%=RC_INTERSECT(fix_wx%,fix_wy%,fix_ww%,fix_wh%,fx%,fy%,fx2%,fy2%)
  IF fix_flag% THEN
    @display_main
  ENDIF
  fix_done%=0
  DO
    er%=WIND_GET(window_handle%,12,fx%,fy%,fx2%,fy2%) ! GET FIRST RECTANGLE
    IF fx2%+fy2%=0 THEN                          ! ANY MORE RECTANGLES ?
      fix_done%=1
    ELSE
      fix_wx%=buffer&(4)
      fix_wy%=buffer&(5)
      fix_ww%=buffer&(6)
      fix_wh%=buffer&(7)
      fix_flag%=RC_INTERSECT(fix_wx%,fix_wy%,fix_ww%,fix_wh%,fx%,fy%,fx2%,fy2%)
      IF fix_flag% THEN
        @display_main
      ENDIF
    ENDIF
  LOOP UNTIL fix_done%=1
  er%=WIND_UPDATE(2)
  er%=WIND_UPDATE(0)                      !  DONE WITH SCREEN
  SHOWM
RETURN
> PROCEDURE display_main
  CLIP fx%,fy%,fx2%,fy2%
  TEXT window_ix%,window_iy%+13,"  Load  Print  Quit  "
  LINE window_ix%+56,window_iy%,window_ix%+56,window_iy%+window_ih%
  LINE window_ix%+112,window_iy%,window_ix%+112,window_iy%+window_ih%
RETURN
> PROCEDURE trying_to_quit
  txt$=" |Sure you want to quit ?  | "
  ALERT 2,txt$,1,"OK|Cancel",button%
  IF button%=1 THEN
    ~FSETDTA(old_dta%)
    IF dta%>0 THEN
      d%=GEMDOS(73,L:dta%)  ! RELEASE MEMORY
    ENDIF
    ~WIND_CLOSE(window_handle%)
    ~WIND_DELETE(window_handle%)
    IF rsc%<>0 THEN
      ~RSRC_FREE()
    ENDIF
    END
  ENDIF
RETURN
> PROCEDURE check_jar
  jar%=LPEEK(1440) ! ADDRESS OF COOKIE JAR
  IF jar% THEN     ! IF JAR PRESENT THEN jar%=ADDRESS OF JAR
    cookie_num%=0
    DO
      cookie%=LPEEK(jar%+cookie_num%*8)
      cookie$=CHR$(SHR(cookie% AND &HFF000000,24))
      cookie$=cookie$+CHR$(SHR(cookie% AND &HFF0000,16))
      cookie$=cookie$+CHR$(SHR(cookie% AND &HFF00,8))
      cookie$=cookie$+CHR$(cookie% AND &HFF)
      IF cookie$="FSMC" THEN
        id%=LPEEK(LPEEK(jar%+cookie_num%*8+4))
        id$=CHR$(SHR(id% AND &HFF000000,24))
        id$=id$+CHR$(SHR(id% AND &HFF0000,16))
        id$=id$+CHR$(SHR(id% AND &HFF00,8))
        id$=id$+CHR$(id% AND &HFF)
      ENDIF
      INC cookie_num%
    LOOP UNTIL cookie%=0
  ENDIF
RETURN
> PROCEDURE load
  FILESELECT #"Select RSC file",view_path$+"*.*",view_name$,temp_name$
  IF temp_name$<>"" THEN
    view_test%=RINSTR(temp_name$,"\")
    IF view_test% THEN
      view_path$=MID$(temp_name$,1,view_test%)
      view_name$=MID$(temp_name$,view_test%+1)
    ELSE
      view_path$="\"
      view_name$=temp_name$
    ENDIF
    IF view_name$<>""
      search_file$=view_path$+view_name$+CHR$(0)
      ~FSETDTA(dta%)
      finished%=GEMDOS(78,L:V:search_file$,&X100111)
      DEFMOUSE 2
      IF finished%=0 THEN
        file$=CHAR{dta%+30}
        IF file$<>"." AND file$<>".."
          IF rsc%<>0 THEN
            ~RSRC_FREE()
          ENDIF
          rsc%=RSRC_LOAD(view_path$+view_name$)
        ENDIF
        ~FSETDTA(dta%)
      ENDIF
      DEFMOUSE 0
    ENDIF
  ENDIF
RETURN
> PROCEDURE open_workstation
  CONTRL(0)=1  ! V_OPNWK
  CONTRL(1)=0
  CONTRL(3)=11
  CONTRL(6)=0
  INTIN(0)=21
  INTIN(1)=1
  INTIN(2)=1
  INTIN(3)=1
  INTIN(4)=1
  INTIN(5)=1
  INTIN(6)=1
  INTIN(7)=1
  INTIN(8)=1
  INTIN(9)=1
  INTIN(10)=2
  VDISYS
  gdos_handle%=CONTRL(6)
  IF gdos_handle%<>0 THEN
    gdos_x_rez%=INTOUT(0)+1
    gdos_y_rez%=INTOUT(1)+1
  ENDIF
RETURN
> PROCEDURE setup_workstation
  IF gdos_handle%<>0 THEN
    V~H=gdos_handle%
    CLIP 0,0,gdos_x_rez%-1,gdos_y_rez%-1
  ENDIF
RETURN
> PROCEDURE close_workstation
  CONTRL(0)=2  ! V_CLSWK
  CONTRL(1)=0
  CONTRL(3)=0
  CONTRL(6)=gdos_handle%
  VDISYS
  V~H=-1
RETURN
> PROCEDURE print
  @open_workstation
  IF gdos_handle%<>0 THEN
    @setup_workstation
    @do_print
    @close_workstation
  ENDIF
RETURN
> PROCEDURE do_print
  @show
  @eject_page
RETURN
> PROCEDURE eject_page
  CONTRL(0)=4  ! V_UPDWK
  CONTRL(1)=0
  CONTRL(3)=0
  CONTRL(6)=gdos_handle%
  VDISYS
  CONTRL(0)=3  ! V_CLRWK
  CONTRL(1)=0
  CONTRL(3)=0
  CONTRL(6)=gdos_handle%
  VDISYS
RETURN
> PROCEDURE on_line
  on_line%=0
  DO
    IF OUT?(0) THEN
      on_line%=1
    ELSE
      ALERT 0,"Sorry, but your printer is  |off-line. Please check the  |printer and I will try again.  | ",1,"OK|Cancel",button%
      IF button%=2 THEN
        on_line%=-1
      ENDIF
    ENDIF
  LOOP UNTIL on_line%<>0
RETURN
> PROCEDURE show
  IF rsc%<>0 THEN
    trees%=0
    flag%=0
    DO
      ~RSRC_GADDR(0,trees%,address%(trees%))
      IF address%(trees%)<0 THEN
        DEC trees%
        flag%=1
      ELSE
        INC trees%
      ENDIF
    LOOP UNTIL flag%
    FOR try%=0 TO trees%
      ow%(try%)=OB_W(address%(try%),0)
      oh%(try%)=OB_H(address%(try%),0)
    NEXT try%
    DEFLINE 1,2,8
    flag%=WIND_SET(window_handle%,5,mwx%,mwy%,mww%,mwh%)
    flag%=WIND_GET(window_handle%,4,wx%,wy%,ww%,wh%)
    CLIP wx%,wy%,ww%,wh%
    DEFFILL 0,2,8
    PBOX wx%,wy%,wx%+ww%-1,wy%+wh%-1
    x%=wx%
    y%=wy%
    temp%=wy%
    FOR try%=0 TO trees%
      IF x%+ow%(try%)>wx%+ww% THEN
        x%=wx%
        y%=temp%
      ENDIF
      OB_X(address%(try%),0)=x%
      OB_Y(address%(try%),0)=y%
      ~OBJC_DRAW(address%(try%),0,7,x%,y%,ow%(try%),oh%(try%))
      BOX x%,y%,x%+ow%(try%)-1,y%+oh%(try%)-1
      x%=x%+ow%(try%)
      temp%=MAX(temp%,y%+oh%(try%))
    NEXT try%
    DO
    LOOP UNTIL MOUSEK=2
    flag%=WIND_SET(window_handle%,5,window_x%,window_y%,window_w%,window_h%)
  ENDIF
RETURN
