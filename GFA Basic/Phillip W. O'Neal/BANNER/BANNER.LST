' RESERVE 2000000
$M100000
@init_variables
DO
  @event ! JUST WAIT FOR THE USER TO DO SOMETHING
LOOP
> PROCEDURE event
  '
  event_type&=EVNT_MULTI(&X110011,1,1,1,0,0,0,0,0,0,0,0,0,0,buffer%,200,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
  @check_event
  '
RETURN
> PROCEDURE event_update
  '
  event_type&=EVNT_MULTI(&X110000,1,1,1,0,0,0,0,0,0,0,0,0,0,buffer%,200,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
  IF buffer&(0)=20 THEN
    @event_window
  ENDIF
  '
RETURN
> PROCEDURE init_variables
  '
  prg_handle&=APPL_INIT()
  my_handle&=V~H
  @check_jar
  '
  IF id$<>"_SPD"
    END
  ENDIF
  '
  OPTION BASE 0
  DIM font_name$(100),face%(100)
  DIM buffer&(7)  ! EVENT BUFFER FOR EVENT_MULTI CALL
  buffer%=VARPTR(buffer&(0))
  DIM my_buffer&(7)
  my_buffer%=VARPTR(my_buffer&(0))
  '
  screen_width%=WORK_OUT(0)
  screen_height%=WORK_OUT(1)
  screen_colors%=WORK_OUT(13)
  '
  CONTRL(0)=102  ! 'VQ_EXTND' - GET EXTRA INFO ABOUT WORKSTATION
  CONTRL(1)=0
  CONTRL(3)=1
  CONTRL(6)=prg_handle&
  INTIN(0)=1
  VDISYS
  screen_bits%=INTOUT(4)  ! GET # OF SCREEN PLANES
  '
  DEFFILL 0,2,8  ! COLOR 0 SOLID FILL PATTERN
  '
  current_drive%=GEMDOS(25)            ! DRIVE PROGRAM WAS RAN FROM
  my_path$=DIR$(current_drive%+1)+"\"  ! PATH     "     "   "   "
  IF MID$(my_path$,1,1)="\" THEN
    my_path$=CHR$(current_drive%+65)+":"+my_path$
  ENDIF
  rsc$=my_path$+"BANNER.RSC"
  '
  INLINE banner%,40
  banner$=""
  CHAR{banner%}=banner$
  fonts%=VST_LOAD_FONTS(0)
  FOR x%=1 TO MIN(fonts%+1,100)
    face%(x%)=VQT_NAME(x%,font_name$(x%))
  NEXT x%
  IF fonts%>1 THEN
    font%=2
  ELSE
    font%=1
  ENDIF
  points%=24
  driver%=21
  page%=0
  shadow%=1
  gdos_text_color%=1
  gdos_outline_color%=0
  gdos_shadow_color%=0
  '
  preview_open%=0
  @rsc_setup
  @window_setup
  @open_workstation
  IF gdos_handle%<>0 THEN
    @close_workstation
    SELECT gdos_colors%
    CASE 2
      FOR set%=4 TO 9
        ~OBJC_DELETE(font_color%,set%)
      NEXT set%
      OB_W(font_color%,1)=OB_W(font_color%,2)*2
      OB_H(font_color%,1)=OB_H(font_color%,2)
      font_color_w%=(font_color_w%/2)+4
      font_color_h%=(font_color_h%/2)+4
      '
    CASE 4
      FOR set%=6 TO 9
        ~OBJC_DELETE(font_color%,set%)
      NEXT set%
      OB_H(font_color%,1)=OB_H(font_color%,2)
      font_color_h%=(font_color_h%/2)+4
      '
    ENDSELECT
  ELSE
    FOR set%=4 TO 9
      ~OBJC_DELETE(font_color%,set%)
    NEXT set%
    OB_W(font_color%,1)=OB_W(font_color%,2)*2
    OB_H(font_color%,1)=OB_H(font_color%,2)
    font_color_w%=(font_color_w%/2)+4
    font_color_h%=(font_color_h%/2)+4
  ENDIF
  DEFMOUSE 0  ! BE SURE MOUSE SHAPE IS A POINTER
  '
RETURN
> PROCEDURE window_setup
  '
  min_ww%=220
  min_wh%=80
  '
  ~MENU_BAR(menu%,1)           ! TURN MENU ON
  INLINE window_title%,8
  INLINE preview_title%,8
  flag%=WIND_GET(0,4,mwx%,mwy%,mww%,mwh%)
  '
  ~WIND_CALC(1,&X1011,mwx%,mwy%,mww%,mwh%,d%,d%,iw%,ih%)
  plus_x%=mww%-iw%
  plus_y%=mwh%-ih%
  '
  window_x%=mwx%
  window_y%=mwy%
  '
  ~WIND_CALC(0,&X1011,window_x%+plus_x%,window_y%+plus_y%,main_w%,main_h%,d%,d%,window_w%,window_h%)
  '
  window_handle%=WIND_CREATE(&X1011,window_x%,window_y%,mww%,mwh%)
  '
  window_title$="Banner"+CHR$(0)
  CHAR{window_title%}=window_title$
  flag%=WIND_SET(window_handle%,2,CARD(SWAP(window_title%)),CARD(window_title%),0,0)
  '
  ~WIND_OPEN(window_handle%,window_x%,window_y%,window_w%,window_h%)
  ~WIND_GET(window_handle%,4,window_ix%,window_iy%,window_iw%,window_ih%)
  '
  OB_X(main%,0)=window_ix%
  OB_Y(main%,0)=window_iy%
  '
  preview_x%=mwx%
  preview_y%=window_y%+window_h%
  preview_h%=min_ww%
  preview_w%=min_wh%
  preview_handle%=WIND_CREATE(&X1011,preview_x%,preview_y%,preview_w%,preview_h%)
  '
  @preview_title
  '
RETURN
> PROCEDURE preview_title
  IF gdos_y_rez%=0 THEN
    preview_title$="Preview"+CHR$(0)
  ELSE
    preview_title$="Preview "+STR$(preview_ih%*100/gdos_y_rez%,4)+"%"+CHR$(0)
  ENDIF
  CHAR{preview_title%}=preview_title$
  flag%=WIND_SET(preview_handle%,2,CARD(SWAP(preview_title%)),CARD(preview_title%),0,0)
RETURN
> PROCEDURE preview_open
  ~WIND_OPEN(preview_handle%,preview_x%,preview_y%,preview_w%,preview_h%)
  flag%=WIND_GET(preview_handle%,4,preview_ix%,preview_iy%,preview_iw%,preview_ih%)
  preview_open%=1
  @set_preview_size
  '
RETURN
> PROCEDURE set_preview_size
  '
  preview_size%=LEN(banner$)
  IF preview_size%>0 THEN
    '
    max_iw%=screen_width%-(preview_x%+plus_x%)
    IF max_iw%<min_ww% THEN
      max_iw%=min_ww%
    ENDIF
    '
    max_ih%=screen_height%-(preview_y%+plus_y%)
    IF max_ih%<min_wh% THEN
      max_ih%=min_wh%
    ENDIF
    '
    FOR try%=1024 TO 4 STEP -2
      points%=try%
      @font_set
      temp$=" "+banner$+" "
      ~VQT_EXTENT(temp$,border_x1%,border_y1%,border_x2%,border_y2%,border_x3%,border_y3%,border_x4%,border_y4%)
      IF border_x3%<=max_iw% AND border_y3%<=max_ih% THEN
        try%=4
      ENDIF
    NEXT try%
    '
    preview_iw%=border_x3%
    preview_ih%=border_y3%
    '
    @sys_font
    '
    ~WIND_CALC(0,&X1011,preview_ix%,preview_iy%,preview_iw%,preview_ih%,d%,d%,preview_w%,preview_h%)
  ELSE
    preview_w%=plus_x%+min_ww%
    preview_h%=plus_y%+min_wh%
  ENDIF
  IF preview_x%+preview_w%>screen_width% THEN
    preview_x%=screen_width%-preview_w%
  ENDIF
  IF preview_y%+preview_h%>screen_height% THEN
    preview_y%=screen_height%-preview_h%
  ENDIF
  @preview_title
  ~WIND_SET(preview_handle%,5,preview_x%,preview_y%,preview_w%,preview_h%)
  flag%=WIND_GET(preview_handle%,4,preview_ix%,preview_iy%,preview_iw%,preview_ih%)
  '
RETURN
> PROCEDURE check_event
  '
  IF event_type& AND &X1 THEN        ! KEY
    @event_keypress
    '
  ENDIF
  '
  IF event_type& AND &X10 THEN      ! BUTTON
    @event_button
    '
  ENDIF
  '
  IF event_type& AND &X10000 THEN   ! MENU OR WINDOW EVENT
    '
    command%=buffer&(0)       ! TYPE OF EVENT
    '
    IF command%=10 THEN             ! MENU ITEM
      @event_menu
    ELSE          ! WINDOW EVENT
      @event_window
    ENDIF
    '
  ENDIF
  '
RETURN
> PROCEDURE event_menu
  '
  tit%=buffer&(3)   ! WHICH MENU TITLE ?
  ~MENU_TNORMAL(menu%,tit%,1)  ! MAKE MENU TITLE NORMAL AGAIN
  item%=buffer&(4)  ! WHICH MENU ITEM WAS SELECTED
  '
  SELECT item%
  CASE m_about%
    ALERT 0," |GDOS Banner Maker  |½1995 by Phillip O'Neal  | ",1,"OK",d%
    '
  CASE m_print%
    dialog_button%=b_print%
    @process_button
    '
  CASE m_quit%
    dialog_button%=b_quit%
    @process_button
    '
  ENDSELECT
  '
RETURN
> PROCEDURE event_window
  '
  current_window%=buffer&(3) ! HANDLE OF WINDOW
  '
  SELECT command%
    '
  CASE 20     ! WIND UPDATE
    @repair
    '
  CASE 21     ! WINDOW CLICKED ON
    flag%=WIND_SET(current_window%,10,0,0,0,0) ! WINDOW SET TO TOP
    DEFMOUSE 0
    '
  CASE 22 ! CLOSE WINDOW
    IF current_window%=window_handle% THEN
      @trying_to_quit
    ENDIF
    IF current_window%=preview_handle% THEN
      ~WIND_CLOSE(preview_handle%)
      preview_open%=0
    ENDIF
    '
  CASE 28 ! WINDOW MOVED
    '
    IF current_window%=window_handle% THEN
      window_x%=buffer&(4) ! GET NEW WINDOW POSITION/SIZE
      window_y%=buffer&(5)
      '
      flag%=WIND_SET(window_handle%,5,window_x%,window_y%,window_w%,window_h%)     ! SIZE WINDOW
      flag%=WIND_GET(window_handle%,4,window_ix%,window_iy%,window_iw%,window_ih%) ! GET INSIDE SIZE
      '
      OB_X(main%,0)=window_ix%
      OB_Y(main%,0)=window_iy%
      '
    ENDIF
    '
    IF current_window%=preview_handle% THEN
      preview_x%=buffer&(4) ! GET NEW WINDOW POSITION/SIZE
      preview_y%=buffer&(5)
      '
      flag%=WIND_SET(preview_handle%,5,preview_x%,preview_y%,preview_w%,preview_h%)     ! SIZE WINDOW
      flag%=WIND_GET(preview_handle%,4,preview_ix%,preview_iy%,preview_iw%,preview_ih%) ! GET INSIDE SIZE
      '
    ENDIF
    '
  ENDSELECT
  '
RETURN
> PROCEDURE event_keypress
  '
  ~WIND_GET(0,10,top%,d%,d%,d%) ! WINDOW SET TO TOP
  '
  code&=SHR(key_press& AND &HFF00,8)
  ' UPPER BYTE OF WORD CONTAINS SCAN CODE
  '
  SELECT code&
    '
  CASE 18 ! 'E'DIT
    IF top%=window_handle% THEN
      dialog_button%=t_banner%
      @process_button
    ENDIF
    '
  CASE 50 ! 'M'AIN
    flag%=WIND_SET(window_handle%,10,0,0,0,0) ! WINDOW SET TO TOP
    '
  CASE 25 ! 'P'RINT
    dialog_button%=b_print%
    @process_button
    '
  CASE 24 ! 'O'UTLINE
    dialog_button%=b_outline%
    @process_button
    '
  CASE 17 ! SHADO'W'
    dialog_button%=b_outline%
    @process_button
    '
  CASE 47 ! 'V'IEW
    dialog_button%=b_preview%
    @process_button
    '
  CASE 16 ! 'Q'UIT
    trying_to_quit
    '
  ENDSELECT
  '
RETURN
> PROCEDURE event_button
  '
  ~WIND_GET(0,10,top%,d%,d%,d%) ! WINDOW SET TO TOP
  wind_found%=WIND_FIND(x_mouse&,y_mouse&) ! WHICH WINDOW UNDER MOUSE
  '
  IF wind_found%=window_handle% AND top%=window_handle% THEN
    dialog_button%=OBJC_FIND(main%,0,4,x_mouse&,y_mouse&)
    DO
    LOOP UNTIL MOUSEK=0
    @process_button
    '
  ENDIF
  '
RETURN
> PROCEDURE process_button
  SELECT dialog_button%
  CASE t_banner%,t_shadow%
    t_edit%=dialog_button%
    @edit_text
    '
  CASE t_font%
    DO
    LOOP UNTIL MOUSEK=0
    @font_pick
    '
  CASE b_text_color%
    DO
    LOOP UNTIL MOUSEK=0
    @text_color_pick
    '
  CASE b_outline_color%
    DO
    LOOP UNTIL MOUSEK=0
    @outline_color_pick
    '
  CASE b_shadow_color%
    DO
    LOOP UNTIL MOUSEK=0
    @shadow_color_pick
    '
  CASE b_eject%
    IF page%=0 THEN
      page%=1
      @set_button
    ELSE
      page%=0
      @reset_button
    ENDIF
    '
  CASE b_preview%
    @set_button
    IF preview_open%=0 THEN
      @preview_open
    ELSE
      flag%=WIND_SET(preview_handle%,10,0,0,0,0) ! WINDOW SET TO TOP
    ENDIF
    @reset_button
    '
  CASE b_print%
    @set_button
    check_printer%=0
    DO
      IF OUT?(0) THEN
        @print
        check_printer%=1
      ELSE
        ALERT 0,"Sorry, but your printer is  |off-line. Please check the  |printer and I will try again.  | ",1,"OK|Cancel",button%
        IF button%=2 THEN
          check_printer%=1
        ENDIF
      ENDIF
    LOOP UNTIL check_printer%=1
    @reset_button
    '
  CASE b_specs%
    txt$="Output device specifications  |"
    txt$=txt$+"Page size(pixels):"+STR$(gdos_x_rez%)+"x"+STR$(gdos_y_rez%)+"  |"
    txt$=txt$+"Page size(inches):"+STR$((gdos_x_rez%*gdos_pixel_w%)/25400,4)+"x"+STR$((gdos_y_rez%*gdos_pixel_h%)/25400,4)+"  |"
    txt$=txt$+"Pens:"+STR$(gdos_colors%)
    IF gdos_palette%>0 THEN
      txt$=txt$+" Colors:"+STR$(gdos_palette%)+"  "
    ELSE
      txt$=txt$+" Colors:>32767  "
    ENDIF
    ALERT 0,txt$,1,"OK",d%
    '
  CASE b_quit%
    @trying_to_quit
    '
  ENDSELECT
  '
RETURN
> PROCEDURE reset_button
  IF BTST(OB_STATE(main%,dialog_button%),0) THEN
    OB_STATE(main%,dialog_button%)=BCLR(OB_STATE(main%,dialog_button%),0)
    update_main%=dialog_button%
    @update_main
  ENDIF
  '
RETURN
> PROCEDURE set_button
  IF BTST(OB_STATE(main%,dialog_button%),0)=0 THEN
    OB_STATE(main%,dialog_button%)=BSET(OB_STATE(main%,dialog_button%),0)
    update_main%=dialog_button%
    @update_main
  ENDIF
  '
RETURN
> PROCEDURE repair
  '
  ~WIND_UPDATE(1)      ! TELL GEM WE ARE TAKING OVER
  '
  '                    GET FIRST RECTANGLE
  ~WIND_GET(current_window%,11,fix_x%,fix_y%,fix_w%,fix_h%)
  '
  '
  fix_wx%=buffer&(4)
  fix_wy%=buffer&(5)
  fix_ww%=buffer&(6)
  fix_wh%=buffer&(7)
  '
  @do_repair
  '
  fix_done%=0
  '
  DO
    '                  GET NEXT RECTANGLE
    ~WIND_GET(current_window%,12,fix_x%,fix_y%,fix_w%,fix_h%)
    '
    @do_repair
    '
  LOOP UNTIL fix_done%=1
  '
  ~WIND_UPDATE(0)          ! DONE!
  '
RETURN
> PROCEDURE do_repair
  IF fix_w%+fix_h%=0 THEN   ! ANY MORE RECTANGLES ?
    fix_done%=1
  ELSE
    fix_flag%=RC_INTERSECT(fix_wx%,fix_wy%,fix_ww%,fix_wh%,fix_x%,fix_y%,fix_w%,fix_h%)
    IF fix_flag% THEN
      CLIP fix_x%,fix_y%,fix_w%,fix_h%
      IF current_window%=window_handle% THEN
        ~OBJC_DRAW(main%,0,3,fix_x%,fix_y%,fix_w%,fix_h%)
      ENDIF
      IF current_window%=preview_handle% THEN
        GRAPHMODE 1
        DEFFILL 0,2,8
        PBOX fix_x%,fix_y%,fix_x%+fix_w%-1,fix_y%+fix_h%-1
        IF banner$<>"" THEN
          temp$=" "+banner$+" "
          @font_set
          IF gdos_shadow_color%>0 THEN
            DEFTEXT gdos_shadow_color%,0
            TEXT preview_ix%+preview_ih%*shadow%*0.0033,preview_iy%+preview_ih%*shadow%*0.0033-preview_ih%*0.1,temp$
          ENDIF
          '
          GRAPHMODE 2
          DEFTEXT gdos_text_color%,0
          TEXT preview_ix%,preview_iy%-preview_ih%*0.1,temp$
          '
          IF gdos_outline_color%>0 THEN
            DEFTEXT gdos_outline_color%,16
            TEXT preview_ix%,preview_iy%-preview_ih%*0.1,MID$(temp$,1,1)
            FOR char%=1 TO LEN(temp$)-1
              ~VQT_EXTENT(MID$(temp$,1,char%),d%,d%,d%,d%,x%,d%,d%,d%)
              TEXT preview_ix%+x%,preview_iy%-preview_ih%*0.1,MID$(temp$,char%+1,1)
            NEXT char%
          ENDIF
          GRAPHMODE 1
          '
          DEFLINE 3,1,0,0
          COLOR 1
          raito=11/8.5
          x%=raito*preview_ih%
          DO WHILE x%<=preview_iw%
            LINE preview_ix%+x%,preview_iy%,preview_ix%+x%,preview_iy%+preview_ih%*0.1
            LINE preview_ix%+x%,preview_iy%+preview_ih%*0.9,preview_ix%+x%,preview_iy%+preview_ih%
            x%=x%+raito*preview_ih%
          LOOP
          @sys_font
        ENDIF
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE update_main
  '
  ~OBJC_OFFSET(main%,update_main%,rx%,ry%)
  rw%=OB_W(main%,update_main%)
  rh%=OB_H(main%,update_main%)
  '
  my_buffer&(0)=20
  my_buffer&(1)=0
  my_buffer&(2)=0
  my_buffer&(3)=window_handle%
  my_buffer&(4)=rx%-2
  my_buffer&(5)=ry%-2
  my_buffer&(6)=rw%+4
  my_buffer&(7)=rh%+4
  ~APPL_WRITE(prg_handle&,16,my_buffer%)
  @event_update
  '
RETURN
> PROCEDURE update_preview
  '
  my_buffer&(0)=20
  my_buffer&(1)=0
  my_buffer&(2)=0
  my_buffer&(3)=preview_handle%
  my_buffer&(4)=preview_ix%
  my_buffer&(5)=preview_iy%
  my_buffer&(6)=preview_iw%
  my_buffer&(7)=preview_ih%
  ~APPL_WRITE(prg_handle&,16,my_buffer%)
  @event_update
  '
RETURN
> PROCEDURE trying_to_quit
  '
  txt$=" |Sure you want to quit ?  | "
  ALERT 2,txt$,1,"OK|Cancel",button%
  '
  IF button%=1 THEN
    '
    ~VST_UNLOAD_FONTS(0)
    ~WIND_CLOSE(window_handle%)
    ~WIND_CLOSE(preview_handle%)
    ~WIND_DELETE(window_handle%)
    ~WIND_DELETE(preview_handle%)
    ~MENU_BAR(stis_menu%,0)
    ~RSRC_FREE()
    END
    '
  ENDIF
  '
RETURN
> PROCEDURE rsc_setup
  '
  IF EXIST(rsc$) THEN
    rsc%=RSRC_LOAD(rsc$)
  ELSE ! CAN'T FIND RSC FILE
    END
  ENDIF
  '
  ~RSRC_GADDR(0,0,menu%)
  ~RSRC_GADDR(0,1,main%)
  ~RSRC_GADDR(0,2,font_name%)
  ~RSRC_GADDR(0,3,font_color%)
  '
  m_about%=7
  m_print%=16
  m_quit%=18
  '
  t_banner%=2
  t_font%=5
  b_text_color%=8
  b_outline_color%=11
  t_shadow%=13
  b_shadow_color%=15
  b_eject%=16
  b_preview%=17
  b_print%=18
  b_specs%=19
  b_quit%=20
  '
  b_font_name_up%=1
  b_font_name_down%=18
  '
  font_list%=16
  '
  ~FORM_CENTER(main%,main_x%,main_y%,main_w%,main_h%)
  ~FORM_CENTER(font_name%,font_name_x%,font_name_y%,font_name_w%,font_name_h%)
  ~FORM_CENTER(font_color%,font_color_x%,font_color_y%,font_color_w%,font_color_h%)
  '
  color_width%=OB_W(font_color%,2)
  color_height%=OB_H(font_color%,2)
  '
  IF screen_colors%<16 THEN
    FOR set%=b_eject% TO b_quit%
      FOR bit%=9 TO 10
        OB_FLAGS(main%,set%)=BCLR(OB_FLAGS(main%,set%),bit%)
      NEXT bit%
    NEXT set%
  ENDIF
  '
  text_height%=OB_H(font_name%,3)
  '
  CHAR{{OB_SPEC(main%,t_banner%)}}=banner$
  CHAR{{OB_SPEC(main%,t_shadow%)}}=STR$(shadow%)
  @set_font_name
  @set_text_color
  @set_outline_color
  @set_shadow_color
  '
RETURN
> PROCEDURE check_jar
  jar%=LPEEK(1440) ! ADDRESS OF COOKIE JAR
  IF jar% THEN     ! IF JAR PRESENT THEN jar%=ADDRESS OF JAR
    cookie_num%=0
    DO
      cookie%=LPEEK(jar%+cookie_num%*8)
      cookie$=CHR$(SHR(cookie% AND &HFF000000,24))
      cookie$=cookie$+CHR$(SHR(cookie% AND &HFF0000,16))
      cookie$=cookie$+CHR$(SHR(cookie% AND &HFF00,8))
      cookie$=cookie$+CHR$(cookie% AND &HFF)
      IF cookie$="FSMC" THEN
        '
        id%=LPEEK(LPEEK(jar%+cookie_num%*8+4))
        id$=CHR$(SHR(id% AND &HFF000000,24))
        id$=id$+CHR$(SHR(id% AND &HFF0000,16))
        id$=id$+CHR$(SHR(id% AND &HFF00,8))
        id$=id$+CHR$(id% AND &HFF)
        '
      ENDIF
      INC cookie_num%
    LOOP UNTIL cookie%=0
  ENDIF
RETURN
> PROCEDURE sys_font
  '
  face%=VQT_NAME(1,font_name$)
  DEFTEXT ,0,,,face%
  '
  CONTRL(0)=39 ! VST_ALIGNMENT
  CONTRL(1)=0
  CONTRL(3)=2
  CONTRL(6)=my_handle&
  INTIN(0)=0
  INTIN(1)=0
  VDISYS
  '
  CONTRL(0)=246  ! VST_ARBPT
  CONTRL(1)=0
  CONTRL(3)=1
  CONTRL(6)=my_handle&
  INTIN(0)=12
  VDISYS
  '
RETURN
> PROCEDURE font_set
  '
  face%=VQT_NAME(font%,font_name$)
  DEFTEXT ,0,,,face%
  '
  CONTRL(0)=39 ! VST_ALIGNMENT
  CONTRL(1)=0
  CONTRL(3)=2
  CONTRL(6)=my_handle&
  INTIN(0)=0
  INTIN(1)=5
  VDISYS
  '
  CONTRL(0)=246  ! VST_ARBPT
  CONTRL(1)=0
  CONTRL(3)=1
  CONTRL(6)=my_handle&
  INTIN(0)=points%
  VDISYS
  '
  ' DEFTEXT ,,,points%,face%
  '
RETURN
> PROCEDURE set_font_name
  test$=" "+font_name$(font%)
  temp$=CHAR{{OB_SPEC(main%,t_font%)}}
  IF temp$<>test$ THEN
    CHAR{{OB_SPEC(main%,t_font%)}}=test$
    update_main%=t_font%
    @update_main
  ENDIF
  '
RETURN
> PROCEDURE set_font_pick
  IF fonts%>font_list% THEN
    IF temp_font%=1 THEN
      OB_STATE(font_name%,b_font_name_up%)=BSET(OB_STATE(font_name%,b_font_name_up%),3)
    ELSE
      OB_STATE(font_name%,b_font_name_up%)=BCLR(OB_STATE(font_name%,b_font_name_up%),3)
    ENDIF
    IF temp_font%>fonts%+1-font_list% THEN
      OB_STATE(font_name%,b_font_name_down%)=BSET(OB_STATE(font_name%,b_font_name_down%),3)
    ELSE
      OB_STATE(font_name%,b_font_name_down%)=BCLR(OB_STATE(font_name%,b_font_name_down%),3)
    ENDIF
  ELSE
    temp_font%=1
    OB_STATE(font_name%,b_font_name_up%)=BSET(OB_STATE(font_name%,b_font_name_up%),3)
    OB_STATE(font_name%,b_font_name_down%)=BSET(OB_STATE(font_name%,b_font_name_down%),3)
  ENDIF
  '
  FOR set%=0 TO font_list%-1
    IF temp_font%+set%<=fonts%+1 THEN
      OB_STATE(font_name%,set%+2)=BCLR(OB_STATE(font_name%,set%+2),3)
      CHAR{{OB_SPEC(font_name%,set%+2)}}=font_name$(temp_font%+set%)
    ELSE
      OB_STATE(font_name%,set%+2)=BSET(OB_STATE(font_name%,set%+2),3)
      CHAR{{OB_SPEC(font_name%,set%+2)}}=""
    ENDIF
  NEXT set%
  '
RETURN
> PROCEDURE font_pick
  temp_list%=font_list%+1
  old_font%=font%
  ~OBJC_OFFSET(main%,t_font%,rx%,ry%)
  font_name_x%=rx%
  temp_font%=font%
  @set_font_pick
  font_name_y%=ry%-text_height%
  DO WHILE font_name_y%+OB_H(font_name%,0)>screen_height%
    font_name_y%=font_name_y%-text_height%
  LOOP
  IF font_name_y%+OB_H(font_name%,0)<ry%+text_height%
    font_name_y%=font_name_y%+text_height%
  ENDIF
  '
  OB_X(font_name%,0)=font_name_x%
  OB_Y(font_name%,0)=font_name_y%
  CLIP font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2
  ~FORM_DIAL(0,0,0,0,0,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
  cx%=font_name_x%
  cy%=font_name_y%
  cw%=font_name_w%
  ch%=font_name_h%
  exit%=0
  er%=WIND_UPDATE(1)
  ~OBJC_DRAW(font_name%,0,2,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
  DO
    event_type&=EVNT_MULTI(&X110,0,0,0,0,cx%,cy%,cw%,ch%,0,0,0,0,0,buffer_address%,0,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
    IF event_type& AND &X100 THEN ! IN
      button%=OBJC_FIND(font_name%,0,1,x_mouse&,y_mouse&)
      IF button%>0 THEN
        IF BTST(OB_STATE(font_name%,button%),3)=0 THEN
          SELECT button%
          CASE b_font_name_up%
            IF button_state&=1 THEN
              OB_STATE(font_name%,button%)=BSET(OB_STATE(font_name%,button%),0)
              ~OBJC_DRAW(font_name%,button%,1,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
              temp_font%=temp_font%-font_list%
              IF temp_font%<1 THEN
                temp_font%=1
              ENDIF
              @set_font_pick
              PAUSE 5
              OB_STATE(font_name%,button%)=BCLR(OB_STATE(font_name%,button%),0)
              ~OBJC_DRAW(font_name%,0,2,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
              PAUSE 10
            ENDIF
          CASE 2 TO temp_list%
            IF button_state&=1 THEN
              exit%=2
            ENDIF
          CASE b_font_name_down%
            IF button_state&=1 THEN
              OB_STATE(font_name%,button%)=BSET(OB_STATE(font_name%,button%),0)
              ~OBJC_DRAW(font_name%,button%,1,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
              temp_font%=temp_font%+font_list%
              IF temp_font%>fonts%+2-font_list% THEN
                temp_font%=fonts%+2-font_list%
              ENDIF
              @set_font_pick
              PAUSE 5
              OB_STATE(font_name%,button%)=BCLR(OB_STATE(font_name%,button%),0)
              ~OBJC_DRAW(font_name%,0,2,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
              PAUSE 10
            ENDIF
          ENDSELECT
        ENDIF
      ENDIF
    ELSE
      exit%=1
    ENDIF
  LOOP UNTIL exit%>0
  er%=WIND_UPDATE(0)
  ~FORM_DIAL(3,0,0,0,0,font_name_x%-1,font_name_y%-1,font_name_w%+2,font_name_h%+2)
  IF exit%=2 THEN
    font%=temp_font%+button%-2
    IF font%<>old_font% THEN
      @set_font_name
      IF preview_open% THEN
        @set_preview_size
        @update_preview
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE set_text_color
  OB_SPEC(main%,b_text_color%)=(OB_SPEC(main%,b_text_color%) AND &HFFFFFFF0) OR gdos_text_color%
  update_main%=b_text_color%
  @update_main
  '
RETURN
> PROCEDURE text_color_pick
  old_text_color%=gdos_text_color%
  ~OBJC_OFFSET(main%,b_text_color%,rx%,ry%)
  '
  temp_color%=gdos_text_color%
  @place_colors
  '
  OB_X(font_color%,0)=font_color_x%
  OB_Y(font_color%,0)=font_color_y%
  CLIP font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2
  ~FORM_DIAL(0,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  cx%=font_color_x%
  cy%=font_color_y%
  cw%=font_color_w%
  ch%=font_color_h%
  exit%=0
  er%=WIND_UPDATE(1)
  ~OBJC_DRAW(font_color%,0,2,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  DO
    event_type&=EVNT_MULTI(&X110,0,0,0,0,cx%,cy%,cw%,ch%,0,0,0,0,0,buffer_address%,0,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
    IF event_type& AND &X100 THEN ! IN
      button%=OBJC_FIND(font_color%,0,2,x_mouse&,y_mouse&)
      IF button%>1 THEN
        IF button_state&=1 THEN
          temp_color%=button%-2
          exit%=2
        ENDIF
      ENDIF
    ELSE
      exit%=1
    ENDIF
  LOOP UNTIL exit%>0
  er%=WIND_UPDATE(0)
  ~FORM_DIAL(3,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  IF exit%=2 THEN
    gdos_text_color%=temp_color%
    IF gdos_text_color%<>old_text_color% THEN
      @set_text_color
      IF preview_open% THEN
        @update_preview
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE set_outline_color
  OB_SPEC(main%,b_outline_color%)=(OB_SPEC(main%,b_outline_color%) AND &HFFFFFFF0) OR gdos_outline_color%
  update_main%=b_outline_color%
  @update_main
  '
RETURN
> PROCEDURE outline_color_pick
  old_outline_color%=gdos_outline_color%
  ~OBJC_OFFSET(main%,b_outline_color%,rx%,ry%)
  '
  temp_color%=gdos_outline_color%
  @place_colors
  '
  OB_X(font_color%,0)=font_color_x%
  OB_Y(font_color%,0)=font_color_y%
  CLIP font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2
  ~FORM_DIAL(0,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  cx%=font_color_x%
  cy%=font_color_y%
  cw%=font_color_w%
  ch%=font_color_h%
  exit%=0
  er%=WIND_UPDATE(1)
  ~OBJC_DRAW(font_color%,0,2,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  DO
    event_type&=EVNT_MULTI(&X110,0,0,0,0,cx%,cy%,cw%,ch%,0,0,0,0,0,buffer_address%,0,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
    IF event_type& AND &X100 THEN ! IN
      button%=OBJC_FIND(font_color%,0,2,x_mouse&,y_mouse&)
      IF button%>1 THEN
        IF button_state&=1 THEN
          temp_color%=button%-2
          exit%=2
        ENDIF
      ENDIF
    ELSE
      exit%=1
    ENDIF
  LOOP UNTIL exit%>0
  er%=WIND_UPDATE(0)
  ~FORM_DIAL(3,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  IF exit%=2 THEN
    gdos_outline_color%=temp_color%
    IF gdos_outline_color%<>old_outline_color% THEN
      @set_outline_color
      IF preview_open% THEN
        @update_preview
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE set_shadow_color
  OB_SPEC(main%,b_shadow_color%)=(OB_SPEC(main%,b_shadow_color%) AND &HFFFFFFF0) OR gdos_shadow_color%
  update_main%=b_shadow_color%
  @update_main
  '
RETURN
> PROCEDURE shadow_color_pick
  old_shadow_color%=gdos_shadow_color%
  ~OBJC_OFFSET(main%,b_shadow_color%,rx%,ry%)
  '
  temp_color%=gdos_shadow_color%
  @place_colors
  '
  OB_X(font_color%,0)=font_color_x%
  OB_Y(font_color%,0)=font_color_y%
  CLIP font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2
  ~FORM_DIAL(0,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  cx%=font_color_x%
  cy%=font_color_y%
  cw%=font_color_w%
  ch%=font_color_h%
  exit%=0
  er%=WIND_UPDATE(1)
  ~OBJC_DRAW(font_color%,0,2,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  DO
    event_type&=EVNT_MULTI(&X110,0,0,0,0,cx%,cy%,cw%,ch%,0,0,0,0,0,buffer_address%,0,x_mouse&,y_mouse&,button_state&,key_state&,key_press&,num_clicks&)
    IF event_type& AND &X100 THEN ! IN
      button%=OBJC_FIND(font_color%,0,2,x_mouse&,y_mouse&)
      IF button%>1 THEN
        IF button_state&=1 THEN
          temp_color%=button%-2
          exit%=2
        ENDIF
      ENDIF
    ELSE
      exit%=1
    ENDIF
  LOOP UNTIL exit%>0
  er%=WIND_UPDATE(0)
  ~FORM_DIAL(3,0,0,0,0,font_color_x%-1,font_color_y%-1,font_color_w%+2,font_color_h%+2)
  IF exit%=2 THEN
    gdos_shadow_color%=temp_color%
    IF gdos_shadow_color%<>old_shadow_color% THEN
      @set_shadow_color
      IF preview_open% THEN
        @update_preview
      ENDIF
    ENDIF
  ENDIF
RETURN
> PROCEDURE place_colors
  SELECT temp_color%
  CASE 0
    font_color_x%=rx%-4
    font_color_y%=ry%-4
  CASE 1
    font_color_x%=rx%-(color_width%+4)
    font_color_y%=ry%-4
  CASE 2
    font_color_x%=rx%-(color_width%*2+4)
    font_color_y%=ry%-4
  CASE 3
    font_color_x%=rx%-(color_width%*3+4)
    font_color_y%=ry%-4
  CASE 4
    font_color_x%=rx%-4
    font_color_y%=ry%-(color_height%+4)
  CASE 5
    font_color_x%=rx%-(color_width%+4)
    font_color_y%=ry%-(color_height%+4)
  CASE 6
    font_color_x%=rx%-(color_width%*2+4)
    font_color_y%=ry%-(color_height%+4)
  CASE 7
    font_color_x%=rx%-(color_width%*3+4)
    font_color_y%=ry%-(color_height%+4)
  ENDSELECT
  '
  DO WHILE font_color_x%<mwx%
    font_color_x%=font_color_x%+color_width%
  LOOP
  DO WHILE font_color_x%+OB_W(font_color%,1)>screen_width%
    font_color_x%=font_color_x%-color_width%
  LOOP
  '
  DO WHILE font_color_y%<mwy%
    font_color_y%=font_color_y%+color_height%
  LOOP
  DO WHILE font_color_y%+OB_H(font_color%,1)>screen_height%
    font_color_y%=font_color_y%-color_height%
  LOOP
  '
RETURN
> PROCEDURE edit_text
  '
  old_banner$=banner$
  old_shadow%=shadow%
  er%=WIND_UPDATE(1)
  exit%=FORM_DO(main%,t_edit%)
  exit%=exit% AND &H7FFF
  er%=WIND_UPDATE(0)
  dialog_button%=t_banner%
  @reset_button
  '
  banner$=CHAR{{OB_SPEC(main%,t_banner%)}}
  shadow%=VAL(CHAR{{OB_SPEC(main%,t_shadow%)}})
  '
  IF old_banner$<>banner$ THEN
    IF preview_open% THEN
      @set_preview_size
      @update_preview
    ENDIF
  ENDIF
  '
  IF old_shadow%<>shadow% THEN
    @update_preview
  ENDIF
  '
RETURN
> PROCEDURE open_workstation
  CONTRL(0)=1  ! V_OPNWK
  CONTRL(1)=0
  CONTRL(3)=11
  CONTRL(6)=0
  INTIN(0)=driver%
  INTIN(1)=1
  INTIN(2)=1
  INTIN(3)=1
  INTIN(4)=1
  INTIN(5)=font%
  INTIN(6)=1
  INTIN(7)=1
  INTIN(8)=1
  INTIN(9)=1
  INTIN(10)=2
  VDISYS
  gdos_handle%=CONTRL(6)
  '
  IF gdos_handle%<>0 THEN
    '
    gdos_x_rez%=INTOUT(0)+1
    gdos_y_rez%=INTOUT(1)+1
    gdos_pixel_w%=INTOUT(3)
    gdos_pixel_h%=INTOUT(4)
    gdos_colors%=INTOUT(13)
    gdos_palette%=INTOUT(39)
    '
  ELSE
    gdos_x_rez%=1980
    gdos_y_rez%=1440
    gdos_pixel_w%=85
    gdos_pixel_h%=85
    gdos_colors%=2
    gdos_palette%=2
  ENDIF
  '
RETURN
> PROCEDURE setup_workstation
  IF gdos_handle%<>0 THEN
    V~H=gdos_handle%
    '
    CONTRL(0)=119  ! VST_LOAD_FONTS
    CONTRL(1)=0
    CONTRL(3)=1
    CONTRL(6)=gdos_handle%
    INTIN(0)=0
    VDISYS
    '
    gdos_font%=font%
    gdos_face%=VQT_NAME(gdos_font%,gdos_name$)
    '
    DEFTEXT ,0,,,gdos_face%
    '
    CONTRL(0)=39  ! VST_ALIGNMENT
    CONTRL(1)=0
    CONTRL(3)=2
    CONTRL(6)=gdos_handle%
    INTIN(0)=0    ! LEFT JUSTIFIED
    INTIN(1)=5    ! TOP LINE
    VDISYS
    '
    FOR try%=1024 TO 4 STEP -2
      gdos_points%=try%
      CONTRL(0)=246  ! VST_ARBPT
      CONTRL(1)=0
      CONTRL(3)=1
      CONTRL(6)=gdos_handle%
      INTIN(0)=gdos_points%
      VDISYS
      temp$=" "+banner$+" "
      ~VQT_EXTENT(temp$,x1%,y1%,x2%,y2%,x3%,y3%,x4%,y4%)
      IF y3%<=gdos_y_rez% THEN
        try%=4
        '
      ENDIF
    NEXT try%
    '
  ENDIF
RETURN
> PROCEDURE close_workstation
  '
  CONTRL(0)=2  ! V_CLSWK
  CONTRL(1)=0
  CONTRL(3)=0
  CONTRL(6)=gdos_handle%
  VDISYS
  '
  V~H=-1
RETURN
> PROCEDURE print
  @open_workstation
  IF gdos_handle%<>0 THEN
    @setup_workstation
    CLIP 0,0,gdos_x_rez%-1,gdos_y_rez%-1
    place%=0
    DO WHILE place%<x3%
      '
      temp$=" "+banner$+" "
      '
      IF gdos_shadow_color%>0 THEN
        DEFTEXT gdos_shadow_color%,0
        TEXT (y3%*shadow%*0.0033)-place%,y3%*shadow%*0.0033-gdos_y_rez%*0.1,temp$
      ENDIF
      '
      GRAPHMODE 2
      DEFTEXT gdos_text_color%,0
      TEXT -place%,-gdos_y_rez%*0.1,temp$
      '
      IF gdos_outline_color%>0 THEN
        DEFTEXT gdos_outline_color%,16
        TEXT -place%,-gdos_y_rez%*0.1,MID$(temp$,1,1)
        FOR char%=1 TO LEN(temp$)-1
          ~VQT_EXTENT(MID$(temp$,1,char%),d%,d%,d%,d%,x%,d%,d%,d%)
          TEXT -place%+x%,-gdos_y_rez%*0.1,MID$(temp$,char%+1,1)
        NEXT char%
      ENDIF
      GRAPHMODE 1
      '
      CONTRL(0)=4  ! V_UPDWK
      CONTRL(1)=0
      CONTRL(3)=0
      CONTRL(6)=gdos_handle%
      VDISYS
      '
      IF page%=1 THEN
        CONTRL(0)=3  ! V_CLRWK
      ELSE
        '
        CONTRL(0)=5  ! V_CLEAR_DISP_LIST
        CONTRL(5)=22
      ENDIF
      '
      CONTRL(1)=0
      CONTRL(3)=0
      CONTRL(6)=gdos_handle%
      '
      VDISYS
      '
      place%=place%+gdos_x_rez%
    LOOP
    '
    ~VST_UNLOAD_FONTS(0)
    @close_workstation
  ENDIF
RETURN
