$m300000
$%3
$P<
$S>
OPTION BASE 0
DIM screen%(8200)
my_screen%=V:screen%(96) AND &HFFFF00
'
@init
hand%=WIND_CREATE(0,-1,10,642,191)
hand2%=WIND_CREATE(0,0,0,0,0)
~WIND_OPEN(hand%,-1,10,642,191)
~WIND_OPEN(hand2%,0,0,0,0)
@ishuffel
MENU entry$()
SGET fix_screen$
ON MENU GOSUB dropdown
ON MENU KEY GOSUB what_key
ON MENU MESSAGE GOSUB dropdown
DO
  ON MENU 10
LOOP
END
'
> PROCEDURE what_key
  a_key%=1
  scan%=SHR(MENU(14),8)
  @dropdown
  a_key%=0
RETURN
'
> PROCEDURE dropdown
  IF MENU(1)=10 OR a_key%=1 THEN
    MENU OFF
    IF a_key%=1 THEN
      SELECT scan%
      CASE 98
        entry%=-1
        @help
      CASE 1
        entry%=1
      CASE 49
        entry%=11
      CASE 19
        entry%=12
      CASE 32
        entry%=13
      CASE 16
        entry%=14
      DEFAULT
        entry%=-1
      ENDSELECT
    ELSE
      entry%=MENU(0)
    ENDIF
    DO
    LOOP UNTIL MOUSEK=0
    SELECT entry%
    CASE 1
      ALERT 0,"     CARDS | Public Domain   ",0," OK ",d%
    CASE 11
      ALERT 0,"START NEW GAME ?  ",0," YES |NO",button%
      IF button%=1 THEN
        full%=0
        @shuffel
        ~WIND_SET(hand2%,10,d%,d%,d%,d%)
      ENDIF
    CASE 12
      button%=1
      IF score%<>0 THEN
        ALERT 0,"RESET SCORE TO 0 ?  ",0," YES |NO",button%
      ENDIF
      IF button%=1 THEN
        score%=0
        @score
      ENDIF
    CASE 13
      @pick_back
    CASE 14
      ALERT 0,"SURE YOU WANT TO QUIT ?  ",0," YES |NO",button%
      IF button%=1 THEN
        MENU KILL
        ~WIND_CLOSE(hand%)
        ~WIND_CLOSE(hand2%)
        ~WIND_DELETE(hand%)
        ~WIND_DELETE(hand2%)
        CLS
        @restore_colors
        END
      ENDIF
    ENDSELECT
  ENDIF
  IF MENU(1)=21 AND MENU(4)=hand%
    ~WIND_GET(hand%,10,thand%,d%,d%,d%)
    IF thand%=hand2% THEN
      MOUSE x%,y%,k%
      IF k%=1
        x%=INT(x%/mulx%)
        y%=y%-os1%
        PAUSE 10
        SELECT x%
        CASE 0
          @deck
        CASE 2 TO 8
          @piles
        ENDSELECT
        @score
        @check
      ENDIF
    ENDIF
  ENDIF
  IF MENU(1)=20 AND MENU(4)=hand%
    er%=WIND_UPDATE(1)  ! TELL GEM WE ARE TAKING OVER
    ~XBIOS(5,L:my_screen%,L:-1,-1)
    SPUT fix_screen$
    count%=0
    er%=WIND_GET(hand%,11,fx%,fy%,fx2%,fy2%)
    GET fx%,fy%,fx%+fx2%-1,fy%+fy2%-1,fix$(count%)
    fix%(0,count%)=fx%
    fix%(1,count%)=fy%
    fix_done%=0
    DO
      er%=WIND_GET(hand%,12,fx%,fy%,fx2%,fy2%)
      IF fx2%+fy2%=0 THEN  ! ANY MORE RECTANGLES ?
        fix_done%=1
      ELSE
        INC count%
        GET fx%,fy%,fx%+fx2%-1,fy%+fy2%-1,fix$(count%)
        fix%(0,count%)=fx%   ! X POS OF RECTANGLE
        fix%(1,count%)=fy%   ! Y  "    "       "
      ENDIF
    LOOP UNTIL fix_done%=1
    ~XBIOS(5,L:screen%,L:-1,-1)
    FOR temp%=0 TO count%  ! PUT THE RECTANGLES ON THE SCREEN
      PUT fix%(0,temp%),fix%(1,temp%),fix$(temp%)
    NEXT temp%
    er%=WIND_UPDATE(0)   !  DONE!
  ENDIF
  ~WIND_GET(hand%,10,thand%,d%,d%,d%)
  IF thand%=hand% THEN
    ~WIND_SET(hand2%,10,hand2%,d%,d%,d%)
  ENDIF
RETURN
'
> PROCEDURE beep0
  WAVE 8,1,12,1000,3
  SOUND 1,0
RETURN
'
> PROCEDURE beep1
  WAVE 8,1,12,1000,6
  SOUND 1,0
RETURN
'
> PROCEDURE beep2
  FOR vol%=15 TO 0 STEP -3
    SOUND 1,vol%,6,2,1
  NEXT vol%
RETURN
'
PROCEDURE help
  SGET stemp$
  DEFFILL 1,0,0
  PBOX 142,103,639,199
  PBOX 144,105,637,197
  DEFFILL 1,2,8
  DEFTEXT 1
  TEXT 152,114,"****  MOVE THE MOUSE POINTER OVER AN ITEM FOR HELP....  ****"
  DEFTEXT 2
  TEXT 152,194,"****  PRESS A MOUSE BUTTON OR A KEY TO EXIT HELP MODE   ****"
  DEFTEXT 3
  DO
    IF INP?(2) THEN
      dummy%=INP(2)
      PAUSE 2
    ENDIF
  LOOP WHILE INP?(2)
  where%=0
  DO
    SHOWM
    MOUSE x%,y%,k%
    IF y%<os1% THEN
      IF where%<>1 THEN
        TEXT 152,124,"THE '' MENU: CARDS - CREDITS ?                            "
        TEXT 152,134,"                     - DESK ACCESSORIES                     "
        TEXT 152,144,SPACE$(60)
        TEXT 152,154,"THE 'CARDS' MENU: NEW GAME    - Deal a new hand.            "
        TEXT 152,164,"                  RESET SCORE - Set score to $0.            "
        TEXT 152,174,"                  CHANGE DECK - Use different card back.    "
        TEXT 152,184,"                  QUIT        - Exit the game.              "
        SHOWM
        where%=1
      ENDIF
    ELSE
      IF y%<200-os1% THEN
        x%=INT(x%/mulx%)
        y%=INT((y%-os1%)/muly%)
        z%=y%+4*x%
        SELECT z%
        CASE 0
          IF where%<>2 THEN
            TEXT 152,124,"SCORE                                                       "
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,"EACH NEW DEAL COST $50.                                     "
            TEXT 152,154,"EACH CARD PLAYED ON A FOUNDATION EARDS $5.                  "
            TEXT 152,164,SPACE$(60)
            TEXT 152,174,"THE SCORE CAN BE RESET FROM THE CARDS MENU.                 "
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=2
          ENDIF
        CASE 1
          IF where%<>3 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,"STOCK WASTE"+SPACE$(49)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=3
          ENDIF
        CASE 2
          IF where%<>4 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,"STOCK"+SPACE$(55)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=4
          ENDIF
        CASE 3
          IF where%<>5 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,"KEYS"+SPACE$(56)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=5
          ENDIF
        CASE 4 TO 7
          IF where%<>6 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,"FOUNDATIONS"+SPACE$(39)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=6
          ENDIF
        CASE 8,9,12,13,16,17,20,21,24,25,28,29,32,33
          IF where%<>7 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134,SPACE$(60)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,"TABLEAU"+SPACE$(53)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=7
          ENDIF
        CASE 10,11,14,15,18,19,22,23,26,27,30,31,34,35
          IF where%<>8 THEN
            TEXT 152,124,SPACE$(60)
            TEXT 152,134," THE HELP MENU..."+SPACE$(43)
            TEXT 152,144,SPACE$(60)
            TEXT 152,154,SPACE$(60)
            TEXT 152,164,SPACE$(60)
            TEXT 152,174,SPACE$(60)
            TEXT 152,184,SPACE$(60)
            SHOWM
            where%=8
          ENDIF
        ENDSELECT
      ENDIF
    ENDIF
    PAUSE 4
  LOOP UNTIL MOUSEK OR INP?(2)
  IF INP?(2) THEN
    dummy%=INP(2)
  ENDIF
  DO
    IF INP?(2) THEN
      dummy%=INP(2)
      PAUSE 2
    ENDIF
  LOOP WHILE INP?(2)
  SPUT stemp$
RETURN
'
> PROCEDURE show_help
  hy%=157
  t1$="ew"
  t2$="N"
  @fix_help
  '
  hy%=hy%+8
  t1$="eset"
  t2$="R"
  @fix_help
  '
  hy%=hy%+8
  t1$="eck"
  t2$="D"
  @fix_help
  '
  hy%=hy%+8
  t1$="uit"
  t2$="Q"
  @fix_help
  '
  hy%=hy%+8
  DEFTEXT 2
  TEXT 2,hy%,"HELP"
RETURN
'
> PROCEDURE fix_help
  DEFTEXT 3
  TEXT 10,hy%,t1$
  DEFTEXT 2
  TEXT 2,hy%,t2$
RETURN
'
> PROCEDURE check
  fflag%=1
  FOR xx%=0 TO 6
    IF pile%(xx%,1)<0 THEN
      fflag%=0
    ENDIF
  NEXT xx%
  IF fflag%=1 AND stack%(0)=-1 THEN
    @auto
  ENDIF
RETURN
'
> PROCEDURE auto
  flag%=0
  DO
    FOR x%=2 TO 8
      temp_card%=pile%(x%-2,keep%(x%-2))
      SELECT temp_card%
      CASE 1 TO 13
        IF suit%(0)+1=temp_card% THEN
          INC suit%(0)
          score%=score%+5
          PUT mulx%+2,os1%,card$(temp_card%),3
          @del2
          @score
          @beep1
        ENDIF
      CASE 14 TO 26
        IF suit%(1)+1=temp_card%-13 THEN
          INC suit%(1)
          score%=score%+5
          PUT mulx%+2,muly%+os1%,card$(temp_card%),3
          @del2
          @score
          @beep1
        ENDIF
      CASE 27 TO 39
        IF suit%(2)+1=temp_card%-26 THEN
          INC suit%(2)
          score%=score%+5
          PUT mulx%+2,muly%*2+os1%,card$(temp_card%),3
          @del2
          @score
          @beep1
        ENDIF
      CASE 40 TO 52
        IF suit%(3)+1=temp_card%-39 THEN
          INC suit%(3)
          score%=score%+5
          PUT mulx%+2,muly%*3+os1%,card$(temp_card%),3
          @del2
          @score
          @beep1
        ENDIF
      ENDSELECT
    NEXT x%
    tot%=0
    FOR x%=0 TO 6
      IF keep%(x%)>0 THEN
        tot%=1
      ENDIF
    NEXT x%
    IF tot%=0 THEN
      flag%=1
      full%=1
    ENDIF
  LOOP UNTIL flag%=1
RETURN
'
> PROCEDURE del
  FOR loop%=stack% TO 24
    stack%(loop%)=stack%(loop%+1)
  NEXT loop%
  DEC stack%
  DEC max%
  IF stack%=-1 THEN
    PUT 2,muly%+os1%,cardback$(1),3
  ELSE
    PUT 2,muly%+os1%,card$(stack%(stack%)),3
  ENDIF
RETURN
'
> PROCEDURE del2
  good%=1
  pile%(x%-2,keep%(x%-2))=0
  PUT x%*mulx%+2,lin%(x%-2)+os%,cardback$(0),3
  DEC keep%(x%-2)
  IF pile%(x%-2,keep%(x%-2))<0 THEN
    pile%(x%-2,keep%(x%-2))=-pile%(x%-2,keep%(x%-2))
    DEC cover%
  ENDIF
  lin%(x%-2)=lin%(x%-2)-cardy%
  IF lin%(x%-2)<cardy% THEN
    PUT x%*mulx%+2,os1%,card$(pile%(x%-2,keep%(x%-2))),3
  ELSE
    PUT x%*mulx%+2,lin%(x%-2)+os%,card$(pile%(x%-2,keep%(x%-2))),3
  ENDIF
RETURN
'
> PROCEDURE del3
  FOR loop%=bend% TO bstart% STEP -1
    pile%(b%-2,keep%(b%-2))=0
    lin%(b%-2)=lin%(b%-2)-cardy%
    DEC keep%(b%-2)
  NEXT loop%
  IF pile%(b%-2,keep%(b%-2))<0 THEN
    DEC cover%
    temp%=pile%(b%-2,keep%(b%-2))
    pile%(b%-2,keep%(b%-2))=-temp%
  ENDIF
  PUT b%*mulx%+2,lin%(b%-2)+os%+cardy%,cardback$(0)
  SELECT keep%(b%-2)
  CASE 0
    PUT b%*mulx%+2,os1%,cardback$(0)
  CASE 1
    PUT b%*mulx%+2,os1%,card$(pile%(b%-2,keep%(b%-2))),3
  CASE 2 TO 18
    PUT b%*mulx%+2,lin%(b%-2)+os%,card$(pile%(b%-2,keep%(b%-2))),3
  ENDSELECT
RETURN
'
> PROCEDURE ad
  INC keep%(x%-2)
  pile%(x%-2,keep%(x%-2))=temp_card%
  lin%(x%-2)=lin%(x%-2)+cardy%
  PUT x%*mulx%+2,lin%(x%-2)+os%,card$(pile%(x%-2,keep%(x%-2))),3
RETURN
'
> PROCEDURE ad2
  FOR loop%=bstart% TO bend%
    INC keep%(x%-2)
    pile%(x%-2,keep%(x%-2))=pile%(b%-2,loop%)
    lin%(x%-2)=lin%(x%-2)+cardy%
    PUT x%*mulx%+2,lin%(x%-2)+os%,card$(pile%(x%-2,keep%(x%-2))),3
  NEXT loop%
RETURN
'
> PROCEDURE deck
  IF y%>muly%*2 AND y%<muly%*3 THEN
    stack%=stack%+3
    @another
  ENDIF
  IF y%>muly% AND y%<muly%*2 AND stack%>-1 AND stack%(0)<>-1 AND MOUSEK=0 THEN
    good%=0
    SELECT stack%(stack%)
    CASE 1 TO 13
      IF suit%(0)+1=stack%(stack%) THEN
        good%=1
        INC suit%(0)
        score%=score%+5
        PUT mulx%+2,os1%,card$(stack%(stack%)),3
        @del
        @beep1
      ELSE
        @beep2
      ENDIF
    CASE 14 TO 26
      IF suit%(1)+1=stack%(stack%)-13 THEN
        good%=1
        INC suit%(1)
        score%=score%+5
        PUT mulx%+2,muly%+os1%,card$(stack%(stack%)),3
        @del
        @beep1
      ELSE
        @beep2
      ENDIF
    CASE 27 TO 39
      IF suit%(2)+1=stack%(stack%)-26 THEN
        good%=1
        INC suit%(2)
        score%=score%+5
        PUT mulx%+2,muly%*2+os1%,card$(stack%(stack%)),3
        @del
        @beep1
      ELSE
        @beep2
      ENDIF
    CASE 40 TO 52
      IF suit%(3)+1=stack%(stack%)-39 THEN
        INC suit%(3)
        good%=1
        score%=score%+5
        PUT mulx%+2,muly%*3+os1%,card$(stack%(stack%)),3
        @del
        @beep1
      ELSE
        @beep2
      ENDIF
    ENDSELECT
    good%=0
  ENDIF
  IF y%>muly% AND y%<muly%*2 AND stack%>-1 AND MOUSEK=1 THEN
    SGET fix_screen$
    ~XBIOS(5,L:my_screen%,L:screen%,-1)
    COLOR 3
    PUT 0,0,card$(stack%(stack%)),3
    BOX 0,0,mulx%-9,muly%-1
    GET 0,0,mulx%-9,muly%-1,temp_card$
    ~XBIOS(5,L:screen%,L:screen%,-1)
    IF stack%>0 THEN
      ~XBIOS(5,L:my_screen%,L:screen%,-1)
      SPUT fix_screen$
      PUT 2,muly%+os1%,card$(stack%(stack%-1)),3
      COLOR 0
      FOR m%=4 TO mulx%-7 STEP 2
        LINE m%,muly%+os1%,m%,muly%*2+os1%-1
      NEXT m%
      SGET stemp$
      ~XBIOS(5,L:screen%,L:screen%,-1)
      SPUT stemp$
    ELSE
      PUT 2,muly%+os1%,cardback$(1),3
    ENDIF
    SGET the_screen$
    ox%=-1
    DO
      ON MENU
      MOUSE x%,y%,k%
      x%=INT(x%/mulx%)
      IF x%>8 THEN
        x%=8
      ENDIF
      IF x%<2 THEN
        x%=2
      ENDIF
      y%=lin%(x%-2)
      IF x%<>ox% THEN
        ~XBIOS(5,L:my_screen%,L:screen%,-1)
        SPUT the_screen$
        PUT x%*mulx%+2,y%+os%+cardy%,temp_card$,3
        SGET stemp$
        ~XBIOS(5,L:screen%,L:screen%,-1)
        SPUT stemp$
        ox%=x%
      ENDIF
    LOOP UNTIL MOUSEK=0
    good%=1
    IF good%=1 THEN
      temp_card%=stack%(stack%)
      test%=0
      SELECT temp_card%
      CASE 2 TO 12
        IF pile%(x%-2,keep%(x%-2))=temp_card%+27 OR pile%(x%-2,keep%(x%-2))=temp_card%+40 THEN
          test%=1
        ENDIF
      CASE 15 TO 25
        IF pile%(x%-2,keep%(x%-2))=temp_card%+14 OR pile%(x%-2,keep%(x%-2))=temp_card%+27 THEN
          test%=1
        ENDIF
      CASE 28 TO 38
        IF pile%(x%-2,keep%(x%-2))=temp_card%-12 OR pile%(x%-2,keep%(x%-2))=temp_card%-25 THEN
          test%=1
        ENDIF
      CASE 41 TO 51
        IF pile%(x%-2,keep%(x%-2))=temp_card%-25 OR pile%(x%-2,keep%(x%-2))=temp_card%-38 THEN
          test%=1
        ENDIF
      CASE 13,26,39,52
        IF keep%(x%-2)=0 THEN
          test%=1
        ENDIF
      ENDSELECT
      IF test%=1 THEN
        PUT x%*mulx%+2,y%+os%+cardy%,card$(stack%(stack%)),3
        IF stack%-1>-1 THEN
          PUT 2,muly%+os1%,card$(stack%(stack%-1)),3
        ELSE
          PUT 2,muly%+os1%,cardback$(1),3
        ENDIF
        SGET fix_screen$
        @del
        @ad
        @beep1
      ELSE
        @beep2
      ENDIF
      ~XBIOS(5,L:screen%,L:screen%,-1)
      SPUT fix_screen$
    ENDIF
  ENDIF
RETURN
'
> PROCEDURE piles
  IF keep%(x%-2)>0 AND y%<lin%(x%-2)+muly%-cardy% THEN
    IF MOUSEK=0 THEN
      good%=0
      temp_card%=pile%(x%-2,keep%(x%-2))
      SELECT temp_card%
      CASE 1 TO 13
        IF suit%(0)+1=temp_card% THEN
          INC suit%(0)
          score%=score%+5
          PUT mulx%+2,os1%,card$(temp_card%),3
          @del2
          @beep1
        ELSE
          @beep2
        ENDIF
      CASE 14 TO 26
        IF suit%(1)+1=temp_card%-13 THEN
          INC suit%(1)
          score%=score%+5
          PUT mulx%+2,muly%+os1%,card$(temp_card%),3
          @del2
          @beep1
        ELSE
          @beep2
        ENDIF
      CASE 27 TO 39
        IF suit%(2)+1=temp_card%-26 THEN
          INC suit%(2)
          score%=score%+5
          PUT mulx%+2,muly%*2+os1%,card$(temp_card%),3
          @del2
          @beep1
        ELSE
          @beep2
        ENDIF
      CASE 40 TO 52
        IF suit%(3)+1=temp_card%-39 THEN
          INC suit%(3)
          score%=score%+5
          PUT mulx%+2,muly%*3+os1%,card$(temp_card%),3
          @del2
          @beep1
        ELSE
          @beep2
        ENDIF
      ENDSELECT
    ELSE
      b%=x%
      FOR loop%=1 TO 18
        IF pile%(x%-2,loop%)>0 THEN
          bstart%=loop%
          loop%=19
        ENDIF
      NEXT loop%
      FOR loop%=bstart%+1 TO 18
        IF pile%(x%-2,loop%)=0 THEN
          bend%=loop%-1
          loop%=19
        ENDIF
      NEXT loop%
      SGET fix_screen$
      COLOR 3
      IF bstart%=0 THEN
        BOX mulx%*x%+3,(bstart%+1)*cardy%+os%+1,mulx%*(x%+1)-7,lin%(x%-2)+muly%+os%-1
        GET mulx%*x%+2,(bstart%+1)*cardy%+os%,mulx%*(x%+1)-6,lin%(x%-2)+muly%+os%-1,big_card$
      ELSE
        GET mulx%*x%+2,bstart%*cardy%+os%,mulx%*(x%+1)-6,lin%(x%-2)+muly%+os%-1,big_card$
        BOX mulx%*x%+3,bstart%*cardy%+os%+1,mulx%*(x%+1)-7,lin%(x%-2)+muly%+os%-1
      ENDIF
      IF bstart%=1 THEN
        PUT mulx%*x%+2,os1%,big_card$,0
      ELSE
        PUT mulx%*x%+2,bstart%*cardy%+os%,big_card$,0
        PUT mulx%*x%+2,(bstart%-1)*cardy%+os%,cardback$(back%),3
      ENDIF
      SGET the_screen$
      ~XBIOS(5,L:my_screen%,L:my_screen%,-1)
      SPUT the_screen$
      ~XBIOS(5,L:screen%,L:screen%,-1)
      ox%=-1
      DO
        ON MENU
        MOUSE x%,y%,k%
        x%=INT(x%/mulx%)
        IF x%>8 THEN
          x%=8
        ENDIF
        IF x%<2 THEN
          x%=2
        ENDIF
        IF x%=b% THEN
          y%=lin%(x%-2)-(cardy%*(bend%-bstart%))
        ELSE
          y%=lin%(x%-2)
        ENDIF
        IF x%<>ox% THEN
          ~XBIOS(5,L:my_screen%,L:screen%,-1)
          SPUT the_screen$
          PUT x%*mulx%+2,y%+os%+cardy%,big_card$,3
          SGET temp$
          ~XBIOS(5,L:screen%,L:screen%,-1)
          SPUT temp$
          ox%=x%
        ENDIF
      LOOP UNTIL k%=0
      test%=0
      temp_card%=pile%(b%-2,bstart%)
      SELECT temp_card%
      CASE 2 TO 12
        IF pile%(x%-2,keep%(x%-2))=temp_card%+27 OR pile%(x%-2,keep%(x%-2))=temp_card%+40 THEN
          test%=1
        ENDIF
      CASE 15 TO 25
        IF pile%(x%-2,keep%(x%-2))=temp_card%+14 OR pile%(x%-2,keep%(x%-2))=temp_card%+27 THEN
          test%=1
        ENDIF
      CASE 28 TO 38
        IF pile%(x%-2,keep%(x%-2))=temp_card%-12 OR pile%(x%-2,keep%(x%-2))=temp_card%-25 THEN
          test%=1
        ENDIF
      CASE 41 TO 51
        IF pile%(x%-2,keep%(x%-2))=temp_card%-25 OR pile%(x%-2,keep%(x%-2))=temp_card%-38 THEN
          test%=1
        ENDIF
      CASE 13,26,39,52
        IF keep%(x%-2)=0 THEN
          test%=1
        ENDIF
      ENDSELECT
      IF test%=1 THEN
        @ad2
        @del3
        SGET fix_screen$
        @beep1
      ELSE
        @beep2
      ENDIF
      ~XBIOS(5,L:screen%,L:screen%,-1)
      SPUT fix_screen$
    ENDIF
  ENDIF
RETURN
'
> PROCEDURE another
  max1%=max%+1
  max2%=max%+2
  max3%=max%+3
  SELECT stack%
  CASE -1
    PUT 2,muly%+os1%,cardback$(1),3
    IF stack%(0)=-1 THEN
      PUT 2,muly%*2+os1%,cardback$(1),3
      IF sflag%=1 THEN
        @beep2
      ENDIF
    ELSE
      PUT 2,muly%*2+os1%,cardback$(back%),3
      IF sflag%=1 THEN
        @beep1
      ENDIF
    ENDIF
  CASE 0 TO max%
    IF stack%(0)>-1 THEN
      PUT 2,muly%+os1%,card$(stack%(stack%)),3
      IF stack%(stack%+1)>-1 THEN
        PUT 2,muly%*2+os1%,cardback$(back%),3
      ELSE
        PUT 2,muly%*2+os1%,cardback$(1),3
      ENDIF
      IF sflag%=1 THEN
        @beep1
      ENDIF
    ENDIF
  CASE max1%,max2%
    IF stack%(0)>-1 THEN
      PUT 2,muly%+os1%,card$(stack%(max%)),3
      PUT 2,muly%*2+os1%,cardback$(1),3
      IF sflag%=1 THEN
        @beep1
      ENDIF
      stack%=max%
    ELSE
      PUT 2,muly%+os1%,cardback$(1),3
      PUT 2,muly%*2+os1%,cardback$(1),3
      stack%=-1
    ENDIF
  CASE max3%
    PUT 2,muly%+os1%,cardback$(1),3
    IF stack%(0)=-1 THEN
      PUT 2,muly%*2+os1%,cardback$(1),3
    ELSE
      PUT 2,muly%*2+os1%,cardback$(back%),3
    ENDIF
    stack%=-1
  ENDSELECT
RETURN
'
> PROCEDURE ishuffel
  FOR x%=0 TO 6
    FOR y%=0 TO 19
      pile%(x%,y%)=0
    NEXT y%
  NEXT x%
  FOR x%=1 TO 52
    deck%(x%)=x%
  NEXT x%
  FOR y%=0 TO 3
    suit%(y%)=0
  NEXT y%
  FOR x%=0 TO 30
    stack%(x%)=-1
  NEXT x%
  max%=0
  stack%=-1
  @redraw
RETURN
'
> PROCEDURE shuffel
  score%=score%-52
  FOR x%=0 TO 6
    FOR y%=0 TO 19
      pile%(x%,y%)=0
    NEXT y%
  NEXT x%
  FOR x%=1 TO 52
    deck%(x%)=x%
  NEXT x%
  FOR x%=1 TO 52
    r%=INT(RND(0)*52)+1
    SWAP deck%(x%),deck%(r%)
  NEXT x%
  ' ACE PLACEHOLDERS
  FOR y%=0 TO 3
    suit%(y%)=0
  NEXT y%
  ' PILES
  place%=1
  lin%(0)=0
  keep%(0)=0
  FOR x%=1 TO 6
    lin%(x%)=0
    keep%(x%)=0
    FOR y%=1 TO x%
      lin%(x%)=lin%(x%)+cardy%
      INC keep%(x%)
      pile%(x%,keep%(x%))=-deck%(place%)
      INC place%
    NEXT y%
  NEXT x%
  '
  ' TOP CARD IN EACH PILE
  FOR x%=0 TO 6
    lin%(x%)=lin%(x%)+cardy%
    INC keep%(x%)
    pile%(x%,keep%(x%))=deck%(place%)
    INC place%
  NEXT x%
  '
  ' FILL REST OF STACK
  FOR x%=0 TO 23
    stack%(x%)=deck%(x%+29)
  NEXT x%
  FOR x%=24 TO 30
    stack%(x%)=-1
  NEXT x%
  max%=23
  stack%=-1
  @draw
  stack%(24)=-1
  full%=0
RETURN
'
> PROCEDURE draw
  SGET fix_screen$
  ~XBIOS(5,L:my_screen%,L:screen%,-1)
  SPUT fix_screen$
  '
  DEFFILL 0,2,8
  PBOX 0,os1%-1,639,199
  DEFFILL 1,2,4
  FOR y%=0 TO 3
    IF suit%(y%)<>0
      PUT mulx%+2,os1%+muly%*y%,card$(suit%(y%)+y%*13),3
    ELSE
      PUT mulx%+2,y%*muly%+os1%,cardback$(1),3
    ENDIF
  NEXT y%
  @score
  @show_help
  @another
  SGET fix_screen$
  ~XBIOS(5,L:screen%,L:screen%,-1)
  SPUT fix_screen$
  FOR y%=1 TO 7
    FOR x%=0 TO 6
      IF pile%(x%,y%)<>0 THEN
        IF pile%(x%,y%)<1 THEN
          ' VSYNC
          PUT (x%+2)*mulx%+2,y%*cardy%+os%,cardback$(back%),3
        ELSE
          ' VSYNC
          PUT (x%+2)*mulx%+2,y%*cardy%+os%,card$(pile%(x%,y%)),3
        ENDIF
        @beep0
      ENDIF
    NEXT x%
  NEXT y%
  oscore%=score%-1
  SGET fix_screen$
  ~XBIOS(5,L:screen%,L:screen%,-1)
  SPUT fix_screen$
RETURN
'
> PROCEDURE redraw
  SGET fix_screen$
  ~XBIOS(5,L:my_screen%,L:-1,-1)
  SPUT fix_screen$
  DEFFILL 0,0,0
  PBOX 0,os1%-1,639,199
  DEFFILL 1,2,4
  FOR y%=0 TO 3
    IF suit%(y%)<>0
      PUT mulx%+2,os1%+muly%*y%,card$(suit%(y%)+y%*13),3
    ELSE
      PUT mulx%+2,y%*muly%+os1%,cardback$(1),3
    ENDIF
  NEXT y%
  sflag%=0
  @another
  sflag%=1
  FOR x%=0 TO 6
    IF keep%(x%)>0 THEN
      FOR y%=1 TO keep%(x%)
        IF pile%(x%,y%)<1 THEN
          PUT (x%+2)*mulx%+2,y%*cardy%+os%,cardback$(back%),3
        ELSE
          PUT (x%+2)*mulx%+2,y%*cardy%+os%,card$(pile%(x%,y%)),3
        ENDIF
      NEXT y%
    ENDIF
  NEXT x%
  oscore%=score%-1
  @score
  @show_help
  SGET fix_screen$
  ~XBIOS(5,L:screen%,L:-1,-1)
  SPUT fix_screen$
RETURN
'
> PROCEDURE pick_back
  SGET fix_screen$
  ~XBIOS(5,L:my_screen%,L:-1,-1)
  SPUT fix_screen$
  FOR z%=0 TO 3
    PUT mulx%+2,muly%*z%+os1%,cardback$(z%+2),3
    GRAPHMODE 2
    DEFTEXT 0
    TEXT mulx%+29,muly%*z%+os1%+25,STR$(z%+1)
    TEXT mulx%+32,muly%*z%+os1%+25,STR$(z%+1)
    TEXT mulx%+29,muly%*z%+os1%+27,STR$(z%+1)
    TEXT mulx%+32,muly%*z%+os1%+27,STR$(z%+1)
    DEFTEXT 1
    TEXT mulx%+31,muly%*z%+os1%+26,STR$(z%+1)
    GRAPHMODE 1
  NEXT z%
  t$="LEFT click or key 1-4 to choose, RIGHT click or any other key to abort...."
  DEFTEXT 2
  TEXT 2,199,t$
  GRAPHMODE 2
  DEFTEXT 1
  TEXT 2,198,t$
  GRAPHMODE 1
  SGET temp$
  ~XBIOS(5,L:screen%,L:-1,-1)
  PAUSE 8
  DO
    IF INP?(2) THEN
      dummy%=INP(2)
      PAUSE 2
    ENDIF
  LOOP WHILE INP?(2)
  SPUT temp$
  SHOWM
  DO
    SHOWM
    MOUSE a%,b%,k%
    PAUSE 2
  LOOP UNTIL k%=2 OR INP?(2) OR (k%=1 AND b%>os1% AND b%<muly%*4+os1% AND a%>mulx%-2 AND a%<mulx%*2-2)
  SPUT fix_screen$
  IF k%=1 OR INP?(2)
    IF INP?(2) THEN
      k%=INP(2)
      IF k%>48 AND k%<53 THEN
        back%=k%-47
        @redraw
      ENDIF
    ELSE
      z%=INT((b%-os1%)/muly%)+2
      IF z%<>back% AND z%>1 AND z%<6 THEN
        back%=z%
        @redraw
      ENDIF
    ENDIF
  ENDIF
  PAUSE 4
  DO
    IF INP?(2) THEN
      dummy%=INP(2)
    ENDIF
    PAUSE 2
  LOOP WHILE INP?(2)
  DO
  LOOP UNTIL MOUSEK=0
RETURN
'
> PROCEDURE store_colors
  DIM pal%(3)
  FOR i%=0 TO 3
    pal%(i%)=XBIOS(7,W:i%,W:-1)
  NEXT i%
RETURN
'
> PROCEDURE restore_colors
  FOR i%=0 TO 3
    ~XBIOS(7,W:i%,W:pal%(i%))
  NEXT i%
RETURN
'
> PROCEDURE score
  IF score%<0 THEN
    DEFTEXT 2
  ELSE
    DEFTEXT 3
  ENDIF
  wx%=((LEN(STR$(score%))*8)/2)
  TEXT 0,37,"        "
  TEXT 28-wx%,38,"$"+STR$(score%)
RETURN
'
> PROCEDURE make_backs
  '
  CLS
  COLOR 1
  BOX 2,1,61,44
  BOX 1,2,62,43
  BOX 3,2,60,43
  BOX 4,2,59,43
  DEFFILL 2,2,4
  FILL 32,22
  COLOR 1
  BOX 13,7,50,38
  FOR x%=0 TO 2
    FOR y%=0 TO 5
      a%=0
      b%=0
      DO
        PLOT x%*12+a%+14,y%*6+b%+7
        PLOT x%*12+a%+15,y%*6+b%+7
        IF x%*12+a%+4<6 THEN
          PLOT x%*12+a%+48,37-(y%*6+b%)
          PLOT x%*12+a%+49,37-(y%*6+b%)
        ELSE
          PLOT x%*12+a%+12,37-(y%*6+b%)
          PLOT x%*12+a%+13,37-(y%*6+b%)
        ENDIF
        a%=a%+2
        INC b%
      LOOP UNTIL x%*12+a%>35 OR y%*6+b%>29
    NEXT y%
  NEXT x%
  GET 0,0,63,45,cardback$(2)
  '
  CLS
  COLOR 1
  BOX 2,1,61,44
  BOX 1,2,62,43
  BOX 3,2,60,43
  DEFFILL 2,2,8
  FILL 32,22
  DEFFILL 3,2,4
  GRAPHMODE 2
  FILL 32,22
  GRAPHMODE 1
  GET 0,0,63,45,cardback$(3)
  '
  CLS
  c%=0
  DEFFILL 1
  FOR x%=1 TO 124
    SELECT c%
    CASE 0
      c%=1
      COLOR 1
    CASE 1
      c%=0
      COLOR 0
    ENDSELECT
    LINE 62,44,x%,1
    LINE 62,1,x%,44
  NEXT x%
  GET 31,1,62,44,t$
  CLS
  PUT 100,1,t$,3
  FOR x%=1 TO 31
    GET 100+x%,0,100+x%,45,t$
    PUT 31+x%,0,t$,3
    PUT 33-x%,0,t$,3
  NEXT x%
  COLOR 1
  BOX 2,1,61,44
  BOX 1,2,62,43
  BOX 3,2,60,43
  DEFFILL 1,2,4
  FILL 32,23
  GET 0,0,63,45,cardback$(4)
  '
  CLS
  DEFFILL 3
  FOR x%=1 TO 70 STEP 3
    COLOR 3
    CIRCLE 31,22,x%
  NEXT x%
  COLOR 0
  BOX 1,1,62,44
  COLOR 1
  BOX 2,1,61,44
  BOX 1,2,62,43
  BOX 3,2,60,43
  COLOR 0
  BOX 0,0,63,45
  GET 0,0,63,45,cardback$(5)
  COLOR 1
  DEFFILL 1
  '
RETURN
'
> PROCEDURE make_cards
  BLOAD card_file$,my_screen%
  FOR loop%=0 TO 11
    GET loop%*42,0,loop%*42+41,33,card_p$(loop%)
  NEXT loop%
  FOR loop%=0 TO 3
    GET 506+loop%*16-(loop%=3),0,505+loop%*16+14-(loop%=3),8,card_p$(12+loop%*2)
    GET 506+loop%*16-(loop%=3),9,505+loop%*16+14-(loop%=3),16,card_p$(12+loop%*2+1)
  NEXT loop%
  FOR loop%=0 TO 3
    GET 572+loop%*9,0,572+loop%*9+7,7,card_p$(20+loop%*2)
    GET 572+loop%*9,8,572+loop%*9+7,15,card_p$(20+loop%*2+1)
  NEXT loop%
  FOR loop%=0 TO 7
    GET 504+loop%*16,18,504+loop%*16+15,25,card_p$(29+loop%*2)
    GET 504+loop%*16,26,504+loop%*16+15,33,card_p$(29+loop%*2+1)
  NEXT loop%
  GET 504,18,517,22,po$
  GET 608,0,635,15,card_p$(28)
  CLS
  DEFFILL 1,2,8
  PBOX 2,1,61,44
  PBOX 1,2,62,43
  GET 0,0,63,45,b$
  '
  CLS
  '
  DEFFILL 1,0,0
  PBOX 1,1,62,44
  GET 0,0,63,45,cardback$(1)
  '
  FOR suit%=0 TO 3
    FOR c%=0 TO 9
      PUT 0,0,b$,3
      SELECT c%
      CASE 0
        PUT 25,20,card_p$(12+suit%*2),3
      CASE 1
        PUT 25,7,card_p$(12+suit%*2),3
        PUT 25,32,card_p$(12+suit%*2+1),3
      CASE 2
        PUT 25,7,card_p$(12+suit%*2),3
        PUT 25,32,card_p$(12+suit%*2+1),3
        PUT 25,19,card_p$(12+suit%*2),3
      CASE 3
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
      CASE 4
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 25,20,card_p$(12+suit%*2),3
      CASE 5
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 12,20,card_p$(12+suit%*2),3
        PUT 38,20,card_p$(12+suit%*2),3
      CASE 6
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 25,13,card_p$(12+suit%*2),3
        PUT 12,20,card_p$(12+suit%*2),3
        PUT 38,20,card_p$(12+suit%*2),3
      CASE 7
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 25,13,card_p$(12+suit%*2),3
        PUT 12,20,card_p$(12+suit%*2),3
        PUT 38,20,card_p$(12+suit%*2),3
        PUT 25,26,card_p$(12+suit%*2+1),3
      CASE 8
        IF suit%<2 THEN
          PUT 25,20,card_p$(12+suit%*2),3
        ELSE
          PUT 25,19,card_p$(12+suit%*2),3
        ENDIF
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 12,15,card_p$(12+suit%*2),3
        PUT 38,15,card_p$(12+suit%*2),3
        PUT 12,24,card_p$(12+suit%*2+1),3
        PUT 38,24,card_p$(12+suit%*2+1),3
        SELECT suit%
        CASE 1
          COLOR 2
          LINE 25,21,25,23
          LINE 38,21,38,23
        CASE 2,3
          COLOR 0
          LINE 25,22,25,23
          LINE 38,22,38,23
        ENDSELECT
      CASE 9
        PUT 25,11,card_p$(12+suit%*2),3
        PUT 25,28,card_p$(12+suit%*2+1),3
        PUT 12,7,card_p$(12+suit%*2),3
        PUT 38,7,card_p$(12+suit%*2),3
        PUT 12,32,card_p$(12+suit%*2+1),3
        PUT 38,32,card_p$(12+suit%*2+1),3
        PUT 12,15,card_p$(12+suit%*2),3
        PUT 38,15,card_p$(12+suit%*2),3
        PUT 12,24,card_p$(12+suit%*2+1),3
        PUT 38,24,card_p$(12+suit%*2+1),3
        SELECT suit%
        CASE 1
          COLOR 2
          LINE 25,12,25,14
          LINE 38,12,38,14
          '
          LINE 25,31,25,33
          LINE 38,31,38,33
        CASE 2
          COLOR 0
          LINE 25,14,25,16
          LINE 38,14,38,16
          '
          LINE 25,29,25,31
          LINE 38,29,38,31
        CASE 3
          COLOR 0
          LINE 25,14,25,16
          LINE 38,14,38,16
          '
          LINE 25,29,25,31
          LINE 38,29,38,31
        ENDSELECT
      ENDSELECT
      IF c%=9 THEN
        IF suit%<2 THEN
          COLOR 2
        ELSE
          COLOR 0
        ENDIF
        BOX 3,2,4,8
        BOX 6,2,10,8
        BOX 7,2,9,8
        BOX 60,43,59,37
        BOX 53,43,57,37
        BOX 54,43,56,37
        COLOR 1
      ELSE
        GRAPHMODE 2
        IF suit%<2 THEN
          DEFTEXT 2,0,0
        ELSE
          DEFTEXT 0,0,0
        ENDIF
        IF c%=0 THEN
          TEXT 2,8,"A"
        ELSE
          TEXT 2,8,STR$(c%+1)
        ENDIF
        IF suit%<2 THEN
          DEFTEXT 2,0,1800
        ELSE
          DEFTEXT 0,0,1800
        ENDIF
        IF c%=0 THEN
          TEXT 61,37,"A"
        ELSE
          TEXT 61,37,STR$(c%+1)
        ENDIF
        GRAPHMODE 1
      ENDIF
      PUT 3,10,card_p$(20+suit%*2),3
      PUT 54,28,card_p$(20+suit%*2+1),3
      IF suit%=2 AND c%=0 THEN
        PUT 18,15,card_p$(28),3
        PUT 25,39,po$
      ENDIF
      GET 0,0,63,45,card$(suit%*13+c%+1)
    NEXT c%
    FOR c%=0 TO 2
      PUT 0,0,b$,3
      PUT 11,6,card_p$(suit%*3+c%),3
      GRAPHMODE 2
      IF suit%<2 THEN
        DEFTEXT 2,0,0
      ELSE
        DEFTEXT 0,0,0
      ENDIF
      SELECT c%
      CASE 0
        TEXT 2,8,CHR$(74)
      CASE 1
        TEXT 2,8,CHR$(81)
      CASE 2
        TEXT 2,8,CHR$(75)
      ENDSELECT
      IF suit%<2 THEN
        DEFTEXT 2,0,1800
      ELSE
        DEFTEXT 0,0,1800
      ENDIF
      SELECT c%
      CASE 0
        TEXT 61,37,CHR$(74)
      CASE 1
        TEXT 61,37,CHR$(81)
      CASE 2
        TEXT 61,37,CHR$(75)
      ENDSELECT
      GRAPHMODE 1
      PUT 3,10,card_p$(20+suit%*2),3
      PUT 54,28,card_p$(20+suit%*2+1),3
      GET 0,0,63,45,card$(suit%*13+c%+11)
    NEXT c%
  NEXT suit%
  DEFTEXT 1,0,0
RETURN
'
> PROCEDURE title
  DEFTEXT 2
  CLS
  TEXT 300,85,"CARDS"
  TEXT 270,95,"Public Domain"
  TEXT 234,105,"Press 'HELP' for help."
RETURN
'
> PROCEDURE init
  IF XBIOS(4)<>1 THEN
    ALERT 0," SWITCH TO MED REZ !  ",0," OK ",button%
    END
  ENDIF
  cd%=GEMDOS(25)
  my_path$=DIR$(cd%+1)
  card_file$=my_path$+"\CARDS.DAT"
  card_file$="\SOURCE.GFA\CARDS\CARDS.DAT"
  IF EXIST(card_file$)=0 THEN
    my_path$="\CARDS"
    card_file$=my_path$+"\CARDS.DAT"
    IF EXIST(card_file$)=0 THEN
      a$=" COULDN'T FIND DATA FILE:   |"
      a$=a$+"       "+"'CARDS.DAT' |"
      a$=a$+" IN SAME DIR. AS PROGRAMM. "
      ALERT 0,a$,0," OK ",button%
      END
    ENDIF
  ENDIF
  DIM card$(52),cardback$(17),deck%(52),pile%(6,19),stack%(30),keep%(6)
  DIM lin%(6),suit%(3),flip$(7),back$(7),entry$(17),fix$(10),fix%(1,10)
  DIM card_p$(44)
  DEFMOUSE 0
  CLS
  mulx%=71
  muly%=45
  cardy%=8
  os%=4
  os1%=12
  score%=0
  back%=2
  sflag%=1
  dflag%=0
  full%=1
  a_key%=0
  @store_colors
  SETCOLOR 0,2,0,2
  SETCOLOR 1,6,0,0
  SETCOLOR 2,0,7,0
  SETCOLOR 3,7,7,7
  @title
  screen%=XBIOS(2)
  ~XBIOS(5,L:my_screen%,L:-1,-1)
  FOR loop%=0 TO 17
    READ entry$(loop%)
  NEXT loop%
  GET 0,0,63,45,cardback$(0)
  card$(0)=cardback$(0)
  @make_cards
  @make_backs
  ~XBIOS(5,L:screen%,L:-1,-1)
RETURN
'
DATA , CARDS,-----------------,1,2,3,4,5,6,""
DATA CARDS, NEW GAME    (N) , RESET SCORE (R)
DATA  CHANGE DECK (D) , QUIT        (Q) ,""
DATA "",""
'
' SUIT ORDER=DIAMOND-HEART-SPADE-CLUB
' beep1=flip card
' beep2=bad move
' 0-11 = JQK D-H-S-C
' 12-15 = BIG UP "
' 16-19 =  " DOWN "
' 20-23 = LITTLE UP "
' 24-27 =   "   DOWN "
' 28 = BIG-BIG SPADE
' 29-44 = PATTERNS
