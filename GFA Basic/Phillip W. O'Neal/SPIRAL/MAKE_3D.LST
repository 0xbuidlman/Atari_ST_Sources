$m50000
' RESERVE 4000000
'
@init_variables
@make_pattern
@pic_copy
@tpi_save
' DO
' LOOP UNTIL MOUSEK=2
'
d%=GEMDOS(73,L:pattern%)   ! RELEASE MEMORY
END
'
> PROCEDURE init_variables
  '
  my_handle&=V~H  ! GET VDI HANDLE OF PROGRAMS WORKSTATION
  '
  screen_colors%=WORK_OUT(13)  ! 2,4,16,256,256(TRUE COLOR)
  screen_width%=WORK_OUT(0)+1
  screen_height%=WORK_OUT(1)+1
  system_palette%=WORK_OUT(39)
  '
  ' screen_width%=1024
  ' screen_height%=1024
  '
  CONTRL(0)=102  ! 'VQ_EXTND' - GET EXTRA INFO ABOUT WORKSTATION
  CONTRL(1)=0
  CONTRL(3)=1
  CONTRL(6)=my_handle&
  INTIN(0)=1
  VDISYS
  screen_bits%=INTOUT(4)  ! GET # OF SCREEN PLANES
  pattern%=GEMDOS(72,L:((screen_width%*screen_bits%)/8)*screen_height%)
  IF pattern%<1 THEN
    END
  ENDIF
  '
  '              ARRAYS FOR BITBLT COMMAND
  DIM source_mfdb%(8),destination_mfdb%(8),parameters%(8)
  DIM x(3),y(3)
  '
  FOR zero%=4 TO 8
    source_mfdb%(zero%)=0
    destination_mfdb%(zero%)=0
  NEXT zero%
  '
  source_mfdb%(5)=screen_bits%
  destination_mfdb%(5)=screen_bits%
  parameters%(8)=3 ! REPLACE MODE
  '
  current_drive%=GEMDOS(25)
  path$=DIR$(current_drive%+1)+"\"  ! PROGRAM'S PATH
  pattern_name$=""
  '
  DEFFILL 0,2,8  ! COLOR 0 SOLID FILL PATTERN
  '
  MODE 1
  DEFMOUSE 0  ! BE SURE MOUSE SHAPE IS A POINTER
  HIDEM
  '
RETURN
'
> PROCEDURE pic_copy
  '
  source_mfdb%(0)=0
  '
  destination_mfdb%(0)=pattern%
  destination_mfdb%(1)=screen_width%
  destination_mfdb%(2)=screen_height%
  destination_mfdb%(3)=screen_width%/16
  destination_mfdb%(4)=screen_bits%
  '
  parameters%(0)=0
  parameters%(1)=0
  parameters%(2)=screen_width%-1
  parameters%(3)=screen_height%-1
  parameters%(4)=0
  parameters%(5)=0
  parameters%(6)=screen_width%-1
  parameters%(7)=screen_height%-1
  '
  BITBLT source_mfdb%(),destination_mfdb%(),parameters%()
  '
RETURN
'
> PROCEDURE tpi_save
  '
  OPEN "O",#3,"I:\TEST_256.TPI"
  '
  ' P N T CHR$(0)
  OUT #3,80,78,84,0
  OUT& #3,256,screen_colors%
  '
  hi%=INT(screen_width%/256)
  lo%=screen_width%-(hi%*256)
  OUT #3,hi%,lo%
  '
  hi%=INT(screen_height%/256)
  lo%=screen_height%-(hi%*256)
  OUT #3,hi%,lo%
  '
  OUT& #3,screen_bits%,0
  OUT% #3,((screen_width%*screen_bits%)/8)*screen_height%
  '
  FOR headder%=10 TO 63
    OUT& #3,0
  NEXT headder%
  '
  FOR color%=0 TO screen_colors%-1
    '
    CONTRL(0)=26
    CONTRL(1)=0
    CONTRL(3)=2
    CONTRL(6)=my_handle&
    INTIN(0)=color%
    INTIN(1)=0
    VDISYS
    red&=INTOUT(1)
    green&=INTOUT(2)
    blue&=INTOUT(3)
    OUT& #3,red&,green&,blue&
    '
  NEXT color%
  '
  FOR row%=0 TO screen_height%-1
    BPUT #3,pattern%+row%*((screen_width%*screen_bits%)/8),(screen_width%*screen_bits%)/8
  NEXT row%
  '
  CLOSE #3
  '
RETURN
'
> PROCEDURE make_pattern
  '
  PBOX 0,0,screen_width%-1,screen_height%-1
  '
  center_x%=screen_width%/2
  center_y%=screen_height%/2
  '
  change=3.2
  step%=12
  ' c%=0
  angle=0
  radius_out=screen_height%/2
  '
  FOR col%=2 TO 129
    '
    radius_in=radius_out-((360/step%)*change)
    '
    x(0)=SINQ(angle)*radius_out+center_x%
    y(0)=COSQ(angle)*radius_out+center_y%
    x(1)=SINQ(angle+step%)*radius_out+center_x%
    y(1)=COSQ(angle+step%)*radius_out+center_y%
    x(2)=SINQ(angle+step%)*radius_in+center_x%
    y(2)=COSQ(angle+step%)*radius_in+center_y%
    x(3)=SINQ(angle)*radius_in+center_x%
    y(3)=COSQ(angle)*radius_in+center_y%
    '
    DEFFILL col%
    '
    ' INC c%
    ' IF c%=5 THEN
    ' c%=1
    ' ENDIF
    ' DEFFILL c%
    '
    POLYFILL 4,x(),y()
    '
    angle=angle+step%
    radius_out=radius_out-change
    '
  NEXT col%
  FILL center_x%,center_y%
  '
RETURN
'
> PROCEDURE make_pattern2
  '
  PBOX 0,0,screen_width%-1,screen_height%-1
  '
  center_x%=screen_width%/2
  center_y%=screen_height%/2
  '
  factor=MIN(center_x%,center_y%)/90
  '
  FOR radius=89 TO 0 STEP -1
    '
    col%=130-(SINQ(radius)*128)
    '
    DEFFILL col%
    '
    PCIRCLE center_x%,center_y%,radius*factor
    '
  NEXT radius
  '
RETURN
