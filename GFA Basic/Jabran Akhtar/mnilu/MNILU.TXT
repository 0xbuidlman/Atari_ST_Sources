Please do take time to  read  this  whole  file even if you previously
have read MNILU.TXT of an earlier Mnilu version.
Updted to version : 1.60.8                       Latest version : 1.61



  		////   /// ///   // // //     //   //
                // // //// ////  // // //     //   //
                //  //  // // // // // //     //   //
                //      // //  //// // //     //   //
                //      // //    // // ////// //////

                    C   o   m   p   i   l   e   r



        Perhaps the only  type  of  program  lacking  in Public Domian
libraries was a BASIC compiler. But of  course  there had to be an end
here and Mnilu breaks it first.  It's  a compiler and will compile GfA
BASIC v2 files into stand-alone GEMDOS executable files!
        Well it's not actually a fully compiler but it will do the job
very well. First of all  let  me  clear  one  thing:  Mnilu is not the
commercial GfA BASIC compiler (  I  personaly  have nothing to do with
GfA BASIC ) and nor is  it  very  comprehensive as the commercial one.
But as mentioned it does the job!  The biggest advantage of Mnilu will
be that a lot of people who  own  GfA  BASIC  2 but who don't have the
compiler will be able to  compile  programs  and release them into the
Public Domian.


        Instructions about using Mnilu  are  given after the Shareware
"instructions":


                           Shareware notice
                          ------------------

        Mnilu wasn't written in a single  day  ,a lot of hard work has
gone into making it what it is today.  So if you use it more than once
and release any program  (into  the  PD)  compiled  through it then be
honest and send us something back.  We  only  ask  for NOK 50 Kr which
equals about œ5.00 GBP.
        Remember that if you  send  us  a  check  then  please add the
amount of 50 Kr (œ5.00) since the  bank charge to cash a foregin check
in Norway is 50 Kr.  ( Sending us  a  œ 5.00 check is hence useless ).
You may also send a money order.  But make them payable to STectre c/o
Jabran Akhtar.
        Another (easier & cheaper) methode is to simply send the money
in a letter to us. Although it's not recommended but it will work both
for us and for you! Now there  should'nt  be any execuses for that the
bank/postal charges are so high. The address is
                                                STectre
                                                Stjernemyrvn. 30
                                                0673  Oslo
                                                Norway

Email : jabrana@powertech.no

Kr 50 may also be transferred to our PostGiro account no 0825 0368896.



                             Using Mnilu
                            -------------

        Using Mnilu is very easy. First  of all you of course need the
GfA program. Save the program as  normally with the .BAS extender (GfA
BASIC format) and  load  up  Mnilu  by  running  MNILU.PRG  (make sure
MNILU.RSC is in the same folder). Now the Mnilu menu will come up.

        In the fist line you  can  select  between  a  .TOS and a .PRG
program. Remember that a .TOS program may not use the mouse ,drop-down
menus ,drawing commands and so own. If  you only program in BASIC then
you won't probably know  which  commands  use  GEM  and which does'nt.
Therefor only select the .TOS when you are sure. Running a GEM program
in TOS mode will cause different problems. Bear in mind that GfA BASIC
uses a lot more GEM  commands  that  even neccessary. And however .TOS
programs  (with  a  .PRG  extension)  compiled  using  Mnilu  can  not
(usually) be ran from the AUTO folder.

        In the second option  you  can  select  between  the display (
during compiling ) either the Printer  or Screen. Selecting Printer is
not very useful. But still it's there!

        The third option is to  select  the Output files place. Either
select Same place  which  will  create  the  final  file  in  the same
diretory with the same name but the  extension will be changed to .TOS
or .PRG depending on what you selected earlier. Or select Selected. In
this case the file-selector  will  come  up  (when  compiling) and ask
where you want to save the file.


        Now click on Compile  (the  Disk  icon)  and the file-selector
will pop-up. Select the .BAS file and click on OK. If you had selected
Selected then the file  selector  will  pop-up  once again. Select the
output name with a .PRG (or .TOS ?) extension and click on OK.
        Now the Mnilu compiler will  start  doing  it's real work! The
program will do two passes ,during  the  first pass the .BAS file will
be loaded,memory will be initalised etc.  While in the second pass the
output file will be compiled and  at  the  end the output file will be
written to disk. If there are  any  errors  then they will be reported
(mostly during the first  pass)  and  the  compiling  will be aborted.
However Mnilu will NOT check for any errors in the .BAS file.

        You may now quit back to the Desktop by selecting End and test
the freshly compiled .PRG file by  running  it! If it does'nt seems to
work then do a reset and then try again to run it.

        The program should run as normal but you may have noticed that
the break  ([Control][(Left)Shift][Alternate])  still  worked  and  on
quitting you had to click  on  two  alertboxes.  These problems can be
solved very easily. To turn the  break  off   have the -On break cont-
instruction at the very  firsts  line  of  the  .BAS  file. The second
problem can be solved by using  a  -Quit- or -System- command when you
want to terminate your program. I.e.  do NOT use -edit-, -stop-, -end-
(or nothing) commands.
        Another problem with BASICs is that errors can quite easy come
up. Even thought the  actual  grammer  may  be  OK  but  still a BASIC
program is not error-free. As an  example  GfA BASIC have the limit of
max 32K for each string and you  can't  simply copy a 33K file legally
in the string (without corrupting  the memory atleast). Therefor error
messages may come up and  your  program  will look very unprofessional
(if you want to make it look  professional). Having a -On error gosub-
command  is  hence  recommended.  An  example  (  and  very  simple  )
EX_HEAD.LST file is supplided which you  may  include as a header file
and this demonstrates all of the three things mentioned above.


        In the Mnilu dialog-box you  may  also select Check only. This
is the same as Compile but no output file will be created.

                        ---------------------

        If the compiled program  does'nt  seem  to  work properly then
don't blame Mnilu at first  but  run  the  same program under the same
circumstanses with the GfA BASIC v2 editor.  If it still looks to be a
Mnilu problem then find out that  you  have  enough memory or not (see
below about memory requirments). Try also  to  run the program with no
AUTO folder programs and accessories.

        The MNILU.INF file will be  automatically  saved when you quit
Mnilu ,and will of course  automatically  loaded  when  you run Mnilu.
Deleting this file will start up Mnilu with the default configuration.
Or hold down [Alternate]  when  starting/quitting  Mnilu  to abort the
loading/saving of the MNILU.INF file.


        Clicking on System will bring up  a pop-up menu from where you
can delete files ,create folders etc.  Click only _once_ on System and
the menu will come up. Now  select  the  option  and click on the left
mouse button. To exit  from  the  menu  press  the  right mouse button
,click on OK or move the mouse  pointer  outside the menu and click on
the left mouse button. You can also  call  up SuperView from here ( if
you have it installed ). -> But do NOT quit by using [Q]. <-

        The verify option will turn the disk verify on or off.


                         Limitations of Mnilu
                        ----------------------

              Well ,there had to be some and these are:

        - No linking is possible
        - The minimum length of the output file will be around 28K!
        - A compiled file will require a lot of memory to run  ( not
          any more ,see below )
        - Mnilu can not create AUTO folder programs nor accessories
        - The speed of the compiled program will bearly be faster
          than the one offered by the GfA BASIC v2 editor
        - Normal GfA BASIC Compiler's directives are not supported

        In some cases it may  happen  that  the  output file bombs out
when you run it after  compiling.  It  should'nt happen very often but
if it happen then do a warm reset ( or a cold if you really want ) and
try to re-run the program. Now  it  should  work OK. If still not then
you are probably out of memory. This problem is more likely to show up
on 520's and maybe on 1040 machines.

v1.60 + -> This will rarely  happen  now  and  only if you have _very_
little memory left. This version  will  produce very reliable programs
and should not cause many problems. The compiled programs are now also
a little smaller than what previous versions produced.



               Memory requiremnts for compiled programs
              ------------------------------------------

        Program compiled using  Mnilu (previous  that 1.40) required a
huge amount of memory  just  to start up  ( see below ). For example a
35000 bytes long compiled program required  118000 bytes just to start
up. And that is before your own program started!!
        We've done what we could do to minimise the memory requirments
and it seems that we've done it!  Now  (  v 1.40 and upwards ) you can
use the following algorithm to  found  the minimum memory required for
the compiled program : ( f  =  length  of  the  compiled  file ) : f +
62000. That is the memory required to  start up. But when your program
runs then the memory taken up by Mnilu can be calculated by using this
algorithm:  f + 35000.

        This means that  a  35000  bytes  long  compiled program would
require 97000 bytes to start up. But around 27000 bytes of this memory
will be freed up  and  the  memory  occupied  internally by Mnilu when
running your program will only be around 70000 bytes!   Quite a lot of
saving when compared to 118000 bytes required in previous versions.

        However the more memory the better  and if you absolutely have
the minimum memory required then  the  program  will  crash due to the
memory your own program requires (a  lot  really). And the 27000 bytes
freed up will be  avaliable  to  GEMDOS  but  not  to your own program
unless you use RESERVE.



                           ----------------

-> v1.02 : In this version the  minimum memory required could be found
using by the algorithm : ( f is the length of the compiled file ) :
        ((f-29000) x 3) + 100000
Meaning that a 35000 bytes long  compiled program would require 118000
bytes to to start  up!!  In  an  earlier  documantation (v1.00) it was
stated that the compiled program required   twice the memory as of the
programs length file. This was  WRONG!  Sorry! In that version (v1.00)
the algorithm was the same as above (v1.02).

Also note that due to a  bug  about  24000  bytes were NOT freed up in
v1.02 as stated in the  documantation  file.  Sorry again. But however
there aren't any wrong statements in this file (honest!).


             ----------- Bugs in version 1.50 -----------

        We are very very very very sorry about that but many bugs came
into version 1.50's _compiled_ programs and   ,er .. here is a summary
of them :

                - It was impossible to load a file (BLOAD ,OPEN .. .)
                - Some times the drive P/Q letter was selectable in the
                  file selector even if there was'nt a drive P/Q
                - Under a few cases GEMDOS lost every single byte of
                  memory avaliable


        Well these are all  very  serious  bugs  and  all of them have
of course been fixed in v1.60+.  We  are not  BASIC programmres and we
never checked a compiled BASIC program  as we really should have done.
We appologise for that and can only  hope that this didn't caused many
problems or data-loss ( for example  loading a file and then re-saving
it meant that the saved file was garbage ).


                --------------------------------------


        A version of Mnilu  for  GfA  BASIC  3  may  be created in the
future but at the moment for us  it  only seems to be possible for GfA
BASIC v3.0. And almost everyone seems  to  have GfA BASIC v3.5E (don't
ask me why!). But unforutently  it  will  require even more memory and
the minumum size (for v3.0) will come up to around 42K!

        If you don't have GfA  BASIC  2  then it's avaliable through a
few PD libraries at the same price  as a normal PD Disk (although it's
still copyright). Try The  ST  Club  disk  LAN.113  or Goodman PD disk
GD500.



        STectre can not be  held  responsible  for  any kind of damage
caused by the use of Mnilu  directly  or indirectly.You do every thing
at your own responsibility. Let's  hope  that  the people at GfA don't
mind  Mnilu.  GfA  BASIC  (v2)   is   copyright  (C)  1986/87  by  GFA
Systemtechnik GmbH and also by GFA Data Media (UK) Ltd.
        Mnilu is Copyright  Free-Shareware  (CFS)  1993.  There  is no
copyright here do whatever you  wish  to  do  ( also with the compiled
programs ) but if do anything with Mnilu then please register with us.



                Please support all Shareware programs.

Mnilu was written using HiSoft's Devpac.
About problems or any thing else write (even if you don't register) to
us at the address above.


                                                Enjoy .. .





   ---------------------------------------------------------------
-------------------------------------------------------------------------



 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
 ||      |  ||  |      |      |     |||  ||  |  |      |  ||||||||||  ||
 ||  |||||  ||  |  ||  |  |||||  ||  ||  ||  |  |  |||||  |||||||||  |||
 ||      |  ||  |     ||     ||    ||||  ||  |  |     ||  ||   |||  ||||
 ||||||  |  ||  |  |||||  |||||  |  |||  |  ||  |  |||||  |  |  |  |||||
 ||      |     ||  |||||      |  ||  |||  ||||  |      ||  ||||   ||||||
 |||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||



      Fed up with GEM's Show/Print/Cancel (Visa/skriv/Avbryt) ?

Use SuperView ,the most comprehensive file-viewer system ever written
for the ST. Completely replaces the GEM's offering ,or call it from
the supplided accessory.

Just look at a few of the features .. .

- displays NEOchrome,Deags(Elite) and Spectrum 512 pics
- support for 1ST Word & Protext WP files
- print files to parallel/serial/MIDI and parallel(direct)
- up to 9 files in memory at once
- replays sample files (STE support)
- decompacts Pack-Ice v2.4 packed files
- search forward/backward/research options
- up to 9 pre-defined search strings
- goto start/middle or end of file
- view files in either 8x8 or 8x16 fonts
- support for large screens                - displays ST font (A1/A2) files
- intelligent mouse scrolling              - swap between low/med res
- hex-mode converting                      - info-lines
- virus checker                            - up to 10 markers
- no need to load the program each time ,just copy it to the AUTO folder
- replaces Show/Print/Cancel (not fully on TOS 2+)
- .. . and lots more ,uses only 33 K!

          Quite simply the best file viewer ever written for the ST!
Once  you've  used   it   ,you'll   never   gonna   go   back  to  the
Show/Print/Cancel!
        No other file-viewer even  comes  close  to  SuperView ,if you
haven't seen it yet then get a copy NOW.


                          _-_-_-_-_-_-_-_-_




     ///////////////////////////////////////////////////////////
     //       /        /      //      /        /      //      //
     //  /////////  ////  /////  /////////  ////  //  //  //////
     //       ////  ////    ///  /////////  ////    ////    ////
     ///////  ////  ////  /////  /////////  ////  /  ///  //////
     //       ////  ////      //     /////  ////  //  //      //
     ///////////////////////////////////////////////////////////

                     Shareware Software in STyle


                          _-_-_-_-_-_-_-_-_



                  kea aap bhi jahanh par henh ??? ?
                hamari taraf se saari dunia ko aadaab!



---------------------------------EOF-------------------------------------



