> PROCEDURE gleichung(object&)
'
p=VAL(p_var$)
q=VAL(q_var$)
a=(p/2)^2
SUB a,q
s=-p/2
IF a<0
  CLR probe$,calc2$
  IF lang%=1
    calc1$="Es gibt keine L”sung!!!"
  ELSE
    calc1$="There is no solution!!!"
  ENDIF
ELSE
  CLR loesung$
  x1=ADD(s,SQR(a))
  x2=SUB(s,SQR(a))
  x1$=STR$(x1)
  x2$=STR$(x2)
  ergebnis2$=STR$((VAL(x2$)^2)+(MUL(p,VAL(x2$)))+q)
  ergebnis$=STR$((VAL(x1$)^2)+(MUL(p,VAL(x1$)))+q)
  calc1$=x1$+"ý+"+p_var$+"*"+x1$+" = "+ergebnis$
  calc2$=x2$+"ý+"+p_var$+"*"+x2$+" = "+ergebnis2$
  probe$="x1*x2 =q&x1+x2=-p | x1*x2="+STR$(MUL(x1,x2))+"  x1+x2="+STR$(ADD(x1,x2))
ENDIF
IF object&=clipb&
  clip$=@clip_write$+"\SCRAP.TXT"
  IF @open_o(clip$,1)=FALSE
    IF lang%=1
      PRINT #1,"      Gleichungsberechnung mit der p/2-Formel"
    ELSE
      PRINT #1,"    Equation Calculation using the p/2 formula"
    ENDIF
    PRINT #1,"x^2 + p * x = ??"
    PRINT #1,"p    = ";p_var$;"    q=";q_var$
    PRINT #1,""
    PRINT #1,calc1$
    PRINT #1,calc2$
    PRINT #1,""
    PRINT #1,"      Probe:"
    PRINT #1,"x1*x2  =q  & x1+x2=-p"
    PRINT #1,"x1*x2  ="+STR$(x1*x2)+"  x1+x2="+STR$(x1+x2)
    CLOSE #1
    @olga_update(clip$)
  ENDIF
ENDIF
@rsc_set_text(main&,x1&,x1$)
@rsc_set_text(main&,x2&,x2$)
@rsc_set_text(main&,calcx1&,calc1$)
@rsc_set_text(main&,calcx2&,calc2$)
@rsc_set_text(main&,probe&,probe$)
@rsc_ob_reset(main&,calcx1&)
@rsc_ob_reset(main&,calcx2&)
@rsc_ob_reset(main&,x1&)
@rsc_ob_reset(main&,x2&)
@rsc_ob_reset(main&,probe&)
'
RETURN
> PROCEDURE get_language
a!=@get_cookie("_AKP",value%)
IF a!=TRUE
lang%=SHR(value%,8)
ELSE
a%=@appl_xgetinfo(3,b&,c&,d&,xm&)
IF a%=0
  CLR lang%
ELSE
  lang%=b&
ENDIF
ENDIF
RETURN
'
' ------------------------------------------------------------------------
' WRINKLES INFO/DOCS:
'
'
' ------------------------------------------------------------------------
'
> PROCEDURE user_rsc_context_help(tree&)
SELECT tree&
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
DEFAULT
@call_st_guide("EQUATION.HYP","")
ENDSELECT
RETURN
> PROCEDURE user_rsc_var_init
'
'  You MUST set these variables (and DIMension any listbox arrays here).
'  This is read ONCE, at startup, and the corresponding dialog objects
'  will be set accordingly.
'
current_menubar&=menu&      !set this to the menu bar tree index
'
' snap_windows!=TRUE
quit_alert!=TRUE
'
LET p_var$=""                             ! Max lenght: 6 - tree: main&
LET q_var$=""                             ! Max lenght: 6 - tree: main&
'
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
'
RETURN
> PROCEDURE user_rsc_interact(index&,tree&,object&,mc&,sub_me&)
'
'  <index&> is the index of this window in window_array&(index&,x)
'           If the object tree is the normal menu bar, <index&>=-1
'   <tree&> is the object tree number
' <object&> is the object that was selected (clicked on OR shortcut)
'     <mc&> is the number of clicks (1=normal/2=double clicked/1 if shortcut)
' <sub_me&> is the chosen menuitem in a popup menu
'
SELECT tree&
'
' ------------------------------------------------------------------------
'
CASE main&
SELECT object&
CASE mainok&
@gleichung(object&)
CASE cancel&
exit_program!=TRUE
CASE clipb&
@gleichung(object&)
CASE about&
~@win_open_dialog(2,equainfo&,icfyicon&)
ENDSELECT
'
CASE equainfo&
SELECT object&
CASE infook&
@win_close_dialog(equainfo&)
ENDSELECT
'
' ------------------------------------------------------------------------
'
CASE fvt_altr&
alert_result&=SUB(object&,7)
@win_close(@find_handle_from_tree(fvt_altr&))
'
' ------------------------------------------------------------------------
'
'
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
'
ENDSELECT
RETURN
> FUNCTION user_rsc_bubble_help$(tree&,object&)
LOCAL help_str$
help_str$=""
'
' To enter a bubble help text for an object, simply write
' help_str$="My help text"like this into its CASE entry
' (directly below it). If you do not want bubble help for
' a given object, just delete its CASE entry...
'
'
' ----------------------------------------------------------------------------
SELECT tree&
'
'
CASE equainfo&
SELECT object&
CASE infook&
help_str$="Close Info."
ENDSELECT
'
CASE main&
SELECT object&
CASE p&
help_str$=""
CASE q&
help_str$=""
CASE x1&
help_str$=""
CASE x2&
help_str$=""
CASE calcx1&
help_str$=""
CASE calcx2&
help_str$=""
CASE probe&
help_str$=""
CASE mainok&
help_str$=""
CASE cancel&
help_str$=""
CASE clipb&
help_str$=""
CASE about&
help_str$=""
ENDSELECT
'
'
ENDSELECT
RETURN help_str$
ENDFUNC
> PROCEDURE user_on_open
'
' This procedure is called when the program is run, after the RSC is
' loaded and just before the main loop. You can open program windows,
' toolboxes etc. here, or  init things for your program like
' loading an *.INF or .DAT file.
'
'
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
@gemscriptcmd_init                                         !êêFVW:GEMScriptCMDêê
IF dummy!=FALSE
~@win_open_dialog(2,main&,icfyicon&)
dummy!=TRUE
ENDIF
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
'
RETURN
> FUNCTION user_quit_ok
$F%
exit_program!=FALSE
IF acc!
RETURN TRUE
ELSE
'
' User wants to quit
' Return value: TRUE  to quit
'               FALSE to ignore
'
' The following SELECT-CASE-ENDSELECT structure is just an example.
' If you want to use an alert,  you may (should?:-) want to use
' a windowed alert...
'
' The rest of the code in this function should *NOT* be altered!
'
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
'
IF quit_alert!
IF lang%=1
xm|=@alert_wind(1,5,"")
ELSE
xm|=@alert_wind(1,4,"")
ENDIF
SELECT xm|
CASE 1
RETURN TRUE
CASE 2
RETURN FALSE
ENDSELECT
ELSE
RETURN TRUE
ENDIF
'
ENDIF
ENDFUNC
> FUNCTION user_systemcheck
$F%
'
'
@get_language
'
' êêwsnippetêê  - Wrinkle code: (don't change or delete this flag)
' êêwsnippetêê  - End of Wrinkle code: (don't change or delete this flag)
'
RETURN TRUE
ENDFUNC
'
' ------------------------------------------------------------------------
' WRINKLE CALLBACK ROUTINES: Just fill in...
'
'
> FUNCTION user_gemscriptcmd_command(cmd$)
$F%
' -----------------------------------------------------------------------------
'
IF cmd$="APPGETLONGNAME"
@gemscriptcmd_return(CHAR{faceval_sys%+2854})    ! get long AppName
RETURN 0
ELSE IF cmd$="VERSION"
@gemscriptcmd_return("1.6")    ! get long AppName
RETURN 0
ELSE IF cmd$="QUIT"
LET exit_program!=TRUE
RETURN 0
ELSE IF cmd$="SHUTDOWN"
LET exit_program!=TRUE
LET quit_alert!=FALSE
RETURN 0
'

ENDIF
'
' êêwsnippetêê
' êêwsnippetêê
'
RETURN 1      ! command unknown
ENDFUNC
