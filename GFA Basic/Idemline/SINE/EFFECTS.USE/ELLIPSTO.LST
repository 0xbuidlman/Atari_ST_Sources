'
SETCOLOR 0,0
SETCOLOR 3,1,2,3
SETCOLOR 2,2,3,4
SETCOLOR 1,3,4,5
'
@init
@ellipse_(10,40,35)
@re_init
'
> PROCEDURE ellipse_(pas0,pas1,nb&)
  DIM buf|(64000)
  DIM x&(nb&+1),y&(nb&+1)
  DIM x1&(nb&),y1&(nb&)
  DIM c0(720),s0(720)
  DIM c1(720),s1(720)
  DIM c2(720),s2(720)
  DIM c3(720),s3(720)
  buf%=V:buf|(0)
  buf1%=V:buf|(0)+32000
  '
  coef=0.5
  FOR h&=0 TO 720
    c0(h&)=60*COSQ(pas0*h&)*coef
    s0(h&)=80*SINQ(pas0*h&)*coef
    c1(h&)=COSQ(h&)*coef
    s1(h&)=SINQ(h&)*coef
    c2(h&)=40*COSQ(h&)*coef
    s2(h&)=40*SINQ(h&)*coef
    c3(h&)=60*COSQ(h&)*coef
    s3(h&)=20*SINQ(h&)*coef
  NEXT h&
  '
  @ellipse_play(pas0,pas1,nb&)
  '
  ERASE s3(),c3(),s2(),c2()
  ERASE s1(),c1(),s0(),c0()
  ERASE y1&(),x1&(),y&(),x&()
  ERASE buffer|()
RETURN
> PROCEDURE ellipse_play(pas0,pas1,nb&)
  REPEAT
    CLS
    CLR o&,m&
    FOR h&=0 TO SUCC(nb&) STEP 2
      o&=ADD(o&,pas1) MOD 720
      m&=ADD(o&,k&) MOD 720
      x&(h&)=s0(h&)+c2(m&)*c1(k&)
      y&(h&)=c0(h&)+s2(m&)*s1(k&)
    NEXT h&
    CLR o&,m&
    FOR h&=1 TO SUCC(nb&) STEP 2
      o&=ADD(o&,pas1) MOD 360
      m&=ADD(o&,k&) MOD 360
      x&(h&)=s0(h&)+c3(m&)*c1(k&)
      y&(h&)=c0(h&)+s3(m&)*s1(k&)
    NEXT h&
    FOR h&=0 TO nb&
      x1&(h&)=ADD(x&(h&),x&(SUCC(h&)))
      y1&(h&)=ADD(y&(h&),y&(SUCC(h&)))
    NEXT h&
    '
    DEFFILL 2,2,8
    POLYFILL SUCC(nb&),x1&(),y1&() OFFSET 160,100
    @bli_p2(x3%,buf%,1,8,8,190)
    @bli_p2(buf1%,x3%+2,1,8,8,190)
    SWAP buf1%,buf%
    '
    k&=ADD(k&,10) MOD 360
    SWAP x3%,x2%
    ~XBIOS(5,L:x3%,L:x2%,-1)
    VSYNC
  UNTIL PEEK(&HFFFC02)=57
RETURN
'
> PROCEDURE init
  CLS
  old%=XBIOS(3)
  res%=XBIOS(4)
  '
  OUT 4,18
  SPOKE &H484,0
  savg%=GEMDOS(32,L:0)
  '
  DIM e|(32512)
  e%=256*SUCC(DIV(V:e|(0),256))
  ~XBIOS(5,L:e%,L:-1,-1)
  x3%=XBIOS(3)
  x2%=XBIOS(2)
RETURN
> PROCEDURE re_init
  CLS
  ~XBIOS(5,L:old%,L:old%,res%)
  ERASE e|()
  '
  SPOKE &H484,7
  OUT 4,8
  ~GEMDOS(32,L:savg%)
  '
  CLS
RETURN
> PROCEDURE bli_p2(img%,x%,plan&,pas&,ecart&,haut&)
  xb%=x%
  CARD{&H8A00}=&X1111111111111111   ! ram 1/2 teinte 0
  CARD{&H8A02}=&X1111111111111111   !                1
  CARD{&H8A04}=&X1111111111111111   !                2
  CARD{&H8A06}=&X1111111111111111   !                3
  CARD{&H8A08}=&X1111111111111111   !                4
  CARD{&H8A0A}=&X1111111111111111   !                5
  CARD{&H8A0C}=&X1111111111111111   !                6
  CARD{&H8A0E}=&X1111111111111111   !                7
  CARD{&H8A10}=&X1111111111111111   !                8
  CARD{&H8A12}=&X1111111111111111   !                9
  CARD{&H8A14}=&X1111111111111111   !               10
  CARD{&H8A16}=&X1111111111111111   !               11
  CARD{&H8A18}=&X1111111111111111   !               12
  CARD{&H8A1A}=&X1111111111111111   !               13
  CARD{&H8A1C}=&X1111111111111111   !               14
  CARD{&H8A1E}=&X1111111111111111   !               15
  '
  CARD{&HFFFF8A20}=pas&
  CARD{&HFFFF8A22}=0
  LONG{&HFFFF8A24}=img%
  SELECT plan&
  CASE 1 !1PLAN
    CARD{&HFFFF8A28}=&X1111111111111111
    CARD{&HFFFF8A2A}=&X1111111111111111
    CARD{&HFFFF8A2C}=&X1111111111111111
    CARD{&HFFFF8A2E}=ecart&  ! 2,4,8 suivant resol.
    CARD{&HFFFF8A30}=0
    LONG{&HFFFF8A32}=xb%
    CARD{&HFFFF8A36}=21
  CASE 4 !4PLANS
    CARD{&HFFFF8A28}=&HFFFF
    CARD{&HFFFF8A2A}=&HFFFF
    CARD{&HFFFF8A2C}=&HFFFF
    CARD{&HFFFF8A2E}=2
    CARD{&HFFFF8A30}=0
    LONG{&HFFFF8A32}=xb%
    CARD{&HFFFF8A36}=81
  ENDSELECT
  '
  CARD{&HFFFF8A38}=haut&                   ! hauteur en pixels
  CARD{&HFFFF8A3A}=&H203                   ! comb. source/ram & op. logique
  CARD{&HFFFF8A3C}=&HC000                  ! c=blitter  8=partage
RETURN
