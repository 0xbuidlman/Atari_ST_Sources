' GRAND.LST
' agrandissement de graphique, de 2 … 8 fois
' --------------------------------------------
' r‚server de la place m‚moire pour le graphique cible
GET 0,0,639,399,d$
'
' cr‚er un petit graphique
BOX 10,10,61,45
LINE 10,10,61,45
DEFTEXT 1,0,0,13
TEXT 24,32,"GFA"
'
ALERT 2,"Faire un d‚tour par une chaŒne de caractŠres ?",1,"directement|chaine",dest%
DEC dest%
'
' offset en m‚moire (origine)
x%=10
y%=10
' offset en m‚moire (cible)
xz%=3*32
yz%=10
' largeur et hauteur de la partie … agrandir
w%=52
h%=36
' adresses origine et de la cible
s%=XBIOS(2)
IF dest%
  d%=VARPTR(d$)+6
ELSE
  d%=XBIOS(2)
ENDIF
'
' facteur agrandissement (1,2,3,4,5,6,7,8)
' en Assembleur seulement 1,2,4,8
'
f%=8
'
ALERT 2,"Agrandir le graphique |en GFA Basic|ou en GFA Assembleur ?",1,"Basic|Ass.",question%
'
' agrandissement avec aide du GFA Basic
IF question%=1
  t=TIMER
  ' d‚finir les secteurs pour BITBLT
  DIM s%(8),d%(8),p%(8)
  ' origine = ‚cran
  s%(0)=s%
  s%(1)=640
  s%(2)=400
  s%(3)=40
  s%(4)=0
  s%(5)=1
  ' cible = d$
  d%(0)=d%
  d%(1)=640
  d%(2)=400
  d%(3)=40
  d%(4)=0
  d%(5)=1
  ' copier par recouvrement
  p%(8)=3
  '
  ' agrandir le graphique axe des X
  aide%=xz%
  ' de p%(0) … p%(3) = coordonn‚es d'origine
  ' de p%(4) … p%(7) = coordonn‚es de destination
  FOR m%=x% TO x%+w%-1
    ' lecture
    p%(0)=m%
    p%(1)=yz%
    p%(2)=m%
    p%(3)=yz%+h%-1
    ' recopier f% fois
    FOR n%=1 TO f%
      p%(4)=aide%
      p%(5)=yz%
      p%(6)=aide%
      p%(7)=yz%+h%-1
      BITBLT s%(),d%(),p%()
      INC aide%
    NEXT n%
  NEXT m%
  '
  ' agrandir le graphique axe des Y
  ' nouvelle adresse pour origine c-…-d
  ' que les adresses origine et de destination
  ' sont maintenant semblables
  s%(0)=d%
  DEC aide%
  aide2%=yz%+h%*f%-1
  FOR m%=45 TO 10 STEP -1
    ' lecture
    p%(0)=xz%
    p%(1)=m%
    p%(2)=aide%
    p%(3)=m%
    ' recopier f% fois
    FOR n%=1 TO f%
      p%(4)=xz%
      p%(5)=aide2%
      p%(6)=aide%
      p%(7)=aide2%
      BITBLT s%(),d%(),p%()
      DEC aide2%
    NEXT n%
  NEXT m%
ENDIF
'
' agrandissement avec aide du GFA Assembleur
IF question%=2
  '
  ' appel du programme ‚crit en Assembleur dans lequel
  ' s% et d% repr‚sentent les adresses information
  '  graphique
  ' x% et y% repr‚sentent offset du graphique origine, en
  ' pixels w% et h% repr‚sentent la largeur et la hauteur du graphique
  ' origine en pixels
  ' xz% et yz% repr‚sentent offset du graphique cible, en
  ' pixels
  ' f% repr‚sente facteur agrandissement (2,4,8)
  '
  t=TIMER
  '
  grand$=SPACE$(294)
  grand%=VARPTR(grand$)
  BLOAD "grand.prg",grand%
  VOID C:grand%(L:s%,L:d%,W:x%,y%,w%,h%,xz%,yz%,f%)
ENDIF
'
tt=(TIMER-t)/200
'
' afficher en mode 7 (par transparence) agrandissement
' obtenu
IF dest%
  PUT 0,0,d$,7
ENDIF
'
t$=STR$(tt)
IF question%=1
  ALERT 1,"En GFA Basic, |l'agrandissement demande|"+t$+" secondes.",1," OK ",d%
ELSE
  ALERT 1,"En GFA Assembleur, |l'agrandissement demande|"+t$+" secondes.",1," OK ",d%
ENDIF
'
EDIT
