'
' DISKETT
'
> PROCEDURE fil(a$,b$,x$,VAR f$,k)  ! @fil(path$,info$,Extention$, VAR fil$, Ok)
  LOCAL fbild$,p$,p1$,x,a
  IF a$=""
    p$=CHR$(GEMDOS(25)+65)+":"+DIR$(0)+"\"
  ELSE
    p$=a$
  ENDIF
  p1$=p$+"*."+x$
  GET 154,20/ytal,490,370/ytal,fbild$
  IF b$>""
    DEFFILL 1,0,0
    PBOX 157,20/ytal,482,54/ytal
    BOX 160,22/ytal,479,52/ytal
    a=(39-LEN(b$))/4
    TEXT 163+(a*16),43/ytal,b$
    inv(157,20/ytal,325,(54/ytal-20/ytal))
  ENDIF
  IF FSEL_INPUT(p1$,filnamn$,k)
    f$=filnamn$
    PUT 154,20 DIV ytal,fbild$
    x=RINSTR(p1$,"\")
    p$=LEFT$(p1$,x)
    IF RIGHT$(f$)="."
      f$=LEFT$(f$,LEN(f$)-1)
    ENDIF
    IF k=1 AND f$=""
      k=0
      f$=""
    ENDIF
    IF k=1 AND f$>""
      f$=p$+f$
      IF f$>""
        CHDRIVE LEFT$(f$,3)
        x=RINSTR(f$,"\")
        var$=MID$(f$,3,x-3)
        IF var$=""
          var$="\"
        ENDIF
        CHDIR var$
      ENDIF
    ELSE
      k=0
      f$=""
    ENDIF
  ENDIF
RETURN
> PROCEDURE write(adr%,len)         ! @write(V:a$,LEN(a$))
  LOCAL b$
  b$=MKI$(len)
  BPUT #1,V:b$,2
  BPUT #1,adr%,CVI(b$)
RETURN
> PROCEDURE read(VAR a$)            ! @read(b$)
  LOCAL len
  len=CVI(INPUT$(2,#1))
  a$=INPUT$(len,#1)
RETURN
> PROCEDURE disk_error(num)         ! Visar fel vid formaterning/Diskutrymme
  LOCAL a$,b$,a
  b$="][ - Ok - ]"
  SELECT num
  CASE 0
    a=DFREE(1)
    a$="Formaterning Ok!|Disketten har "+STR$(a)+" Bytes |fritt utrymme ... "
  CASE -13
    a$="Skrivskyddet m†ste tagas |bort INNAN formaterning ... "
  DEFAULT
    a$="Ej registrerat fel har|uppst†tt...|Nummer : "+STR$(num)
  ENDSELECT
  ~FORM_ALERT(1,"[1]["+a$+b$)
RETURN
> FUNCTION formatera(tracks%,sides%,spt%,dev%)    ! Sp†r,Sida,Sektor,Enhet
LOCAL a$
OUT 4,18
SPOKE &H452,0
magic%=&H87654321
interleave%=11        !fastloadformat
fllr%=&H87654321
fmtbuffer$=STRING$(10240,0)
'
GET 199,82/ytal,431,(85/ytal)+72/ytal,a$
@box(200,85/ytal,230,72/ytal)
PRINT AT(29,7);"Formaterning P†g†r ..."
PRINT AT(30,9);"Track:     Sidor: ";sides%+1
'
FOR track%=0 TO tracks%
  PRINT AT(37,9);track%
  IF track%<2
    virgin%=&H0
  ELSE
    virgin%=&HE5E5
  ENDIF
  FOR side%=0 TO sides%
    dummy%=XBIOS(10,L:VARPTR(fmtbuffer$),L:VARPTR(fillr%),dev%,spt%,track%,side%,interleave%,L:magic%,virgin%)
    EXIT IF dummy%<>0
  NEXT side%
  EXIT IF dummy%<>0
NEXT track%
'
IF dummy%=0
  dummy%=@bootsect(dev%)
ENDIF
fmtbuffer$=""
OUT 4,8
SPOKE &H452,1
PUT 199,82/ytal,a$
RETURN dummy%
ENDFUNC
> FUNCTION bootsect(dev%)
LOCAL sector%,track%,side%,upp,low,sec,a,b,c,bootbuff$,ibm$
sector%=1
track%=0
side%=0
count%=1
ibm$=CHR$(&HEB)+CHR$(&H34)+CHR$(&H90)+"IBM  "
a=INT(RND(1)*200)+13
b=INT(RND(1)*200)+13
c=INT(RND(1)*200)+13
bootbuff$=ibm$+CHR$(a)+CHR$(b)+CHR$(c)+CHR$(0)+CHR$(2)+CHR$(2)
bootbuff$=bootbuff$+CHR$(1)+CHR$(0)+CHR$(2)+CHR$(70)+CHR$(0)
sec=spt%*(tracks%+1)*(sides%+1)
upp=INT(sec/256)
low=((sec/256)-upp)*256
bootbuff$=bootbuff$+CHR$(low)+CHR$(upp)+CHR$(248+sides%)+CHR$(5)
bootbuff$=bootbuff$+CHR$(0)+CHR$(spt%)+CHR$(0)+CHR$(sides%+1)+STRING$(485,0)
RETURN XBIOS(9,L:VARPTR(bootbuff$),L:VARPTR(fllr%),dev%,sector%,track%,side%,count%)
ENDFUNC
'
' DIVERSE
'
> FUNCTION m_in(x,y,w,h)           ! Musen i omr†de [x,y,w,h] ?
LOCAL a,b,k
MOUSE a,b,k
RETURN a>=x AND a<=x+w AND b>=y AND b<=y+h
ENDFUNC
> FUNCTION m_ut(x,y,w,h)           ! musen utanf”r omr†de [x,y,w,h] ?
LOCAL a,b,k
MOUSE a,b,k
RETURN a<x OR a>x+w OR b<y OR b>y+h
ENDFUNC
> PROCEDURE start                  ! Programstart
~GRAF_HANDLE(w_char,h_char,w_box,h_box)
xmax=WORK_OUT(0)      ! x maxkordinat
ymax=WORK_OUT(1)      ! y max kordinat
filnamn$=""
rez=XBIOS(4)
IF rez=2
ytal=1
ELSE
ytal=2
ENDIF
RETURN
> PROCEDURE inv(x,y,w,h)           ! invertera omr†de [x,y,w,h]
HIDEM
DEFFILL 1,1,1         ! svart
GRAPHMODE 3
PBOX x,y,x+w,y+h
PLOT x,y
DEFFILL 0,0,0         ! vit
GRAPHMODE 0
SHOWM
RETURN
> PROCEDURE box(x,y,w,h)           ! Ritar vit box [x,y,w,h]
DEFFILL 1,0
PBOX x,y,x+w,y+h
RBOX x+2,y+2,x+w-2,y+h-2
RETURN
> PROCEDURE mkwait(a)              ! V„ntar p† att mus/tangent = [a]
REPEAT
UNTIL MOUSEK=a OR ASC(INKEY$)=a
RETURN
> PROCEDURE syncwait(a)            ! Anropar VSYNC [a] antal g†nger
LOCAL i
FOR i=1 TO a
VSYNC
NEXT i
RETURN
