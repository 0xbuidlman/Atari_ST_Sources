' DIVIDE AND CONQUER GUESSING
'
x_max&=159
y_max&=99
x_min=-2.5
y_min=-1.25
x_step=-y_min/(y_max&+1)*2
max_it&=30
real_int&=2^12
'
DIM real&(x_max&),imag&(y_max&),computed!(x_max&,y_max&)
'
FOR a&=0 TO x_max&
  real&(a&)=(x_min+a&*x_step)*real_int&
NEXT a&
'
FOR b&=0 TO y_max&
  imag&(b&)=(y_min+(y_max&-b&)*x_step)*real_int&
NEXT b&
'
t%=TIMER
FOR a&=0 TO x_max&
  FOR b&=0 TO y_max&
    16bit_quad(a&,b&)
  NEXT b&
NEXT a&
t%=TIMER-t%
'
FOR a&=0 TO x_max&
  FOR b&=0 TO y_max&
    computed!(a&,b&)=FALSE
  NEXT b&
NEXT a&
'
CLS
u%=TIMER
16bit_dcg
PRINT "NORMAL : ";t%
PRINT "DCG : ";TIMER-u%
'
> PROCEDURE 16bit_dcg
  '
  16bit_quad(0,0)
  16bit_quad(x_max&,0)
  16bit_quad(0,y_max&)
  16bit_quad(x_max&,y_max&)
  dcg_section(0,0,x_max&+1,y_max&+1)
  '
RETURN
'
> PROCEDURE dcg_section(x0&,y0&,width&,height&)
  '
  LOCAL x1&,y1&,x_mid&,y_mid&
  '
  ' CALCULATE MIDPOINTS
  mono!=TRUE
  col|=PTST(x0&,y0&)
  x1&=x0&+width&-1
  y1&=y0&+height&-1
  x_mid&=x0&+width& DIV 2
  y_mid&=y0&+height& DIV 2
  '
  IF NOT computed!(x_mid&,y0&)
    16bit_quad(x_mid&,y0&)
  ENDIF
  mono!=mono! AND (col|=PTST(x_mid&,y0&))
  '
  IF NOT computed!(x_mid&,y1&)
    16bit_quad(x_mid&,y1&)
  ENDIF
  mono!=mono! AND (col|=PTST(x_mid&,y1&))
  '
  IF NOT computed!(x0&,y_mid&)
    16bit_quad(x0&,y_mid&)
  ENDIF
  mono!=mono! AND (col|=PTST(x0&,y_mid&))
  '
  IF NOT computed!(x1&,y_mid&)
    16bit_quad(x1&,y_mid&)
  ENDIF
  mono!=mono! AND (col|=PTST(x1&,y_mid&))
  '
  IF NOT computed!(x_mid&,y_mid&)
    16bit_quad(x_mid&,y_mid&)
  ENDIF
  mono!=mono! AND (col|=PTST(x_mid&,y_mid&))
  '
  IF mono! AND col|=PTST(x0&,y1&) AND col|=PTST(x1&,y0&) AND col|=PTST(x1&,y1&)
    ' CONQUER
    DEFFILL POINT(x0&,y0&)
    '    DEFFILL col|
    PBOX x0&,y0&,x1&,y1&
    '
  ELSE IF width&>10
    ' DIVIDE
    dcg_section(x0&,y0&,x_mid&-x0&+1,y_mid&-y0&+1)
    dcg_section(x_mid&,y0&,x1&-x_mid&+1,y_mid&-y0&+1)
    dcg_section(x0&,y_mid&,x_mid&-x0&+1,y1&-y_mid&+1)
    dcg_section(x_mid&,y_mid&,x1&-x_mid&+1,y1&-y_mid&+1)
  ELSE
    '
    FOR a&=x0& TO x1&
      FOR b&=y0& TO y1&
        IF NOT computed!(a&,b&)
          16bit_quad(a&,b&)
        ENDIF
      NEXT b&
    NEXT a&
    '
  ENDIF
  '
RETURN
'
> PROCEDURE 16bit_quad(a&,b&)
  '
  i&=0
  x&=0
  y&=0
  c_re&=real&(a&)
  c_im&=imag&(b&)
  x2%=0
  y2%=0
  '
  REPEAT
    y%=SHL(x&*y&,5)
    y&=WORD{V:y%}+c_im&
    x%=SHL(x2%-y2%,4)
    x&=WORD{V:x%}+c_re&
    x2%=MUL(x&,x&)
    y2%=MUL(y&,y&)
    INC i&
  UNTIL x2%+y2%>&H5000000 OR i&=max_it&
  '
  IF i&=max_it&
    '    COLOR 0
    PSET a&,b&,0
  ELSE
    '    COLOR i& MOD 15+1
    PSET a&,b&,i& MOD 3+1
  ENDIF
  computed!(a&,b&)=TRUE
  '  PLOT a&,b&
RETURN
