RESERVE -1000  ! reicht fÅr das kleine Resourcefile
'
' Werte aus Resourcefile
LET dialog1&=0 ! RSC_TREE
LET titel&=1   ! Obj in #0
LET name&=2    ! Obj in #0
LET strasse&=3 ! Obj in #0
LET ort&=4     ! Obj in #0
LET abbruch&=5 ! Obj in #0
LET ok&=6      ! Obj in #0
'
' Versuch, das Resourcefile zu laden, wenn es nicht klapp, Alertbox und END.
' form_alert ist in kompilierten Programmen etwas kÅrzer als ALERT, kann aber
' wesentlich schneller abstÅrzen.
IF RSRC_LOAD("BEISPIEL\DEMO.RSC")=0
  ~FORM_ALERT(1,"[3][|Resourcefile DEMO.RSC |nicht gefunden][Abbruch]")
  END
ENDIF
'
' Baumadresse bestimmen
~RSRC_GADDR(0,dialog1&,dia%)
'
' Dialog zentrieren und Clipping-Rechteck ermitteln
~FORM_CENTER(dia%,x&,y&,w&,h&)
'
' Die drei TEDINFO-Strukturen vorbelegen, im RCS stehen dort viele "_"
n$=""
s$=""
o$=""
CHAR{{OB_SPEC(dia%,name&)}}=n$
CHAR{{OB_SPEC(dia%,strasse&)}}=s$
CHAR{{OB_SPEC(dia%,ort&)}}=o$
'
DO
  ' Dialog auf den Bildschirm zeichnen
  ~OBJC_DRAW(dia%,0,7,x&,y&,w&,h&)
  '
  ' Dialogabarbeitung dem AES Åbergeben
  exit%=FORM_DO(dia%,0)
  '
  ' Exit-Button wieder deselektieren.
  OB_STATE(dia%,ok&)=BCLR(OB_STATE(dia%,exit%),0)
  '
  ' Exit-Objekt auswerten
  ' Durch BCLR() wird sicherheitshalber das Doppelklick-Bit gelîscht.
  SELECT BCLR(exit%,15)
  CASE ok&
    '
    ' Wenn der 'OK'-Button angeklickt wurde, oder RETURN gedrÅckt wurde alle
    ' drei EDIT-Felder auslesen, und ausgeben.
    n$=CHAR{{OB_SPEC(dia%,name&)}}
    s$=CHAR{{OB_SPEC(dia%,strasse&)}}
    o$=CHAR{{OB_SPEC(dia%,ort&)}}
    PRINT n$
    PRINT s$
    PRINT o$
  CASE abbruch&
    CHAR{{OB_SPEC(dia%,name&)}}=n$
    CHAR{{OB_SPEC(dia%,strasse&)}}=s$
    CHAR{{OB_SPEC(dia%,ort&)}}=o$
  ENDSELECT
  '
  ' Solange wiederholen, bis der rechte Mausknopf gedrÅckt wurde.
LOOP UNTIL BTST(MOUSEK,1)
'
' Resource wieder aus Speicher entfernen
~RSRC_FREE()
'
' Speicher wieder freigeben.
RESERVE
