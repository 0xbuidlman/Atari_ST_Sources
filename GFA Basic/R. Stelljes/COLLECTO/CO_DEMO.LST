' -----------------------------------------------------------------------------
' Demo List-File zum PD-Programm COLLECTO V1.0   R. Stelljes, 2964 Wiesmoor
' -----------------------------------------------------------------------------
> procedure Copy(Quelle$,Ziel$)   ! Kopiert Quell- zur Zieldatei
  Local X%,Temp$
  If Quelle$<>Ziel$
    If Exist(Quelle$)
      X%=1
      If Exist(Ziel$)
        Alert 0,"Ziel-Datei schon vorhanden!|  öberschreiben erwÅnscht?",2,"Ja|Abbruch",X%
      Endif
      If X%=1
        Open "i",#1,Quelle$
        X%=Lof(#1)
        If X%<32760
          Temp$=Space$(X%)
          Bload Quelle$,V:Temp$
          Close #1
          Open "o",#1,Ziel$
          Print #1;Temp$;
          Close #1
          Temp$=""
        Else
          Alert 0,"Datei zu groû!",1,"Schade",X%
          Close #1
        Endif
      Endif
    Else
      Alert 0,"    Soll'n dassein?|(Datei nicht gefunden)",1,"Nanu?",X%
    Endif
  Endif
Return
> procedure F_sel(Var Pfad$)      ! File-Selector
  Fileselect @Getpfad$(@Suffix$(Pfad$)),@Name$(Pfad$),Pfad$
  Setpath(Pfad$)                !
Return
> function F_check(Datei$,Ext$)   ! öberprÅft, ob richtiger Extender verwendet wird
If @Suffix$(Datei$)=Ext$      !
  Return -1                   !
Else                          !
  Alert 0,"Aberaber! Das ist doch|    kein "+Ext$+"-File!",1,"Tschuldg|Egal",X%
  If X%=1                     !
    Return 0                  !
  Else                        !
    Return -1                 !
  Endif                       !
Endif                         !
Endfunc
> function Getpfad$(Ext$)         ! Erzeugt Suchpfad mit beliebigem Extender
Return Chr$(Gemdos(25)+65)+":"+Dir$(0)+"\*."+Ext$
Endfunc
> procedure Ging                  ! Warnton 1
Print At(1,1);Chr$(7);
Return
> procedure Info(Info_txt$)       ! Infotext auf Bildschirm zeigen
Local Br,Ho                     !
If Not Info_on!                 ! Neue Info nur, falls alte erledigt
If Info_txt$<>""              !
  Info_txt$=Left$(Info_txt$,Int{L~a-12}/8-6)
  Deffill 1,0,0               ! Weiûer Hintergrund
  Deftext 1,0,0,13            ! Buchstabengrîûe 8*16
  Defline 1,0,0               ! Durchgehende Linien
  Boundary 1                  ! BoxrÑnder einschalten
  Graphmode 1                 ! Replace-Modus auswÑhlen
  Br=Len(Info_txt$)*8+16      ! Breite der Box berechnen
  Ho=20   ! Hîhe        -- " --
  ' Infoxp=5    !320/2-Br/2-8          ! X-Position der Box
  Infoxp=Int{L~a-12}/2-Br/2-8
  Infoyp=28     ! Y-  -- " --
  Get Infoxp-3,Infoyp-3,Infoxp+Br+3,Infoyp+Ho+3,Info_mem$  ! Hintergrund retten
  Pbox Infoxp-3,Infoyp-3,Infoxp+Br+3,Infoyp+Ho+3       ! Box  zeichnen
  Box Infoxp-1,Infoyp-1,Infoxp+Br+1,Infoyp+Ho+1        ! .. mit Rand natÅrlich
  Box Infoxp,Infoyp,Infoxp+Br,Infoyp+Ho                !
  Text Infoxp+8,Infoyp+16,Info_txt$            ! Text eintragen
  Info_on!=True    ! und Merker setzen
Endif
Else      ! Falls noch alte Box offen
Put Infoxp-3,Infoyp-3,Info_mem$     ! Hintergrund wiederherstellen
Info_mem$=""                !
Info_on!=False              ! Merker lîschen
If Info_txt$<>""            !   Falls neuer Text gewÅnscht ist
  Info(Info_txt$)           !   ... diesen auch bringen! (ahh.. rekursiv)
Endif
Endif
Return
> function Name$(Pfad$)           ! Filtert den Dateinamen aus Pfadangabe
Local I%,L%                   !
L%=Len(Pfad$)                 !
For I%=L% Downto 1            !
Exit if Mid$(Pfad$,I%,1)="\"
Next I%                       !
Return Right$(Pfad$,L%-I%)    !
Endfunc
> procedure Paff                  ! Warnton 2
Sound 1,0,3,1,0                !
Sound 2,0,5,1,0                !
Sound 3,0,7,1,0                !
Wave 63,7,8,800,6              !
Wave 15,7,1,3000,3             !
Return
> function Path$                  ! Ermittelt aktuellen Pfad
X$=Chr$(Gemdos(25)+65)+":"+Dir$(0)+"\"
Return X$                     !
Endfunc
> function Prefix$(Pfad$)         ! Filtert Dateiname ohne Extender aus Pfad aus
Pfad$=@Name$(Pfad$)              !
X%=Instr(Pfad$,".")              !
If X%>0                          !
Pfad$=Left$(Pfad$,X%-1)        !
Endif                            !
Return Pfad$                     !
Endfunc
> function Suffix$(File$)         ! Filtert Extender aus Dateinamen aus
Local X%                      !
File$=@Name$(File$)           !
X%=Instr(File$,".")           !
If X%>0                       !
Return Right$(File$,Len(File$)-X%)
Else                          !
Return File$                !
Endif                         !
Endfunc
> procedure Setpath(File$)        ! Pfad umschalten auf File$ auch bei anderem Lw
If Mid$(File$,2,1)=":"
Chdrive Asc(Left$(File$,1))-64
Endif
Chdir @Xpath$(File$)
Return
> procedure Type(File$)           ! Textdatei zeigen
Cls
Local X%,Temp$,X$
If Exist(File$)
J%=1
Open "i",#1,File$
X%=Lof(#1)
If X%<32760
Temp$=Space$(X%)
Bload File$,V:Temp$
Cls
For I%=1 To Len(Temp$)
X$=Mid$(Temp$,I%,1)
If Asc(X$)>31 And Asc(X$)<127
Print X$;
Else
Print ".";
Endif
While Mousek
Wend
Next I%
Else
Alert 0,"Datei zu groû!",1,"Schade",X%
Endif
Close #1
Temp$=""
~Fre(0)
Else
Alert 0,"    Soll'n dassein?|(Datei nicht gefunden)",1,"Nanu?",X%
Endif
Return
> procedure Wait_move             ! Warten auf Mausbewegung
Local Mx%,My%
Mouse Mx%,My%,Mk%
Repeat
Exit if Mousey<>My%
Until Mousex<>Mx%
Return
> procedure Wait_click            ! Warten auf Mausklick
Repeat
Until Mousek
Return
> procedure Wait_noclick          ! Warten bis Maustaste losgelassen
While Mousek
Wend
Return
> procedure Watch(Var X$)         ! Testprozedur fÅr WerteÅberwachung
Inc Z%
Print X$
If Z% Mod 20=0
~Inp(2)
Endif
Return
> function Xpath$(File$)          ! Filtert die Pfadangabe aus kompletten Dateinamen
Local I%,L%,I$                   !
L%=Len(File$)                    !
If L%>0 And Instr(File$,"\",1)>0 !
For I%=L% Downto 0             !
Exit if Mid$(File$,I%,1)="\" !
Next I%                        !
I$=Left$(File$,I%-1)           !
Return I$                      !
Else                             !
Return File$                   !
Endif                            !
Endfunc
' -----------------------------------------------------------------------------
