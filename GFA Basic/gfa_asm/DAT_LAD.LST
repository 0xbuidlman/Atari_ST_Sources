' DAT_LAD.LST
' charger un fichier quelconque
' -----------------------------
FILESELECT "\*.*","",file$
'
' ne charger que si le fichier existe bien!
IF EXIST(file$)
  PRINT "Le fichier"'file$'"existe bien."
  ' mesurer la longueur du fichier
  file$=file$+CHR$(0)
  VOID GEMDOS(78,L:VARPTR(file$),55)
  longueur%=LPEEK(GEMDOS(47)+26)
  PRINT "Longueur de ce fichier:"'longueur%
  '
  ' r‚server de la place en m‚moire
  ' par exemple … l'aide d'une chaŒne de caractŠres lorsque
  ' longueur% < 32767 octets
  d$=SPACE$(longueur%)
  d%=VARPTR(d$)
  ' ou r‚server un champ, en version 2.0 du Basic GfA
  ' DIM a|(longueur/4+4)
  ' d%=VARPTR(a|(0))
  ' ou r‚server un champ, en version 3.0 du Basic GfA
  DIM a%(longueur%)
  d%=VARPTR(a%(0))
  ' ou r‚server une place fixe en m‚moire, en version 2.0 du Basic GfA
  RESERVE 10000
  d%=GEMDOS(72,L:longueur%)
  ' ou r‚server une place fixe en m‚moire, en version 3.0 du Basic GfA
  RESERVE 10000
  d%=MALLOC(longueur%)
  '
  ' charger le fichier
  BLOAD file$,d%
  '
  ' ex‚cution du programme
  '
  ' lib‚rer la place m‚moire
  ' dans le cas d'une chaŒne de caractŠres
  CLR d$
  ' dans le cas d'un champ, en version 2.0 du Basic GfA
  '  ERASE a|()
  ' dans le cas d'un champ, en version 3.0 du Basic GfA
  ERASE a%()
  ' dans le cas d'une place fixe, en version 2.0 du Basic GfA
  ' VOID GEMDOS(73,L:d%)
  ' RESERVE
  ' dans le cas d'une place fixe, en version 3.0 du Basic GfA
  VOID MFREE(d%)
  RESERVE nombre%
  PRINT nombre%
ENDIF
