' TRIM.LST
' --------
'
gfa%=3
'
IF gfa%=2
  ' int‚gration de programmes machine en GFA Basic 2.0 et 3.0
  ass_trim_r$=SPACE$(32)
  BLOAD "TRIM_R.prg",VARPTR(ass_trim_r$)
  trim_r%=VARPTR(ass_trim_r$)
  '
  ass_trim_l$=SPACE$(30)
  BLOAD "TRIM_L.prg",VARPTR(ass_trim_l$)
  trim_l%=VARPTR(ass_trim_l$)
ENDIF
'
IF gfa%=3
  ' Int‚gration de programmes machine en GFA Basic 3.0
  ' TRIM_R.inl, longueur: 32
  INLINE trim_r%,32
  ' TRIM_L.inl, longueur: 30
  INLINE trim_l%,30
ENDIF
'
ALERT 2,"Recoupe du string|en Basic|ou en Assembleur ?",1,"Basic|Ass.",mode%
DEC mode%
'
PRINT "V‚rifier: espaces vides … gauche et … droite"
a$="   GFA-BASIC  "
@recouper(a$)
@controle
PRINT
'
PRINT "V‚rifier: espaces vides … gauche"
a$="   GFA-BASIC"
@recouper(a$)
@controle
PRINT
'
PRINT "V‚rifier: espaces vides … droite"
a$="GFA-BASIC  "
@recouper(a$)
@controle
PRINT
'
PRINT "V‚rifier: rien que des espaces vides"
a$="     "
@recouper(a$)
@controle
PRINT
'
PRINT "V‚rifier: chaŒne vide"
a$=""
@recouper(a$)
@controle
'
PROCEDURE recouper(a$)
  IF mode%=2
    trim_l$=RIGHT$(a$,C:trim_l%(L:V:a$,LEN(a$)))
    trim_r$=LEFT$(a$,C:trim_r%(L:V:a$,LEN(a$)))
  ELSE
    ' version Basic complŠte:
    ' b$=TRIM$(a$)
    ' c%=INSTR(a$,b$)
    ' trim_l$=RIGHT$(a$,(LEN(a$)-c%+1)*SGN(LEN(b$)))
    ' trim_r$=LEFT$(a$,MAX(c%+LEN(b$)-1,0))
    ' ou
    trim_l$=RIGHT$(a$,(LEN(a$)-INSTR(a$,TRIM$(a$))+1)*SGN(LEN(TRIM$(a$))))
    trim_r$=LEFT$(a$,MAX(INSTR(a$,TRIM$(a$))+LEN(TRIM$(a$))-1,0))
  ENDIF
RETURN
'
PROCEDURE controle
  PRINT "Longueur:"'LEN(a$);TAB(15);
  PRINT "Origine: #";a$;"#"
  PRINT "Longueur:"'LEN(trim_l$);TAB(15);
  PRINT "Trim_L (recouper … gauche):  #";trim_l$;"#"
  PRINT "Longueur:"'LEN(trim_r$);TAB(15);
  PRINT "Trim_R (recouper … droite):  #";trim_r$;"#"
RETURN
