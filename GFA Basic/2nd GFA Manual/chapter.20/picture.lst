' *** PICTURE.LST ***                                2nd GFA-Manual, page 20-27
> PROCEDURE picture_init(VAR pic$)
  '
  ' *** Prepare a picture on invisible logical screen and return as GET-string
  ' *** Procedure uses normal screen-coordinates, so (0,0) is upper left
  ' *** Commands are in DATA-lines (RESTORE in main program!)
  ' *** The following commands (with the usual parameters) are possible:
  ' ***         DEFLINE , DEFTEXT , LINE , DRAW , BOX , RBOX , TEXT , END
  ' *** Correct syntax is not checked!
  ' *** DRAW-format: DATA DRAW,points,x1,y1,x2,y2,x3,y3,etc.
  ' *** Last DATA-line: END
  ' *** Regular picture on screen: PUT x,y,picture$,3
  ' *** Reverse picture (don't use RBOX!): PUT x,y,picture$,12
  '
  ' *** Procedure:  Screen2_init  Screen2_restore
  '
  LOCAL s1%,s2%
  LOCAL command$,s,w,b,e,c,s,angle,h,x1,y1,x2,y2
  LOCAL points,n,x,y,text$,max.width,max.height
  @screen2_init(FALSE,s1%,s2%)          ! activate invisible second screen
  CLS
  REPEAT
    READ command$
    command$=UPPER$(command$)
    IF command$="DEFLINE"
      READ s,w,b,e
      DEFLINE s,w,b,e
    ENDIF
    IF command$="DEFTEXT"
      READ c,s,angle,h
      DEFTEXT c,s,angle,h
    ENDIF
    IF command$="LINE"
      READ x1,y1,x2,y2
      LINE x1,y1,x2,y2
      width.max=MAX(MAX(width.max,x1),x2)
      height.max=MAX(MAX(height.max,y1),y2)
    ENDIF
    IF command$="DRAW"
      READ points,x1,y1
      PLOT x1,y1
      width.max=MAX(MAX(width.max,x1),x2)
      height.max=MAX(MAX(height.max,y1),y2)
      FOR n=1 TO points-1
        READ x2,y2
        DRAW  TO x2,y2
        width.max=MAX(MAX(width.max,x1),x2)
        height.max=MAX(MAX(height.max,y1),y2)
      NEXT n
    ENDIF
    IF command$="BOX"
      READ x1,y1,x2,y2
      BOX x1,y1,x2,y2
      width.max=MAX(MAX(width.max,x1),x2)
      height.max=MAX(MAX(height.max,y1),y2)
    ENDIF
    IF command$="RBOX"
      READ x1,y1,x2,y2
      RBOX x1,y1,x2,y2
      width.max=MAX(MAX(width.max,x1),x2)
      height.max=MAX(MAX(height.max,y1),y2)
    ENDIF
    IF command$="TEXT"
      ' *** Correct size of text is not checked!
      READ x,y,text$
      TEXT x,y,text$
      IF angle=0
        x2=x+LEN(text$)*h/2
        y2=y
      ENDIF
      IF angle=900
        x2=x
        y2=y
      ENDIF
      IF angle=2700
        x2=x+h
        y2=y+LEN(text$)*h/2
      ENDIF
      width.max=MAX(MAX(width.max,x1),x2)
      height.max=MAX(MAX(height.max,y1),y2)
    ENDIF
  UNTIL command$="END"
  GET 0,0,width.max,height.max,pic$
  @screen2_restore                      ! restore original logical screen
RETURN
' *********
'
