' *** FILL_MED.LST ***                               2nd GFA-Manual, page 20-25
> PROCEDURE fill_1_med_init(VAR fill1$)
  '
  ' *** Create Fill-pattern fill$ for Medium resolution (also for Low)
  ' *** Fill-patterns always have 16*16 format
  ' *** Activate pattern in main program with: DEFFILL ,fill1$
  ' *** Use Fill_2_med_init for second pattern, etc.
  '
  ' *** Procedure:  Fill_med_creation
  '
  RESTORE med.fill1
  @fill_med_creation(fill1$)
  '
  med.fill1:
  ' *** Use 0-3 (0 = background-colour) in Overwrite-mode
  ' *** You can use 4 colours: 0,1,2,3
  ' *** Warning: this is the SETCOLOR-index (not the VDI colour-index)
  DATA 1000000000000001
  DATA 0100000000000010
  DATA 0010000000000100
  DATA 0001000000001000
  DATA 0000100000010000
  DATA 0000010000100000
  DATA 0000001001000000
  DATA 0000000110000000
  DATA 1000000000000001
  DATA 0100000000000010
  DATA 0010000000000100
  DATA 0001000000001000
  DATA 0000100000010000
  DATA 0000010000100000
  DATA 0000001001000000
  DATA 0000000110000000
RETURN
' ***
> PROCEDURE fill_med_creation(VAR fill$)
  '
  ' *** Create fill-string for Medium resolution from DATA-lines
  '
  LOCAL i,j,pat$,plane0%,plane1%
  fill$=STRING$(64,0)
  FOR i=0 TO 15
    READ pat$
    CLR plane0%,plane1%
    FOR j=1 TO 16
      SELECT VAL(MID$(pat$,j,1))
      CASE 1
        plane0%=BSET(plane0%,SUB(16,j))
      CASE 2
        plane1%=BSET(plane1%,SUB(16,j))
      CASE 3
        plane0%=BSET(plane0%,SUB(16,j))
        plane1%=BSET(plane1%,SUB(16,j))
      ENDSELECT
    NEXT j
    MID$(fill$,1+i*2,2)=MKI$(plane0%)
    MID$(fill$,33+i*2,2)=MKI$(plane1%)
  NEXT i
RETURN
' *********
'
