' *** FILL_LOW.LST ***                               2nd GFA-Manual, page 20-25
> PROCEDURE fill_1_low_init(VAR fill1$)
  '
  ' *** Create Fill-pattern fill$ for Low resolution
  ' *** Fill-patterns always have 16*16 format
  ' *** Activate pattern in main program with: DEFFILL ,fill1$
  ' *** Use Fill_2_low_init for second pattern, etc.
  '
  ' *** Procedure:  Fill_low_creation
  '
  RESTORE low.fill1
  @fill_low_creation(fill1$)
  '
  low.fill1:
  ' *** Use 0-F (0 = background-colour) in Overwrite-mode
  ' *** You can use 16 colours: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F
  ' *** Warning: this is the SETCOLOR-index (not the VDI colour-index)
  DATA 1000200000020001
  DATA 0100020000200010
  DATA 0010002002000100
  DATA 0001000220001000
  DATA 2000100000010002
  DATA 0200010000100020
  DATA 0020001001000200
  DATA 0002000110002000
  DATA 1000200000020001
  DATA 0100020000200010
  DATA 0010002002000100
  DATA 0001000220001000
  DATA 2000100000010002
  DATA 0200010000100020
  DATA 0020001001000200
  DATA 0002000110002000
RETURN
' ***
> PROCEDURE fill_low_creation(VAR fill$)
  '
  ' *** Create fill-string for Low resolution from DATA-lines
  '
  LOCAL i,j,pat$,plane0%,plane1%,plane2%,plane3%,byte|
  fill$=STRING$(128,0)
  FOR i=0 TO 15                                 ! 16 words for each plane
    READ pat$
    CLR plane0%,plane1%,plane2%,plane3%
    FOR j=1 TO 16
      byte|=VAL("&H"+MID$(pat$,j,1))
      IF BTST(byte|,0)
        plane0%=BSET(plane0%,SUB(16,j))
      ENDIF
      IF BTST(byte|,1)
        plane1%=BSET(plane1%,SUB(16,j))
      ENDIF
      IF BTST(byte|,2)
        plane2%=BSET(plane2%,SUB(16,j))
      ENDIF
      IF BTST(byte|,3)
        plane3%=BSET(plane3%,SUB(16,j))
      ENDIF
    NEXT j
    MID$(fill$,1+i*2,2)=MKI$(plane0%)
    MID$(fill$,33+i*2,2)=MKI$(plane1%)
    MID$(fill$,65+i*2,2)=MKI$(plane2%)
    MID$(fill$,97+i*2,2)=MKI$(plane3%)
  NEXT i
RETURN
' *********
'
