' *** SCRLMENU.LST ***                                2nd GFA-Manual, page 22-3
> PROCEDURE scroll_menu(VAR command,help!,esc!)
  '
  ' *** Classic scrolling number-menu (from DATA-lines; use RESTORE first)
  ' *** Returns chosen number in command&, unless <Help> or <Esc> was pressed
  ' *** In that case command&=0 and help!=TRUE or esc!=TRUE
  '
  ' *** Standard:  col.max
  '
  LOCAL n,lines,i,l,s,key$,key
  CLR command,help!,esc!
  READ n,lines
  DIM scroll.menu$(PRED(lines))
  FOR i=0 TO PRED(lines)
    READ scroll.menu$(i)
  NEXT i
  FOR i=0 TO PRED(lines)
    l=MAX(LEN(l$),LEN(scroll.menu$(i)))
  NEXT i
  s=(col.max-l)/2
  CLS
  FOR i=0 TO PRED(lines)
    PRINT AT(s,25);scroll.menu$(i)
  NEXT i
  FOR i=1 TO (25-lines)/2-1
    PRINT
  NEXT i
  HIDEM
  {ADD(XBIOS(14,1),6)}=0                ! clear keyboard-buffer
  REPEAT
    key$=INKEY$
    IF key$=CHR$(0)+CHR$(98)
      help!=TRUE
      command=0
    ENDIF
    IF LEN(key$)=1
      IF key$=CHR$(27)
        esc!=TRUE
        command=0
      ELSE
        key=ASC(key$)
        command=key-48
      ENDIF
    ENDIF
  UNTIL help! OR esc! OR (command>=1 AND command<=n)
  ERASE scroll.menu$()
  '
  scroll.menu.data:
  ' *** number of menu-choices, number of DATA-lines
  DATA 4,15
  ' *** menu-screen
  DATA ***************************
  DATA *           MENU          *
  DATA *                         *
  DATA *                         *
  DATA *    1 - first choice     *
  DATA *                         *
  DATA *    2 - second choice    *
  DATA *                         *
  DATA *    3 - third choice     *
  DATA *                         *
  DATA *    4 - quit             *
  DATA *                         *
  DATA *                         *
  DATA * <Esc>            <Help> *
  DATA ***************************
  '
RETURN
' *********
'
