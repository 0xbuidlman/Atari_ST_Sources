-----------------------------------------------------------------------------
File name:	CT2BUS_F.DOC			Revision date:	1999.03.22
Created by:	Ronald Andersson		Creation date:	1999.03.22
Copyright:	(c)1999 Ronald Andersson	Released as:	FREEWARE
-----------------------------------------------------------------------------
Release notes:

This document file as well as the program binaries of CT2BUS_F and PMMU_OFF
are all released as FREEWARE, without limitation on use or distribution.
The sources too are released as FREEWARE, again without limitation on either
distribution or use, including even blatant 'ripoff'...  :-)
-----------------------------------------------------------------------------
Contact addresses:

mailto:		dlanor@ettnet.se
homepage_1:	http://www.ettnet.se/~dlanor/
homepage_2:	http://dlanor.atari.org/	(alias for same page)
ICQ:		38857203

Actually I only use one mailbox as well as a single homepage site, but the
alias may remain useful if I ever change to another ISP (not likely). If
that happens, the 'dlanor.atari.org' redirection will be changed so as to
lead to the new homepage, which will always give a useful email address.
-----------------------------------------------------------------------------
What is missing:

The sources are not complete for reassembly, since they rely on some of my
macro libraries for bindings to system functions, as well as for some other
things (eg: a more flexible 'repeat' directive than DevPac's normal REPT).

They are available in my STNGDEVP.LZH package that is to be found on my web
homepage.  (At URL given above, through 'File' command in 'STinG' menu.)
-----------------------------------------------------------------------------
What they do:

PMMU_OFF simply writes zeroes into the PMMU registers TC, TT0, TT1, and then
displays a short message stating that this has been done, or that it refused
to do it because no 68030 PMMU is available (checked via cookie).  It can be
used on any TOS machine with a 68030 CPU, but may cause trouble if used in
systems where PMMU is needed for decoding of vital resources (eg: CT2B).
It's only purpose is to test if a 68030 system is TT compatible, as the TT
normally boots with all PMMU register cleared.

CT2BUS_F installs a PMMU map implementing (as near as possible) decoding and
bus error generation compatible to TT and ST systems, while clearing the TT0
and TT1 registers.  The purpose of this is to increase the compatibility of
a system equipped with a Centek CT2B accelerator.  It is not very useful on
other systems than Falcon+CT2B.  For this reason it will accept mapping only
on a Falcon that uses 68030.  (Checked via cookies _MCH and _CPU.)

One important result of using CT2BUS_F is that STOOP 1.5 then works in the
'TOS 4.x mode' without the frequent bombing and display glitches that strike
it if booted this way without CT2BUS_F.  This usage requires that CT2BUS_F
resides before STOOP in \AUTO\ and that it is selected as active in all of
the STOOP setup slots (so it is never turned off).

Another important benefit is that CT2BUS_F makes the system compatible to
the system enhancement GEMRAM, and thus to WINX, and SHBUF, when CT2B is
booted in 'compatibility mode' or 'TOS 4.x mode'. Without CT2BUS_F GEMRAM
fails to relocate GEM in those boot modes, and that causes both WINX and
SHBUF to fail installing their GEM and NEWDESK improvements.

The drawback of using CT2BUS_F this way is that it does not work with the
FastRAM addressing of CT2B, and thus can't work in 'TOS 7.x mode'.  But if
it is not used STOOP will again be struck by problems making it too unsafe
for use.  One solution to this would be to have another mapping program to
be started after STOOP, which would restore the 'TOS 7.x mode' PMMU mapping.

With such a program available CT2BUS_F would remain selected by all STOOP
setups, but the new program (CT2BUS_7 ?) would only be selected for the
setups to be used in 'TOS 7.x mode'.

Unfortunately the information I currently have on the PMMU mapping of the
'TOS 7.x mode is insufficient for letting me write that second mapping
program.  Hopefully Centek staff will soon correct this lack of info...
-----------------------------------------------------------------------------
Extra features:

At entry to CT2BUS_F it checks the Kbshift keys, and uses these to control
some extra features.  If the right shift key was pressed then the program
will jump to a primitive but useful hexdump program, with initial display
set to a buffer containing the PMMU registervalues that were active before
any remapping was done.  The storage order is: 

    offset from start  bytes  Content
    -----------------  -----  -------
           0             4      TC
           4             4      TT0
           8             4      TT1
          12             8      CRP
          20             8      SRP
          28            ...     end of register table

If all of the keys <Alternate> <Control> <l-Shift> <r-Shift> were pressed
at entry to CT2BUS_F, then the program jumps directly to the hexdump code
described above, without having changed any PMMU register or any map data.
This is useful to get information about mapping that it could be dangerous
to alter without sufficient knowledge.

Inside the hexdump program some simple key commands are available:

    Key  Action
    ---  ------
     A   select logical Address for a block of data to display
     N   scroll to the Next block of data
     P   scroll to the Previous block of data
     E   Edit a single byte at any address (doesn't have to be on display)
    Esc  Escape from the hexdump utility, whereafter CT2BUS_F exits

Each display block is exactly 128 bytes, but if you need to inspect single
bytes you can use the E command.  It will show old value and then ask for a
new value.  If you then press Escape the value will not be changed.
-----------------------------------------------------------------------------
End of file:	CT2BUS_F.DOC
-----------------------------------------------------------------------------
