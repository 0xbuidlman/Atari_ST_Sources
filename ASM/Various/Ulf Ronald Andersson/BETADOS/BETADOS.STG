##===========================================================================
## File name:	BETADOS.STG			Revised:	2000.07.02
## Author:	Ulf Ronald Andersson		Created:	1998.02.28
## Project:	BetaDOS				Version:	3.10
##---------------------------------------------------------------------------
## (c)2000 by:	Ulf Ronald Andersson		All rights reserved.
## Feedback to:	dlanor@ettnet.se		Released as FREEWARE
##---------------------------------------------------------------------------
## --- !!! ---  Please read the full text below at least once.  --- !!! ---
## This will help you avoid some simple but otherwise inescapable problems.
##===========================================================================
@database "BetaDOS documentation"
@hostname BETADOS
@author "Ulf Ronald Andersson"
@$VER: BetaDOS.HYP 3.10  (@:"__DATE__")
@subject Documentation/System
@options +g +a -z
@width 78
@help "The BetaDOS document"
@define Version "3.10"
##---------------------------------------------------------------------------
@node "The BetaDOS document"
##---------------------------------------------------------------------------
The BetaDOS document                                                  BetaDOS
@line 1 77 0 0 7

 Documentation for BetaDOS version @:Version
 Created by Ulf Ronald Andersson

 @{U}Contents@{0}

 @{"What is BetaDOS ?" link "What is BetaDOS ?"}
 @{"Introduction to BetaDOS" link "Introduction to BetaDOS"}
 @{"Installation of BetaDOS" link "Installation of BetaDOS"}

 @{"Syntax of BDCONFIG.SYS" link "Syntax of BDCONFIG.SYS"}
 @{"BOS, DOS, and extra tools" link "BOS, DOS, and extra tools"}
 @{"The CLUSTER.DOS driver" link "The CLUSTER.DOS driver"}
 @{"Using BetaDOS with SPIN XFS drivers" link "Using BetaDOS with SPIN XFS drivers"}

 @{"Planned BetaDOS Enhancements" link "Planned BetaDOS Enhancements"}
 @{"BetaDOS Development History" link "BetaDOS Development History"}
 @{"BetaDOS Feedback" link "BetaDOS Feedback"}

 News in latest versions:

 3.10 Two improvements of compatibility with MiNT
 3.09 Bugfixes for full compatibility with more DOS drivers
 3.08 Bootable after MiNT, as required by latest MiNT kernels

##---------------------------------------------------------------------------
@endnode "The BetaDOS document"
##---------------------------------------------------------------------------
@node "BetaDOS Feedback" "How to send reports, questions & suggestions"
##---------------------------------------------------------------------------
How to send reports, questions & suggestions                         BetaDOS
@line 1 77 0 0 7

 To contact me for questions/reports etc,
 the following means are available:

 @{"Ordinary \"Snail-mail\"" link Snail_Mail}
 @{"Ordinary phonecall" link Phone_Number}
 @{"Internet E-mail" link Internet_Email}

##---------------------------------------------------------------------------
@endnode "BetaDOS Feedback"
##---------------------------------------------------------------------------
@pnode Snail_Mail
##---------------------------------------------------------------------------
 My "snail-mail" address is

        Ulf Ronald Andersson
        H”ders V„g 7
        S-14570 Norsborg
        Sweden

NB: The letters '”' and '„' in the street address
    are  swedish characters,  but may be replaced
    by 'o' and 'a' or even 'oe' and 'ae' instead.
##---------------------------------------------------------------------------
@endnode Snail_Mail
##---------------------------------------------------------------------------
@pnode Phone_Number
##---------------------------------------------------------------------------
 Since a dialog by mail is very slow,  some users
 (at least those in Sweden) may prefer to call me
 by phone, using the phone number below:

        08 - 53184105

 The first two digits are the area code for Stockholm,
 so foreign callers must remove the leading zero.
 (And of course start by dialling Sweden.)
##---------------------------------------------------------------------------
@endnode Phone_Number
##---------------------------------------------------------------------------
@pnode Internet_Email
##---------------------------------------------------------------------------
 I can also be reached on the Internet,
 where I have the following addresses:
 
        mailto:dlanor@ettnet.se
        http://www.ettnet.se/~dlanor/

The web page includes mail and ftp links,
so you can stay in the browser for that.
##---------------------------------------------------------------------------
@endnode Internet_Email
##---------------------------------------------------------------------------
@node "What is BetaDOS ?"
##---------------------------------------------------------------------------
What is BetaDOS ?                                                     BetaDOS
@line 1 77 0 0 7

BetaDOS is a replacement for Atari MetaDOS.

This means the following:

1:  It is a part of the operating system never included in any TOS ROM set.

2:  It allows use of loadable filesystems, with other capabilities than the
    normal diskette and hard disk filesystems supported by built-in code.

3:  It has mostly been used for implementation of CD-ROM drivers, although
    that is only a very small subrange of its total capabilities...

The BetaDOS package does include loadable filesystems that explore a small
subset of the capabilities beyond ordinary CD-ROM usage.
##---------------------------------------------------------------------------
@endnode "What is BetaDOS ?"
##---------------------------------------------------------------------------
@node "Introduction to BetaDOS"
##---------------------------------------------------------------------------
Introduction to BetaDOS                                               BetaDOS
@line 1 77 0 0 7

BetaDOS is a replacement for Atari MetaDOS, with many improvements in regard
to reliability and multiple system compatibility.  Thus it is now compatible
to all known multitasking systems, whether based on MagiC or MiNT, which is
something not achieved by any other MetaDOS replacement that I know of.

In addition to those improvements, BetaDOS also has many enhancements that
were completely lacking in MetaDOS and all its other replacements I know of.
This means that some things can be achieved with BetaDOS that are impossible
with all other MetaDOS variants.  One DOS filesystem using such enhancements
(Cluster.Dos) is included with this package, and should not be used with any
other MetaDOS variant.  That might seem to work, but would not be stable...!

The main improvements and enhancements are three:

1:  System compatibility has been improved to the point that no known
    problems remain with any multitaskers based on MiNT or MagiC.

2:  Reentrancy capability has been enhanced by new methods, such that all
    DOS filesystems are now allowed to use GEMDOS quite freely.  This is
    used by the enclosed Cluster.Dos, to allow inclusion of other drives,
    including other BetaDOS filesystems, in its main directory.

3:  Support has been added for shared code libraries (SLB) compatibly to
    how this is implemented in MagiC 6.  This means that such libraries
    can now be used in any environment where BetaDOS will run, which I
    believe to include all TOS-like systems based on gemdos (or clone).
    This has been tested with some older MagiCs, MiNT, Geneva, MultiTOS,
    nAES, as well as in 'good old' singletasking TOS.

Despite these major changes, BetaDOS should remain compatible with all BOS
and DOS files used with Atari MetaDOS.  Even without any changes in them it
should still give them the benefits of improved system compatibility and
increased reliability as compared to how they perform under Atari MetaDOS.
##---------------------------------------------------------------------------
@endnode "Introduction to BetaDOS"
##---------------------------------------------------------------------------
@node "Installation of BetaDOS"
##---------------------------------------------------------------------------
@alias "installing BetaDOS"
Installation of BetaDOS                                               BetaDOS
@line 1 77 0 0 7

1:  Copy the files inside BETADOS\AUTO\ to the real \AUTO\ folder on your
    boot partition.

2:  If you have used some other MetaDOS variant before, then move BETADOS.PRG
    to get the same position in \AUTO\ boot order as that variant had.

3:  If you use MiNT, move BETADOS.PRG so that it boots _after_ MiNT does.
    NB:  This feature (new in BetaDOS 3.08) is different from how all the
         previous versions of both MetaDOS and BetaDOS were to be booted.
         It allows BetaDOS to work well with the latest MiNT kernels.

4:  Edit the BDCONFIG.SYS file (it is a normal text file) to add any more
    filesystems that you may want.  For those who have used Atari MetaDOS
    this means copying some text lines from your old CONFIG.SYS to the new
    BDCONFIG.SYS.  The syntax of these files is identical.
    (This has now been enhanced, but remains compatible with all old usage.)

That's it...
At the next boot BetaDOS should load all filesystems defined in BDCONFIG.SYS
and make these available for use as normal GEMDOS partitions.

If something goes wrong with that, you may need to adjust boot order of
BETADOS.PRG relative to other programs in \AUTO\.  And do remember to check
BDCONFIG.SYS to make sure that you have not used any conflicting definitions.
##---------------------------------------------------------------------------
@endnode "Installation of BetaDOS"
##---------------------------------------------------------------------------
@node "Syntax of BDCONFIG.SYS"
##---------------------------------------------------------------------------
Syntax of BDCONFIG.SYS                                                BetaDOS
@line 1 77 0 0 7

----- Introduction -----

BDCONFIG.SYS is the main configuration file of BetaDOS, which tells it which
BOS and DOS drivers to load and exactly how the installation should proceed.
It will be searched for by BetaDOS on startup,  first in the  \AUTO\  folder
and then in the root directory, on the boot drive.  It is a simple text file
that must follow the syntax described below.

----- Spacing -----

Spacing (using space and Tab characters) may be added where needed to please
the eye, except inside keywords and numbers.  Spaces are also *required* in
some places, as separators between various command parts (parameters etc).
In the latter cases a single space character will suffice, but more is also
allowed.

----- Comments -----

A semicolon (';') causes the remainder of a line it appears on to be ignored
and I recommend that you use this to include comments to help you remember
when and for what reasons you put other stuff into the configuration file.

----- External programs -----

Any lines that begin with the path and name of a file will result in that
file being launched as a separate program, during the interpretation of
the BDCONFIG.SYS file.  Personally I never use this feature, but it has
been included for compatibility with MetaDOS and ExtenDOS.

----- Special Commands -----

An asterix at the start of a line begins a special command to BetaDOS, which
means that it should load a new driver, according to specifications on the
rest of the line.  At present three commands are implemented, these being
'*BOS,' and '*DOS,' and '*SLB,'.  Note that each command name has a comma as
the final character.  Actually this is a separator between the command and
parameters, but please think of it as an integral part of the command.  That
will help you avoid the mistake of forgetting to put it in.

After the command name (with comma) you should add a filename, specifying
its full path, to a driver you want BetaDOS to load.  This often has an
extension matching the command ('*BOS,' => '.BOS' but '*DOS,' => '.DOS').

The exception to that rule is '*SLB,' which should always load an overlay
file named SLB_LOAD.OVL (or something similar). The actual .SLB files can
not be loaded at boot time, because this should only happen when various
programs request access to them via the new gemdos call 'Slbopen'. Those
.SLB files are identical to the shared libraries of MagiC 6.

The '*SLB,' command should have one more argument at the end of the line,
separated from the overlay filename by at least one space.  This second
argument specifies a default path for loading .SLB files. To use the same
path as with magic you need "c:\gemsys\magic\xtension" for this argument.
(Minus the quote signs of course.)

Some BOS and DOS drivers can take parameters, specific for that driver,
and these should then be added after the filename but separated from it
(and each other) by at least one space (no commas yet).  The exact format
of those parameters is defined by the authors of those drivers, so there
is no reason for me to describe any here. They might not fit the drivers
you use anyway.  Commas are NEVER allowed inside such parameters...

A comma should be added, either after the filename or after the last of its
parameters (when such are used), to signify that this part of the command
line is complete.  The remainder of the line then consists of drive specs,
which should also be separated from each other with a comma and a space.

Each drive spec for a DOS driver consists of two letters separated by colon
(no spaces allowed inside this). The first of the letters defines the drive
letter as used by GEMDOS (and as used by normal desktops etc.), also known
as a 'logical' drive, while the second letter represents a drive defined
for XBIOS access, also known as a 'physical' drive.  The 'logical' letter
must be chosen so as not to collide with any letter used by your hard disk
partitions or floppy drives etc, but the 'physical' letter has meaning only
to BetaDOS so these may use any values, as long as each is only defined
once in BDCONFIG.SYS .

Each drive spec for a BOS driver consists of one letter separated by colon
from a numeric port specification (No spaces allowed in all that), which
traditionally only had one form, a simple number defining the ACSI, SCSI,
or IDE drive ID  (ACSI=0..7, SCSI=8..15, IDE=16..17).  This form is still
the basis for the new extended forms too...  The extended forms allow for
several ways of specifying LUN as well as ID.  This can be done in various
ways, which must be chosen to fit the needs of the BOS driver used. Two
of the best BOS drivers available have direct support by specific forms:

The ExtenDOS BOS driver CD.BOS needs a value of ((LUN * 16) + ID), so if
you enter that number as port spec then it will work, but you will find
it simpler to use the new support format using an ID number separated by
a dot from a LUN number.  Thus 'A:9.4' defines LUN 4 of ID 1 on the SCSI
bus for access as BOS drive A:, in a way compatible to CD.BOS . Note that
this special form is absolutely necessary in order to define a drive as
using ACSI ID 0 LUN 1 or ACSI ID 1 LUN 1, since the encoded values are
identical to those of IDE ID 0 and IDE ID 1 respectively.  Using special
LUN format forces IDE to be ignored, since IDE drives do not have LUNs.

The SPIN BOS driver SPIN_SD.BOS needs a value of ((LUN * 8192) + ID), so
using that number as port spec will then work, but again a simpler way is
provided by a new support format using an ID number separated by backslash
from a LUN number.  Thus 'A:9\4' defines LUN 4 of ID 1 on the SCSI bus for
access as BOS drive A:, in a way compatible with SPIN drivers_SD.BOS .  The values
encoded for SPIN_SD.BOS are not subject to the IDE mixup described above,
so use of the special format is always optional (still most convenient).

The '*OPT' command which exists in ExtenDOS is not supported by BetaDOS.
As far as I know there can be no reason to support it, since BetaDOS does
not have the ExtenDOS needs that made this command necessary.


----- Multiple definitions in single commands -----

The above implies that several BOS or DOS drives can be defined on the same
command line, which has the advantage that they then share the same driver
which saves both RAM and bootup time.  If the same drives are defined on
separate command lines the driver will be loaded into memory twice, which
would be wasteful.

Multiple *SLB, commands are not meaningful.  This command switches on the
shared library support, and switching it on over and over has no effect...


----- ??? Confused ??? -----

If any of you are still unclear about what DOS and BOS really means, it may
be useful to consider that normal user activity is always at DOS level. So
a DOS driver is required to make a drive accessible to the user.  Hardware
interaction is not on DOS level however, so any drives that need hardware
access normally need a BOS driver to handle this.  Thus a combination of a
BOS driver and a DOS driver are needed to get a drive which is physically
capable to access hardware and also logically accessible to the user.

Some useful drivers exist that do not use any hardware at all, and these
should be defined without any '*BOS,' command, using only '*DOS,' command.
(eg: The CLUSTER.DOS driver which is supplied with BetaDOS releases.)
The physical drive letter is still required in the specs, but should then
be chosen so as not represent any loaded BOS file.  Even letters normally
illegal will do here, so I often use simple digits (see BDCONFIG.SYS file).

SLB drivers were introduced in MagiC 5, and are a way to implement shared
code libraries, with various parts being loaded only when they are in use,
and capable of multiple simultaneous use by various APPs.  These drivers
are thus not loaded at boot, but when some APP needs them.  It is only the
SLB_LOAD.OVL which is loaded at boot, and which later may load SLB drivers.

Note that the SLB format has been redefined by Andreas Kromke for MagiC 6,
and the old format is no longer supported.  BetaDOS implements the newer
format and makes it available even on older MagiCs or singleTOS, etc.
This has been tested in singleTOS, MagiC 5.20, Geneva, MultiTOS and nAES.

From release version 3.04 of BetaDOS, it has also been tested under MagiC 6,
where SLB compatibility is so complete that all SLBs shipped with MagiC do
work identically when loaded and executed by SLB_LOAD.OVL of BetaDOS.
##---------------------------------------------------------------------------
@endnode "Syntax of BDCONFIG.SYS"
##---------------------------------------------------------------------------
@node "BOS, DOS, and extra tools"
##---------------------------------------------------------------------------
BOS, DOS, and extra tools                                             BetaDOS
@line 1 77 0 0 7

The following files are currently supplied with BetaDOS:

BD_9660.DOS   ==  CDROM DOS driver compatible to most CDROM BOS files

COOK_FS.DOS   ==  Dummy file system for Atari Cookie Jar

CLUSTER.DOS   ==  Filesystem holding a 'cluster' of predefined symbolic links
                  to all other GEMDOS drives (except U:, for safety...).
                  This can now also handle user defined symbolic links.

SLBLOAD.OVL   ==  Overlay handling the loading and initialization of SLB
                  drivers.  The MagiC 6 compatible shared code libraries.

MAKE_SLN.GTP  ==  Program to define symbolic links for cluster drives.
                  (It just uses gemdos Fsymlink, so you can use that too.)
                  It can also run as TOS/TTP/PRG if you prefer that.

Usage example:    MAKE_SLN C:\MINT\BIN\ U:\BIN
                  With U: being a 'cluster drive' this allows the directory
                  'C:\MINT\BIN\' to be accessed as 'U:\BIN\' instead, almost
                  exactly as under MiNT.

KILL_SLN.GTP  ==  Program to delete symbolic links for cluster drives. This
                  simply deletes the link itself, never affecting anything
                  else.  Actually it uses a simple delete call, so if you
                  drop normal files on it, it will kill them too.

Usage example:    KILL_SLN U:\BIN
                  This just removes the U:\BIN link, but whatever real data
                  it 'pointed' to still remains intact.

WARNING:          NEVER REMOVE SYMBOLIC LINKS BY NORMAL DELETE...!!!
*********         I have made the Ddelete and Fdelete such that they only
* Avoid *         remove the links, as they should, but some desktops insist
* Data  *         on first erasing all the contents of subdirectories...!
* Loss  *         Thus it is never safe to use normal delete operations to
*********         remove a symbolic link, since this could destroy the real
                  data of those linked files and directories...!!!

                  Also remember that when you go below the 'root' directory
                  of a 'cluster drive' you enter the real drives and folders
                  the links lead to.  Any changes made there will affect the
                  real folders and files on those drives. (Just as with MiNT)

As you can see from the above there is still something missing, because no
BOS files are included in this package.  I plan to add that eventually, but
there is no reason to panic or avoid BetaDOS until then, because BetaDOS is
compatible with all BOS files that follow MetaDOS 2.7 standards.  This does
include the following, which are all guaranteed to work as with MetaDOS.

CDARGEN.BOS  from the MetaDOS release package (it does not support Falcon)
SCSI_CD.BOS  from the CDTOOL package \/ Both of these do
SPIN_SD.BOS  from the SPIN package   /\ support Falcon

As of BetaDOS version 3.00, it is now also compatible with the CD.BOS file
of ExtenDOS.  Note that this is not true for any earlier BetaDOS versions !

If you do use the CD.BOS driver with BetaDOS 3.00 (or later), then I must
strongly advise you to also use a DOS driver from the same ExtenDOS release
for those BetaDOS drives that use CD.BOS.  This is because the methods of
ExtenDOS components do not follow MetaDOS usage precisely, so they may not
cooperate well with drivers from other sources.

There should be no problem using a mix of ExtenDOS drivers and other ones
as long as they are not mixed for the same drive.  This has been tested.
##---------------------------------------------------------------------------
@endnode "BOS, DOS, and extra tools"
##---------------------------------------------------------------------------
@node "The CLUSTER.DOS driver"
##---------------------------------------------------------------------------
The CLUSTER.DOS driver                                                BetaDOS
@line 1 77 0 0 7

CLUSTER.DOS is a filesystem for BetaDos,  which creates a partition holding
symbolic links to  most  other gemdos partitions in the system.  Thus it
actually represents a 'cluster' of partitions which is what it is named for.
(So this has _nothing_ to do with disk FAT clusters ;-)

The intended usage is to create a U:\ partition under singletasking TOS,
with much (but not yet all) of the capabilities of the U:\ partition as
used by multitasking systems based on  MiNT  or  MagiC.

Even under MagiC, it is also useful to have a cluster drive (I use V:),
because the links on the U: drive of MagiC can only work for drives based
on MagiC XFS drivers. (NB: floppy/harddisk have XFS drivers in MAGIC.RAM)

Using V: this way is really better than using U:, because V: will work in
exactly the same way in all operating system variants, but U: in both MagiC
and MiNT has limitations, and some small differences in MagiC vs MiNT.

Using a cluster drive gives the ability to access all gemdos drives of all
various kinds (XFS, BetaDos, custom drivers) via a single drive supporting
symbolic links.  This is a service that the original U: drive was intended
to provide, though it fails to do so for all non-XFS filesystems.

Specifications:

1:  All entries in cluster root directories are symbolic links, with a
    longname limit of 32 bytes, linking to files and/or folders with
    complete paths limited to 128 bytes (the Atari standard limit).

2:  User defined links can be created with Fsymlink, as normal for MagiC,
    even when MagiC is not used. From BetaDOS 3.08 it will also work under
    MiNT. This now works because BetaDOS 3.08 can boot _after_ MiNT, and
    this is how it should always be used from now on.

3:  All special multitasker links ("\proc" etc...) as well as the hardware
    links ("\dev" etc...) are still completely unimplemented.  These will
    probably never be added to the cluster drives, since they are mostly
    of interest under multitasking and highly specific to each multitasker.

4:  MiNT kernels assume that all non-XFS filesystems lack modern access
    methods (links, longnames, etc) and therefore refused access to many
    functions on cluster drives under older BetaDOS versions.  This has
    been fixed by BetaDOS 3.08, so that XFS drive entries inside a root
    cluster directory will work.  But MiNT itself still refuses to allow
    non-XFS drives to be accessed through U:.  This is purely a MiNT bug,
    so bother MiNT authors about it until they fix it, but don't bother me.
    My code already implements these things in a functional and general
    manner.

5:  The MagiC/MiNT compatibility has not been achieved by recognizing the
    existence or activity of either of these systems.  That would not be
    a proper way to do it, because new systems may yet be created having
    the same abilities.  Instead Cluster.Dos relies on the error return
    values of newer functions to determine whether these functions are at
    all implemented by the main GEMDOS.  This is the recommended modern
    method to do such things and it works fine with MagiC, but MiNT does
    not itself use these methods and therefore blocks some functions.

6:  There are probably things I have not thought of and need feedback on
    from testers.  Without feedback there is nothing I can do about such.

The implication of point 6 above, is that if you want or need some change
you must get in touch with me, or wait in vain forever...!!!
My contact addresses are @{"these" link "BetaDOS Feedback"}.
##---------------------------------------------------------------------------
@endnode "The CLUSTER.DOS driver"
##---------------------------------------------------------------------------
@node "Using BetaDOS with SPIN XFS drivers"
##---------------------------------------------------------------------------
Using BetaDOS with SPIN XFS drivers                                   BetaDOS
@line 1 77 0 0 7

If you need to access CDROMs through the normal U: drive of MagiC or MiNT,
but also need the extra abilities of BetaDOS, then you can use BetaDOS in
combination with the SPIN XFS drivers by Julian Reschke.
(This has been tested with version 0.34 of his SPIN package.)

Under both MagiC and MiNT (with BetaDOS >= 3.10) this allows all BetaDOS
drives to function normally, but with the added convenience of having
XFS drivers for the CDROM drives of BetaDOS (Thanks to SPIN).

The advantage of this is that those drives can then be accessed through
the 'unified' filesystem (ie: "U:\"), and then the paths of those drives
will be managed individually per multitasked process, as opposed to the
'global' path handling otherwise used by BetaDOS.  This means that there
will be less interference between programs that access the same drives.

This usage has been tested with the components from SPIN version 0.34,
under MagiC 6.01 and under FreeMiNT 1.15.8

The installation instructions below assume that your boot drive is C:,
and that you use the standard GEMSYS folder.  If not, then some of the
pathnames below will not fit your system, but hopefully you can figure
out which paths to use anyway.

        Installation of BetaDOS with SPIN under MagiC
        Installation of BetaDOS with SPIN under MiNT
##---------------------------------------------------------------------------
@endnode "Using BetaDOS with SPIN XFS drivers"
##---------------------------------------------------------------------------
@node "Installation of BetaDOS with SPIN under MagiC"
##---------------------------------------------------------------------------
Installation of BetaDOS with SPIN under MagiC                         BetaDOS
@line 1 77 0 0 7

1:  Start by installing BetaDOS itself.  Do this in normal TOS, as
    this is the simplest test environment.  When this works well
    (just a matter of configuring it properly) proceed below.

2:  Create a file named CONFIG.SYS in C:\AUTO\, and copy the text
    lines for CDROM BOS and DOS drivers of BDCONFIG.SYS into it.
    You should not copy the lines for other drivers however, as
    the SPIN XFS is only compatible with CDROM drivers, and in
    fact you are limited to using the ones specified in SPIN docs.

    Other drivers can be used with BetaDOS, but not with SPIN, so
    those can only be used in BDCONFIG.SYS and not in CONFIG.SYS.

3:  Copy SPINMAGC.XFS to the folder C:\GEMSYS\MAGIC\XTENSION
    (possibly named differently on your system), which is where
    MagiC will search for XFS files.

4:  Make an extra copy of BETADOS.PRG in C:\AUTO\ and rename that
    copy to METAXBS.PRX.  This is the name that the SPIN XFS will
    search for, so at boot time the XFS will load and start that
    renamed copy of BetaDOS. Do not erase the original BETADOS.PRG,
    because you may need both (eg: with MiNT), but rename it to
    BETADOS.PRX when booting MagiC.

5:  Boot MagiC and test that the CDROM drives you specified in step 2
    can be accessed through U:, and that all BetaDOS drives can be
    accessed as separate drives (ie: not via U:).

6:  If anything goes wrong, doublecheck each of the steps above, and
    correct as necessary until you get it to work.

    The installation under MagiC is then completed.
##---------------------------------------------------------------------------
@endnode "Installation of BetaDOS with SPIN under MagiC"
##---------------------------------------------------------------------------
@node "Installation of BetaDOS with SPIN under MiNT"
##---------------------------------------------------------------------------
Installation of BetaDOS with SPIN under MiNT                          BetaDOS
@line 1 77 0 0 7

1:  Start by installing BetaDOS itself.  Do this in normal TOS, as
    this is the simplest test environment.  When this works well
    (just a matter of configuring it properly) proceed below.

2:  Create a file named CONFIG.SYS in C:\AUTO\, and copy the text
    lines for CDROM BOS and DOS drivers of BDCONFIG.SYS into it.
    You should not copy the lines for other drivers however, as
    the SPIN XFS is only compatible with CDROM drivers, and in
    fact you are limited to using the ones specified in SPIN docs.

    Other drivers can be used with BetaDOS, but not with SPIN, so
    those can only be used in BDCONFIG.SYS and not in CONFIG.SYS.

3:  Copy SPIN.XFS to the folder named C:\MINT or C:\MULTITOS,
    (possibly named differently on your system), which is where
    MiNT will search for XFS files.

4:  Make an extra copy of BETADOS.PRG in C:\AUTO\ and rename that
    copy to METAXBS.PRG.  That copy has to boot before MiNT does,
    so that it is already in the system when MiNT boots the XFS.

    Do not erase the original BETADOS.PRG, because it is still
    needed, and must boot after MiNT does.  When it is booted it
    will tell the earlier copy to reinitialize some vectors, and
    that is needed for other BetaDOS drivers than CDROM to work.
    Thereafter the second copy will terminate cleanly, releasing
    all the RAM it used again.

5:  Boot MiNT and test that the CDROM drives you specified in step 2
    can be accessed through U:, and that all BetaDOS drives can be
    accessed as separate drives (ie: not via U:).

6:  If anything goes wrong, doublecheck each of the steps above, and
    correct as necessary until you get it to work.

    The installation under MiNT is then completed.
##---------------------------------------------------------------------------
@endnode "Installation of BetaDOS with SPIN under MiNT"
##---------------------------------------------------------------------------
@node "Planned BetaDOS Enhancements"
##---------------------------------------------------------------------------
Planned BetaDOS Enhancements                                          BetaDOS
@line 1 77 0 0 7

The following enhancements are planned, but not yet completed (or begun!?!):

1:  Add emulation of Dopendir/Dreaddir and other associated functions for
    any old DOS files that do not implement these directly.  Note that this
    includes _all_ CD-ROM filesystems I've seen, causing some programs to
    fail accessing these (Notably MagxDesk).  That is actually a bug in those
    programs, since the new functions are defined to add functionality to the
    system, but not to replace Fsfirst/Fsnext for old filesystems.  Still, it
    should be possible to add emulation for it, and I plan to do so.  That
    will then become a new configurable option for DOS files in BDCONFIG.SYS.
    As of version 3.06 some of this emulation has been added, but it is not
    yet complete.

2:  Add hardware link emulation for CLUSTER.DOS (for use as U:\dev\...)

3:  Add a BOS file for CDROM access on all standard Atari machines.
    Until then you will have to use the BOS files from other packages...

NB: From BetaDOS version 3.00 you can also use the BOS and DOS drivers from
    the ExtenDOS package even though they depend a lot on ExtenDOS specific
    deviations.  BetaDOS now has dual compatibility with ExtenDOS + MetaDOS.

##---------------------------------------------------------------------------
@endnode "Planned BetaDOS Enhancements"
##---------------------------------------------------------------------------
@node "BetaDOS Development History"
##---------------------------------------------------------------------------
BetaDOS Development History                                           BetaDOS
@line 1 77 0 0 7

@{U} Version 3.10	2000 July 02 @{0}

	This version adds two improvements of MiNT compatibility.
	One circumvents a difference in basepage initialization between
	standard TOS and MiNT (drive id not set up at program launch).
	The other allows full BetaDOS capabilities to be used even when
	the SPIN XFS (by Julian Reschke) is used to link CDROM drives
	into MiNT's U:\ filesystem.

@{U} Version 3.09	2000 June 28 @{0}

	This version fixes two bugs.  One caused bad emulation of Fxattr
	for DOS drivers that lack this function, and the other caused a
	limitation in the number of accessible folders/files for the DOS
	drivers that lack a proper Dopendir function.
	NB: Please try again now, with DOS drivers that failed before.

@{U} Version 3.08	2000 June 12 @{0}

	When used with MiNT, older versions of BetaDOS had to boot
	before MiNT, to avoid disturbing the path handling of MiNT.
	But for many functions newer MiNT kernels do not correctly call
	gemdos extensions booted before MiNT, as needed for such device
	drivers to work.  BetaDOS 3.08 has therefore been fixed to not
	affect the path handling of MiNT even when booted after MiNT,
	and that is now how it should always be used with MiNT.

@{U} Version 3.07	1999 December 27 @{0}

	Due to a typing error in the source code, release version 3.06
	was bugged in its implementation of Fxattr emulation, which
	caused bombs when invoked under singleTOS.  This new version
	3.07 fixes that problem but is otherwise identical to 3.06 .

@{U} Version 3.06	1999 December 27 @{0}

	BETADOS.PRG has been improved so as to emulate some of the
	newer GEMDOS functions, missing in most DOS drivers. The new
	emulation will only be used for drivers that completely lack
	the function to be emulated (return E_INVFN with BetaDOS 3.05).
	If a DOS driver does implement one of the affected functions,
	then that implementation will be used, without any emulation.

	The functions that BetaDOS 3.06 can emulate are:

	long    Fcntl(int handle, long xattr_p, FSTAT);
	long    Fcntl(int handle, long readsize, FIONREAD);
	long    Fcntl(int handle, long writesize, FIONWRITE);
	long    Fxattr(int flag, char *pathname_p, XATTR *xattr_p);

	Another change made to both BETADOS.PRG and to CLUSTER.DOS
	causes Dfree operations that access drives through symbolic
	links on cluster drives to work more like they do on the 'U:'
	drive of MagiC.

	The total effect of all changes in this update is to make
	BetaDOS much more compatible with programs dependent on the
	new functionality of GEMDOS under MiNT/MagiC, and this does
	apply even under singleTOS, as the emulation also works for
	normal TOS drives when accessed through a cluster drive.

	Some 'notorious' problems eliminated by this version are:

	Accessing BetaDOS drives from MagiC's file selector.
	Viewing files with MGVIEW.PRG in MagXDesk.
	Copying files with MGCOPY.PRG in MagXDesk.
	Editing files with MGEDIT.PRG in MagXDesk.

@{U} Version 3.05	1999 January 30 @{0}

	Some routines of BETADOS.PRG caused unimplemented functions
	of DOS drivers to return E_ERROR rather than E_INVFN, which
	is the correct value.  This sometimes caused error dialog
	boxes (via 'etv_critic') in an inappropriate manner.  This
	bug is now completely fixed.

	CLUSTER.DOS also used incorrect return codes in 'Freadlink'
	calls made with illegal/incorrect link names.  This has now
	been corrected so as to use E_ACCDN and E_FILNF as required
	by the TOS specifications for 'Freadlink'.

	To a user the above errors were visible mainly as side effects
	when using software which reacts to error codes via 'etv_critic'.

	One example is the file selector 'BoxKite', which would show
	some unwanted error alert boxes when accessing BetaDOS drives
	under BetaDOS 3.4.  That problem is eliminated in BetaDOS 3.5.

@{U} Version 3.04	1998 November 27 @{0}

	A bug was found in the internal RAM allocation routines of
	CLUSTER.DOS, that could lead to incorrect size of allocated
	blocks.  Fortunately no problems have been reported that are
	associated with this, due to the fact that the bug mostly
	caused larger blocks than needed.  Even so, it could cause
	harm in some cases, so all should update to version 3.04 now
	that this bug has been fixed.  BetaDOS.PRG itself has only
	been slightly edited (date & version) from the last release.

@{U} Version 3.03	1998 September 24 @{0}

	Eabe Kuik reported that SLB_LOAD.OVL of release 3.02 still
	had problems loading libraries from specified paths.  This
	was due to shortcomings of some path string handling code.
	A new path string evaluator/expander was therefore added to
	SLB_LOAD.OVL and since this was better than the one in the
	kernel of BetaDOS.PRG, that was also updated similarily.

@{U} Version 3.02	1998 September 19 @{0}

	A bug in SLB_LOAD.OVL made it allergic to NULL strings used
	to specify search path (to use default paths only). That bug
	has now been removed.

	SLB_LOAD.OVL has been improved to eliminate most of the many
	differencies the original had relative to the implementation
	of MagiC 6.  Hopefully it will now be 100% MagiC compatible.

	Naturally I have informed Julian Reschke of the changes that
	are needed too, but until he implements them the overlays of
	BetaDOS and MetaDOS are no longer equivalent, though they
	are still interchangeable, since I have made no changes to
	the interface parts in BETADOS.PRG.  This means that users
	of MetaDOS can also use my OVL, and are welcome to do so.

	BETADOS.PRG has long had a small but irritating bug in the
	path expansion for root directories.  This is now removed.


@{U} Version 3.01	1998 September 13 @{0}

	Support for MagiC 6 compatible shared code libraries has been
	added, in a way compatible with Julian Reschkes MetaDOS 2.76
	enhancements.  This was in large part due to the fact that he
	freely shared his sources with me  :-)  The SLBLOAD.OVL of my
	implementation is somewhat smaller and more efficient in some
	ways, but it is interchangeable with the one of MetaDOS and
	the actual library functions should work equally fast.  The
	main reason for the differencies is that mine is 100% DevPac
	assembler, while Julian's has large parts written in C.

	The main changes this time are naturally in the kernel and in
	the new SLBLOAD.OVL file, but I have also converted most of
	the other files from PASM assembly to DevPac assembly, which
	is why files are slightly changed though their version is not.
	The reason for this change was the discovery of bugs in the
	1-pass-only implementation of PASM, so there may even be some
	functional differences in programs I've not otherwise altered.
	

@{U} Version 3.00	1998 August 28 @{0}

	ExtenDOS compatibility finally achieved, which is the reason why
	this version has an upgraded 'major' version number. Some of the
	internal structures had to be extended, and their usage slightly
	modified. This should not affect any BOS or DOS drivers that use
	legal methods, but please report any deviations promptly.

	BIOS vector added to implement 'Mediach' for BetaDOS drives.
	This will only work for DOS drives that have a real BOS driver.

	Reentrancy protection methods extended to cover both XBIOS and
	BIOS dispatchers, in addition to the GEMDOS dispatcher.

	Alternative entry formats defined to allow for LUN specification.
	These support the LUN encoding methods of both the SPIN_SD.BOS
	driver from Julian Reschke's SPIN package, and the CD.BOS driver
	from the ExtenDOS package.  See other DOC sections for details.

	Various cosmetic changes for better clarity during boot process.


@{U} Version 2.90	1998 May 9 @{0}

	Symbolic links to files, as well as folders, are now implemented
	in Cluster.Dos, and the link behaviour is now even more similar
	to that of MagiC.  This means that Dxreaddir and Fxattr now will
	return the same link size values as MagiC uses, and in most cases
	the same date and time values too.

	A bug in Frename of Cluster.Dos caused case forcing of renamed
	links to fail, which has now been fixed.


@{U} Version 2.89	1998 April 17 @{0}

	Olivier reported an incorrect path expansion for programs run
	via symbolic links.  BetaDOS.Prg and Cluster.Dos have now been
	updated to fix that bug.  By 'accident' this led to a discovery
	of a path bug in MagiC's U:\ driver too.  That driver will give
	*relative* paths (lacking the leading '\') for Dgetpath calls !

	Andreas Kromke has been informed of this error and has found the
	bug, which will be fixed in MagiC 6.0 . (Release date unknown)


@{U} Version 2.88	1998 April 13 @{0}

	In exploring the CPU bug described for version 2.87 I used some
	debugger breakpoints in BetaDOS.Prg to help me find the entry
	points of the Cluster.Dos functions.  By accident the breakpoints
	were still present in the release version.  This would cause some
	lockups in Dgetpath calls (only).  Those breakpoints are removed
	in this version 2.88, which has no other changes from 2.87.


@{U} Version 2.87	1998 April 12 @{0}

	I found a bug that would cause Cluster.Dos to lockup on any ST/STe.

	That was due to a bug in the 68000 CPU instruction set !!!
	All stack operations that would cause an odd stack address should
	be auto-fixed by CPU to keep the stack pointer even.  This does not
	work for the 'link' instruction, at which the CPU instead freezes !
	It does not give any of the 'normal' exception processing, but just
	freezes, without any recoverability (except hard RESET)...!!!

	It is not even possible to single-step a program with such a 'link'
	because freezeing occurs immediately when that instruction executes,
	and no further processing of any kind is then possible...!!!
	This is correct for a 'double bus error' but it is not correct that
	such an error should be triggered by a 'link' offset being odd.

	This bug was fixed by ensuring that all 'link' offsets are even.


@{U} Version 2.86	1998 April 10 @{0}

	Olivier Booklage reported unexpected error returns from Dgetpath
	calls.  This was due to a bug in BetaDOS.Prg which has now been
	fixed.  The bug was non-fatal but caused some APPs to fail using
	some gemdos drives under some conditions.


@{U} Version 2.85	1998 April 9 @{0}

	Olivier Booklage reported a problem when using Fforce to redirect
	'standard output' to files via symbolic links.  This is now fixed
	by adding specific Fforce support to BetaDOS.Prg and by adding
	Fforce code to Cluster.Dos, so that the Fforce operation really
	acts on the file systems linked to, as must be the case.


@{U} Version 2.84	1998 April 8 @{0}

	Vassilis Papathanassiou reported an error in the Fxattr return
	values of Cluster.Dos 2.00.  This has now been corrected for the
	new release as Cluster.Dos 2.02 .  Some other changes were made
	to make symbolic links on cluster drives more similar to those
	implemented by MagiC for its U:\ drive.  They are now almost
	identical, except that cluster drive links may use longer names.

	The main BetaDOS program has not been significantly changed since
	version 2.82, since I have had no bug reports motivating changes.


@{U} Version 2.83	1998 March 30 @{0}

	Longname support improved for subdrives of Cluster.Dos
	This is still not perfect, but works for most cases, though
	that also depends on the code of the underlying drivers.
	Apart from the above this release is mainly identical to the
	unreleased version 2.82


@{U} Version 2.82	1998 March 6 @{0}

	BetaDOS.Prg corrected to allow proper renaming of files/folders
	on reentrant Meta-filesystems.  Cluster.Dos adjusted to make use
	of this new property (rename did not work on it before).

	Dfree function of Cluster.Dos corrected.  It now works properly.

	Cluster.Dos is now translated to 100% PASM assembler. (faster!)
	In doing so, various small bugs/limitations were removed.

	Symbolic link support corrected in BetaDOS.Prg
	Symbolic link support added to Cluster.Dos
	Symbolic link tool 'Make_SLN.GTP added to the package
	Symbolic link tool 'Kill_SLN.GTP added to the package

NB: Userdefined symbolic links now perfectly work on Cluster.Dos
NB: But under MiNT there is no way to use this, because the MiNT kernel
NB: does not pass Fsymlink calls to non-XFS file systems...! (MiNT bug)

NB: This Fsymlink problem is fixed by BetaDOS 3.08 (booting after MiNT).

	Due to a total lack of feedback and other inquiries, this
	version (2.82) of BetaDOS was never publicly released.


@{U} Version 2.81	1998 March 1 @{0}

	This version has been given some additional speed optimization,
	but part of this was consumed again to give reentrancy protection
	to some FCB variables previously missed.

	Partial support of symbolic links was added to the BetaDOS kernel
	which will now pass function calls Flink, Fsymlink, Freadlink, to
	such DOS filesystems as have these flagged as implemented in their
	function tables.  NB: AFAIK no such filesystems exist as yet ;-)

	A new DOS filesystem, BD_9660F.DOS was added, so as to make the
	package independent of the ISO9660F.DOS of the MetaDOS package
	for CD-ROM access.  This one has been slightly better optimized
	(both for speed and space), and has completely different code
	structure to simplify future improvements and enhancements.

@{U} Version 2.80	1998 February 28 @{0}

	This is the first release of BetaDOS, and includes improvements for
	full MiNT and MagiC compatibility.  Enhancements allow reentrant use
	of DOS functions, which is used by CLUSTER.DOS.  That filesystem is
	also included in the release, mainly so that users of singletasking
	tos shall be able to define a MiNT-like U: partition.

@{U} Version 2.7x	1998 January 27 @{0}

	Project start and various pre-release experiments.

NB:  Since MetaDOS standards require that availability of functions and
     enhancements are defined by version number, the version numbers of
     a BetaDOS can not be set lower than the latest MetaDOS version.
     Doing so would cause various programs to believe that a very old
     MetaDOS version is installed, lacking many features...  Therefore
     BetaDOS version numbers were started at "2.71".
##---------------------------------------------------------------------------
@endnode "BetaDOS Development History"
##---------------------------------------------------------------------------
##===========================================================================
##	End of file:	BETADOS.STG
##===========================================================================
