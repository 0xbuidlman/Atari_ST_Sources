	Atari Falconin konekieliohjelmointi 7 v0.073ž
        --------------------------------------------
             	   ½ Tero Yli-Koski

Basic k„skyj„ konekielell„ ja muita k„tevi„ rutiineja.

- Leikep”yt„„ apuna k„ytt„en siirr„t n„it„ k„tev„sti omiin ohjelmiisi.
- Jos rutiinissa on nop-k„sky, niin se tarkoittaa, ett„ nop-k„skyn
  paikalla voi olla jo sinun seuraava k„skysi.
- Basic k„skyjen vastikkeet ovat osaksi MSX-basic formaatissa.
- Nuo dc.? ja ds.? rivit heitet„„n ohjelman loppuun ellei kyse ole
  Line-a komennoista (dc.w $a0??), muuuten kone kaatuu !!!
  
BLOAD:
Lataa tiedoston. T„m„ siirt„„ DTA:n, katsoo filen koon, varaa muistim„„r„n,
Avaa, lukee, sulkee tiedoston ja ilmoittaa alkuosoitteen a6:ssa.
Huomaa tehd„ virherutiinit ferror, error, eof.

	pea	dta			BLOAD"filename"
	move.w	#$1a,-(sp)		Siirret„„n DTA
	trap	#1
	addq.l	#6,sp
	move.w	#0,-(sp)		a5=fileen koko
	pea	filenam
	move.w	#$4e,-(sp)
	trap	#1
	addq.l	#8,sp
	tst	d0
	bne 	ferror
	move.l	dta+26,a5
	move.w	#0,-(sp)		Varataan tila ST-RAMista
	move.l	a5,-(sp)		
	move.w	#$44,-(sp)
	trap	#1
	addq.l	#8,sp
	tst	d0			if d0=0 then out of memory error
	beq	error		
	move.l	d0,a6			a6=varatun tilan alkuosoite
	move.w	#0,-(sp)		OPEN"filename" FOR INPUT #handle
	pea	filenam
	move.w	#$3d,-(sp)
	trap	#1
	addq.l	#6,sp
	tst.w	d0
	bmi	ferror
	move.w	d0,handle
	move.l	a6,-(sp)		READ
	move.l	a5,-(sp)
	move.w	handle,-(sp)
	move.w	#$3f,-(sp)
	trap	#1
	lea	12(sp),sp
	tst.l	d0
	bmi	ferror
	cmp.l	a5,d0			If d0<a5 then eof
	bne	eof
	move.w	handle,-(sp)		CLOSE #handle
	move.w	#$3e,-(sp)
	trap	#1
	addq.l	#4,sp
	tst	d0
	bmi	ferror	

filenam	dc.b	"filename.fil",0
handle	ds.w	1
dta	ds.b	44

CLOSE:
Sulkee tiedoston. handle on OPENin yhteydess„ saatu k„sittely numero.
ferror on paikka johon hyp„t„„n, jos on sattunut virhe.

	move.w	handle,-(sp)		CLOSE #handle
	move.w	#$3e,-(sp)
	trap	#1
	addq.l	#4,sp
	tst	d0
	bmi	ferror

CLS:
Tyhjent„„ kuvaruudun nopeasti. Tyhjent„„ kaikki muut rekisterit paitsi a7:n.
Ellet k„yty grafiikka tilaa 768x480 65535 v„rill„, niin muuta
muutamia rivej„, muutos ohjeet ovat kommenteissa.

	move.w	#$02,-(sp)		CLS
	trap	#14
	addq.l	#2,sp			
	move.l	d0,a0			a0=screen address
	add.l	#737280,a0		768x480x2=737280 nollatavan muistin koko
	moveq.l	#0,d1			nollataan rekisterit
	moveq.l	#0,d2			j„tet„„n nollaamatta a7 ja d0
	moveq.l	#0,d3	
	moveq.l	#0,d4
	moveq.l	#0,d5
	moveq.l	#0,d6
	moveq.l	#0,d7
	move.l	d1,a1
	move.l	d1,a2
	move.l	d1,a3
	move.l	d1,a4
	move.l	d1,a5
	move.l	d1,a6
	move.w	#3543,d0		int((nollattava muistin koko/52)/4)-1
clsloop movem.l	d1-d7/a1-a6,-(a0)
	movem.l	d1-d7/a1-a6,-(a0)
	movem.l	d1-d7/a1-a6,-(a0)
	movem.l	d1-d7/a1-a6,-(a0)
	dbf	d0,clsloop
	movem.l	d1-d7/a1-a6,-(a0)	jakoj„„nnokseksi j„„neiden
	movem.l	d1-d7/a1-a6,-(a0)	tavujen nollaus, siis yksi rekisteri
	movem.l	d1-d6,-(a0)		tyhjent„„ 4 tavua

CREATE:
Tekee uuden fileen tai tuhoaa olemassa olevan.
fname tiedoston nimi ja tarvittaessa asema ja polku p„„ttyen 0:aan.
ferror on paikka johon hyp„t„„n, jos on sattunut virhe.

	move.w	#0,-(sp)		CREATE fname
	pea	fname
	move.w	#$3c,-(sp)
	trap	#1
	addq.l	#8,sp
	tst	d0
	bmi	ferror
	
END:
Lopettaa ohjelman. xx paikalle laita palautus arvo.
Kone ilmoittaa negatiivisilla arvoilla, aina vastaavan virhe ilmoituksen.
N„in voit tehd„ helposti virheenilmoitus rutiinin.
Ohjelman ajo loppuu TRAPiin.
	
	move.w  #$xx,-(sp)		END		
	move.w	#$4C,-(sp)	
	trap	#1		

FILE ERROR:
Ilmoittaa fileitten k„sittelyss„ tapahtuneen virheen dialog-boxissa.
Virhe numeron sis„„n sy”tt” tapahtuu d0:n kautta. Rutiini k„sitt„„ vain
numerot: -32,-33, -34, -35, -39, -41, -42, -46, -47,-49, -64, -65 ja -66.
Ja ilmoitus on ep„m„„r„inen. Ei toimi supervisorissa ja grafiikka tila
pit„„ olla sama, kuin k„ynnistett„ess„. J„tt„m„ll„ kaksi ensimm„ist„
rivi„ pois, voidaan virheen numero sy”tt„„ MS-DOS muodossa.

	neg.w	d0			FILE ERROR
	sub.w	#31,d0
	move.w	d0,intin
	move.l	#aespd,d1		
	move.w	#$c8,d0
	trap	#2
	
aespd	dc.l	contrl,null,intin,null,null,null
contrl	dc.w	53,1,1,0,0		kutsu form_error
intin	dc.w	1			
null	ds.l	1			Tarpeettomien ohjausosoite


FILE SELECTOR:
Tekee fileselectorin ruutuun. Koska t„m„ on AES kutsulla
toteutettu, niin kone ei saa olla supervisor tilassa ja
grafiikka tila pit„„ olla sama, kuin ohjelman k„ynnistyksess„.
Jostain kumman syyst„ kahden file selctor kutsun v„liss„
pit„„ olla jokin muu AES-kutsu.
Muut vinkit l”ytyv„t kommentti riveilt„.

	move.l	#aespd,d1		FILE SELECTOR
	move.w	#$c8,d0
	trap	#2
	
aespd	dc.l	contrl,null,null,intout,addrin,null
contrl	dc.w	91,0,2,3,0		Kutsu fileselector
* paluu arvot: Napit ja ongelmat tallentuu t„nne
intout	ds.w	1			0=error,1=no error  
	ds.w	1			0=cancel,1=OK
* osoitteet miss„ on oletus arvot ja jonne tulee paluuarvoja
addrin	dc.l	path						
	dc.l	file
	dc.l	title
null	ds.l	1			Tarpeettomien ohjausosoite
* Oletusarvot t„nne ja niiden p„„lle tallentuu paluu arvot
* Huomaa,ett„ sinun pit„„ poistaa maski ja lis„t„ file, jos aiot k„ytt„„
* saamaasi pathia esimerkiksi tiedoston avaamisen yhteydess„
path	dc.b	"drive:\path\mask"	esim. C:\ALIEN3\*.MPG
	ds.b	255			varataan tilaa pitemm„lle pathille
file	dc.b	"filename.fil",0	esim. INTRO.MPG
title	dc.b	"title",0		enint„„n 30 merkki„. esim. Save Animation
 	
GOSUB:
Hypp„„ aliohjelmaan. label kohtaan paikka jonne hyp„t„„n.

	bsr	label			GOSUB label
	
GOTO:
Hypp„„ toiseenpaikkaan ohjelmassa. label kohtaan paikka jonne hyp„t„„n.

	bra	label			GOTO label

MOUSE:
Laittaa hiiren osoittimen n„kyviin ja pois n„kyvist„.
	
	dc.w	$a009			MOUSE ON

	dc.w	$a00a			MOUSE OFF
	
MPRINT:
Kirjoittaa MIDI-OUT porttiin. stringin paikalle merkkijonon nimi.
xx:n paikalle merkkien m„„r„ v„hennettyn„ yhdell„.
 
	pea	string			MPRINT
	move.w	#xx,-(sp)
	move.w	#$0c,-(sp)
	trap	#14			
	addq.l	#8,sp	

ON GOSUB:
Hypp„„ tiettyyn aliohjelmaan muuttuja(rekisterin) arvon
perusteella. Dx:n paikalle rekisteri jonka perusteella hyp„t„„n.
Label on taulukon alkamis paikka, miss„ m„„r„t„„n, mihin hyp„t„„n
mill„kin arvolla. Label0-Label255 sis„lt„v„t mihin hyp„t„„n.
Labeleit„ ei tietenk„„n tarvitse olla kuin suurimpaan mahdolliseen
Dx:n arvoon asti. Huomaa, ett„ 0 on ensimm„isen hypyn arvo.

	asl.w	#2,Dx			ON Dx GOSUB
	jsr	Label(Dx.w)
	<ohjelman ajo jatkuu t„st„ aliohjelman j„lkeen>
	.
	.
Label	bra	Label0
	bra	Label1
	bra	Label2
	.
	.
	bra	Label255

ON GOTO:
Hypp„„ tiettyyn paikkaan ohjelmassa muuttujan(rekisterin) arvon
perusteella. Dx:n paikalle rekisteri jonka perusteella hyp„t„„n.
Label on taulukon alkamis paikka, miss„ m„„r„t„„n, mihin hyp„t„„n
mill„kin arvolla. Label0-Label255 sis„lt„v„t mihin hyp„t„„n.
Labeleit„ ei tietenk„„n tarvitse olla kuin suurimpaan mahdolliseen
Dx:n arvoon asti. Huomaa, ett„ 0 on ensimm„isen hypyn arvo.

	asl.w	#2,Dx			ON Dx GOTO
	jmp	Label(Dx.w)
Label	bra	Label0
	bra	Label1
	bra	Label2
	.
	.
	bra	Label255
	
OPEN:
Avaa tiedoston. mode kohtaan avaamis tapa: 0=read only, 1=write only, 2=read/write
fname kohtaan fileen nimi ja tarvittaessa polku, jos on eriss„ paikassa,
kuin k„ynnistett„v„ ohjelma. Fileen nimen loppuu merkkiin 0.
ferror paikka johon hyp„t„„n jos avaus ei onnistu. handle on paikka johon
tallennetaan avatun fileen numero, t„m„ pit„„ olla tallessa CLOSEa varten.
Huom ! T„m„ ei tee uuden nimist„ tiedostoa automaattisesti, vaan k„yt„ ensin
CREATEa. 

	move.w	#mode,-(sp)		OPEN"filename" FOR mode #handle
	pea	filename
	move.w	#$3d,-(sp)
	trap	#1
	addq.l	#6,sp
	tst.w	d0
	bmi	ferror
	move.w	d0,handle

PRINT:
stringin paikalle merkkijonon nimi. Merkkijono loppuu merkkiin 0.
Merkkijonossa voi olla VT-52 yhteensopivia ohjaus koodeja. 
Ja t„ytyy muistaa, ett„ t„ydellinen rivin vaihto edellytt„„
merkkej„ 13 ja 10.

	pea	string			PRINT string
	move.w	#9,-(sp)
	trap	#1
	addq.l	#6,a7		

READ:
Lukee tiedostosta. buf on alkuosoite johon luetaan.
xxxx paikalle kuinka monta tavua luetaan. handle on avatun fileen numero,
joka on saatu openin yhteydess„. ferror paikka jonne hyp„t„„n, 
jos sattuu luenta virhe. eof kohtaan paikka jonne menn„„n jos tiedosto loppui kesken.
Lukua jatketaan aina siit„ kohti mihin on viimmeeksi j„„ty.

	pea	buf			READ
	move.l	#xxxx,-(sp)
	move.w	handle,-(sp)
	move.w	#$3f,-(sp)
	trap	#1
	lea	12(sp),sp
	tst.l	d0
	bmi	ferror
	cmp.l	#xxxx,d0
	bne	eof
	
RETURN:
Palaa aliohjelmasta.

	rts				RETURN

	addq.l	#4,sp			RETURN label
	bra	label			

	rte				RETURN FROM INTERRUPT
	
SPEAKER OFF:

	move.w	#$40,-(a7)		SPEAKER OFF
	move.w	#$1E,-(a7)
	trap	#14
	addq.l	#4,a7


STR$
Muuntaa luvun merkkijonoksi.

	moveq.l	#0,d2			a0=STR$(d0)
	move.w	#0,-(sp)		REM d0=32-bit etumerkit”n luku
b2dloop	moveq.l	#0,d1			REM a0:ssa sy”t„ merkkijonon alkuosoite
	addq.l	#1,d2			REM ei toimi 68000:ssa
	divul.l	#10,d1:d0
	add.b	#$30,d1
	move.b	d1,-(sp)
	tst.l	d0
	bne	b2dloop
b2dloo2	move.b	(sp)+,(a0)+		
	dbeq	d2,b2dloo2

SUPERVISOR:
Laittaa koneen supervisortilaan ja takaisin, jotta voidaan k„ytt„„ tavallisesti
kiellettyj„ operaatioita esim. muistikartassa lueteltuja osoitteita.
oldstack paikalle osoite johon tallennetaan v„liaikaisesti normaalitilan
pino-osoitin. label:in paikalle osoite jossa on supervisortilaa tarvitseva
aliohjelma.
	
	clr.l	-(sp)			SUPERVISOR ON
	move.w	#$20,-(sp)
	trap	#1
	addq.l	#6,sp
	move.l	d0,oldstack
	
	pea 	oldstack		SUPERVISOR OFF
	move.w	#$20,-(sp)
	trap	#1
	addq.l	#6,sp

	pea	label			SUPERVISOR GOSUB	
	move.w	#$26,-(sp)
	trap	#14
	addq.l	#6,sp
			
SWAP:
Vaihtaa kahden muuttujan(rekisterin) paikkaa. rx, ry ovat vaihdettavat
rekisterit.

	exg.l	rx,ry			SWAP
VAL:
Palauttaa merkkijonon numeerisen arvon.

	move.b	(a0)+,d1		d0=VAL(a0)
	sub.b	#$30,d1			REM a0=stringin alkuosoite
	cmp.b	#9,d1			
	bhi	valmis
	mulu.l	#10,d0
	add.l	d1,d0
	bra	de2bi
valmis	nop
	
WAIT:

	move.w	#1,-(sp)		WAIT KEY
	trap	#1
	addq.l	#2,a7

waitsp	move.b	$fffffc02.w,d0		WAIT SPACE
	cmpi.b	#$39,d0
	bne.s	waitsp

waitmou	tst.b	$fffffc02.w		WAIT MOUSE
	bne.s	waitmou	
	
WRITE:
Kirjoittaa tiedostoon. Selitykset samat, kuin READiss„. 

	pea	buf			WRITE
	move.l	#xxxx,-(sp)
	move.w	handle,-(sp)
	move.w	#$40,-(sp)
	trap	#1
	lea	12(sp),sp
	tst.l	d0
	bmi 	ferror
		
	