Road Riot Notes:

Coordinates:  All objects are defined in x,y, and z coordinates.  The x coordinate
axis is defined as the center of the road.  Objects to the left of the road center 
have -x coordinates, while objects to the right of center have positive x coordinates.
The Y coordinate indicates progress down the road: It starts at zero at the beginning
of the road and 'wraps around' at the end of the road (there are no negative y 
coordinates).  The Z coordinate indicates the distance above or below an imaginary
sea level - up is positive and down is negative.

There are 12 tracks in the game.  Each track is divided up into strips.
There are 4 files which describe each track:
TRACK.ASM, LISTn.ASM, LUTn.ASM, and MAPn.ASM, where 'n' is the track number.
These are files that were created with a 'track editor' program, so when examining
the file all you will see is a table of bytes.  Here is what the bytes mean:

TRACKS.ASM
TRACK1-12.ASM - The first part of each file is a table that contains a word for
				each track strip.  The words describe the 'curve' of each strip.
				At the end of the first table, a second table starts.  This table 
				describes the elevation of each strip.  The 'start' of the first
			    strip has an elevation of zero zero.  The table contains a word for 
				each strip that indicates the height that the strip will reach at 
				its 'end'. The 'start' height of each strip afer the first 
				is the ending height of the previous strip.

OBLIST.ASM
LIST1-12.ASM - This file list the motion objects associated with each
			   strip of each track.  The first part of the table contains
			   a byte for each strip.  This is an index into the list
			   of objects. The second part of each file is a list of 
			   the objects for the track.  Each object is descibed by
			   an OBLIST structure ( see rrdef.h for a desription of this
			   structure).

LUTS.ASM
LUT1-12.ASM  - The table lutX.asm contains a word for each strip in the track.
			   Each word indicates the palette 
			   number for that strip.  Palette 0 is usually the default palette,
			   with other palettes being used to suggest cross streets or a
			   change in the terrain.

MAP1-12.ASM
MAPS.ASM - The map is an overview of the race that shows the position
		   of each car.  For each strip on the track there is a 
		   corresponding point on the map. These tables list the x
		   and y screen coordinates on the map for each of these points.
		   Each coordinate is one word long: x0, y0, x1, y1, x2, y2, etc.
		   These are not like the games xzy coordinates, but are regular
		   x and y coodinates on the screen ( relative to the upper left
		   coordinate of the map's position).

Other files:

ALFTBL.ASM	- Tables describing some pictures drawn in the alpha layer.
ANNOUNCER.C - Controls when voice announcements are made.
ATTRACT.C   - The attract mode - what happens when no one is playing.
BALE.C      - Collision code for hay bales and similar objects.
BALEINC.H   - Include file for bale.c.
BOUNCE.ASM  - Code for objects bouncing off  each other ( like the cars).
BUMP.C      - More collision code.
CAR.C       - The main car model routines. Used by human and cpu cars.
CARINC.H    - Includes for car.c and others.
CARTBL.ASM  - Tables used by the car model.
COW.C       - Collision code for cows and similar beasts.
DRNINC.H    - Drone include file.
DRONE.C     - Drives cars that are not player controlled.
DUST_TBL.ASM - Tables used to generate dust behind the player's car.
GCODE.H     - Include file describing game modes.
INT.ASM     - Interupt code.
LASER.C     - Controls the laser shots of players and drones.
LASER_OFFSET.ASM - Tables used by laser.c .
LASER_TBL.ASM - More tables used by laser.c .
LASINC.H    - Include files for laser.c
LINE_ACC.ASM - Table used to draw roads. 
MAIN.C	    - Main loop of the game.
MAP.C		- Moves the dots on the map.
MESSAGE.H   - Structures for text messages.
MIRROR.C    - Rear view mirror code.
MOTBL.C     - Motion object descriptor blocks.
MUD.C       - Collision code for mud puddles.
OBINC.H     - Structure for obstacles.
OBJECT.C    - Code for putting objects on the side of the road.
OBSTICLE.C  - Collision code for side of the road objects.
OBTBLS.ASM  - Tables of pointers of lists of objects for each track.
PLAYER.C    - Player car and player state control
PLRCASE.H   - defines player states
RAIL.C      - Code for sliding along rails by the road
RRDEF.H     - Game structures and constants
SCORE.C     - Scoring routines.
SCRIPT.ASM  - Animation scripts.
SELECT.C    - Code to select the next track.
STD.H       - Standard C includes.
STEER.ASM   - Table of steering data (hardware dependent?).
STRUCTS.H   - More data structures.
TABLES.ASM  - Tables of pointers to track data. 
TRKTBL.ASM  - More track tables.
