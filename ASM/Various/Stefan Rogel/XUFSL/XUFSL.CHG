eXtended Universal FontSeLektor
===============================

(c) 1994 RoSoft
         Stefan Rogel
         Kîhlerweg 1
   67661 Kaiserslautern
   
   Bankverbindung: Kreissparkasse Kaiserslautern
                   BLZ  540 502 20
                   Kto. 100 807 577

Erreichbar im Mausnetz unter Stefan Rogel (@LU und @WI2).

Der xUFSL ist Freeware und darf beliebig zusammen mit folgenden Dateien
weitergegeben werden:

XUFSL.PRG     Der xUFSL selbst
XUFSL.CHG     Diese Beschreibung
XUFSL.TXT     Kurzanleitung zum xUFSL
XUFSL.H       Definitionen fÅr den xUFSL

FÅr Programmierer sind sicherlich noch folgende Dateien interessant:

CALLUFSL.PRG  Programm mit Quelltexten (PureC) zum Aufruf des xUFSL
CALLUFSL.C
CALLUFSL.RSC
CALLUFSL.H
CALLUFSL.HRD
CALLUFSL.PRJ

COOKIE.C      Teilweise um C-Aufrufe erweitere Routinen zur COOKIE-
COOKIE.H      Verwaltung. Die Originale sind von Arnd Beissner und
COOKIE.LIB    in jeder gut sortierten Mailbox zu finden.
COOKIE.S

Obwohl ich den xUFSL auch dann weiterentwickeln werde, wenn keine Reaktionen
in Form von Spenden, Anregungen oder Fehlermeldungen kommen, wÑre ich fÅr
ebensolche (insbesondere erstere) sehr dankbar.
Insbesondere wÅrde mich interessieren, ob und welche Programme von den er-
weiterten Optionen des xUFSL Gebrauch machen.
FÅr die Implementierung des xUFSL-Aufrufes kann CALLUFSL.PRG mit den bei-
liegenden Quelltexten zu rate gezogen werden. Dieses Programm ist zwar
'quick and dirty' geschrieben und nicht gerade ausfÅhrlich (soll heiûen:
gar nicht) kommentiert, sollte jedoch von jedem Entwickler verstanden wer-
den. In XUFSL.H habe ich die verschiedenen Mîglichkeiten des xUFSL einiger-
maûen ausfÅhrlich erlÑutert.


Wieso noch ein Fontselektor?
----------------------------

Die mir bekannten "Zeichensatzauswahldialoge" sind zwar ganz brauchbar,
werden jedoch den steigenden Anforderungen, die sich mit EinfÅhrung der
Multitasking-Betriebssysteme und des SPEEDO-GDOS ergeben haben, nicht mehr
gerecht.
Der "FONTSEL" von Holger Weets (1.00/11.5.94) ist bei mir (MagiC 2.0,
Speedo 5.0a) nicht lauffÑhig, da er sich nach der Installation bei jedem
Aufrufversuch nur mit Bomben meldet...
Die Urversion, der UFSL von Michael ThÑnitz, lÑuft zwar korrekt, bietet
jedoch zu wenig Parametrierungen.


Die Konsequenz?
---------------

ZunÑchst dachte ich, um eine Neuprogrammierung herumzukommen und habe
etliche Mailboxen durchwÅhlt, jedoch vergebens.
Also habe ich mich schweren Herzens hingesetzt und einen neuen Font-
selektor implementiert.


Das Ergebnis
------------

Herausgekommen ist, so meine ich, ein ProgrÑmmchen, das sich durchaus
sehen lassen kann. Hier eine Kurzbeschreibung:
- Kompatibel zum UFSL von Michael ThÑnitz
- xUFSL bietet einen unmodalen Fensterdialog
- Neben der Auswahl der Schrift kann der Anwender zusÑtzlich folgende
  Parameter einstellen:
  . Schriftgrîûe (bei skalierbaren ZeichensÑtzen jede Zwischengrîûe)
  . Schriftbreite (nur bei skalierbaren ZeichensÑtzen)
  . Schriftneigung (ebenfalls nur bei skalierbaren ZeichensÑtzen)
  . Schriftattribute, wahlweise wird als zusÑtzliches Attribut
    die invertierte Schrift unterstÅtzt (TF_INVERS:=0x40).
- Der Beispieltext kann durch Anklicken umgeschaltet werden.
- Anzeige der aktuellen Font-ID.
- Der Dialog ist bis auf die Farbauswahl komplett tastaturbedienbar.
- Flexible Parametrierung, jede Funktion kann wahlweise abgschaltet
  werden.
- Als besonderes Bonbon besteht die Mîglichkeit, die Dialogzeichen-
  sÑtze des xUFSL einzustellen. Es sind alle ZeichensÑtze erlaubt,
  die 8 Punkte (kleiner Zeichensatz) bzw. 10 Punkte (groûer Zeichen-
  satz) groû sind. DefaultmÑûig wird der Systemzeichensatz verwendet.
  Gut sieht z.B. der proportionale Chicago-Zeichensatz aus!
- Ein kleiner Wermutstropfen: xUFSL ist mit 57KB relativ groû geraten,
  was allerdings in der heutigen Zeit keine allzu wichtige Rolle mehr
  spielen sollte. An diesem "Manko" werde ich in Zukunft noch arbeiten.

Als Beispiel fÅr den Aufruf des xUFSL kann das im Quelltext beiliegende
Programm CALLUFSL.PRG dienen. Dort kann man auch mit den verschiedenen
Optionen "herumspielen".

Ich habe xUFSL mit verschiedenen Programmen ausgetestet (z.B. ST-Guide,
Everest, SaugUtil) und dabei keine Fehler mehr feststellen kînnen. Da ich
leider keinen Farbmonitor besitze, konnte ich die Farbeinstellungen nicht
austesten. Insbesondere hier wÑre ich fÅr Erfahrungen dankbar.

Die Installation des xUFSL kann entweder im AUTO-Ordner oder per Aufruf
des XUFSL.PRG vom Desktop aus installiert werden.
Der xUFSL installiert sich mit dem Cookie "UFSL", sofern dieser noch nicht
belegt ist. Zur Unterscheidung der bekannten Fontselektoren trÑgt er in
der installierten Struktur die ID "xUFS" ein.


Versionshistorie
================

10.09.1994 Version 1.00, getestet mit diversen Programmen

12.09.1994 - Das Flag UFS_WIDTH_CHANGE wurde nicht korrekt behandelt:
             Bei VektorzeichensÑtzen war die Breite u.U. auch dann ein-
             stellbar, wenn das Flag nicht gesetzt war.
           - Shortcuts Åberarbeitet (doppeltes "e"...).
           - Redraw des Textbeispieles war nicht korrekt, wenn der Dialog
             nicht im Vordergrund lag.
           - Aufgrund eines fehlerhaften RÅckgabewertes von vqt_name()
             (Flag fÅr Vektorzeichensatz wird manchmal (?) nicht zurÅck-
             gesetzt) wurde unter bestimmten Konstellationen ein falscher
             VDI-Funktionsaufruf (vst_arbpt statt vst_point) ausgefÅhrt.

13.09.1994 Leider ist mir erst heute die Version 0.97 des UFSL in die
           HÑnde gefallen. Mit Schrecken muûte ich feststellen, daû mein
           Fontselektor mit dem UFSL ab 0.91 wegen erweiterter UFSL-Struktur
           nicht kompatibel ist.
           Deshalb bitte ich um RÅckmeldungen, welche Programme die erweiter-
           ten Mîglichkeiten des UFSL nutzen.
           Prinzipiell ist meine Philosophie etwas anders, da ich versuche,
           mîglichst alle Einstellungen Åber den Funktionsaufruf des xUFSL
           vorzunehmen und damit die UFSL-Struktur nicht unnîtig aufzublÑhen.
           Auch bei der REDRAW-Funktion gehe ich einen anderen Weg, da ich
           alle Ereignisse, die der xUFSL nicht verarbeitet hat, per
           appl_write an die rufende Applikation weiterleite. Deshalb hat
           die REDRAW-Funktion als Parameter nur einen einzigen booleschen
           Parameter. Diesen nutze ich in meinen Programmen dazu, auf
           Ereignisse u.U. erst nach einer bestimmten Zeit zu reagieren, um
           z.B. Dateizugriffe im Multitasking nicht unnîtig zu verlangsamen.

14.09.1994 Version 1.01
           Schweren Herzens habe ich mich dazu durchgerungen, den xUFSL
           kompatibel zum UFSL >= 0.91 zu machen. In diesem Zuge ist die
           Redraw-Funktion aus dem xUFSL-Aufruf verschwunden. Folgende
           Ereignisse werden, da der xUFSL modal zur rufenden Applikation
           sein sollte, nicht per msgfunc weitergemeldet:
             WM_TOPPED, WM_NEWTOP, WM_CLOSED.
           Meine gestrigen AusfÅhrungen zu diesem Thema sind damit zum
           grîûten Teil hinfÑllig. Da der xUFSL sicher noch nicht sehr ver-
           breitet ist und daher wohl noch kein Programm von ihm Gebrauch
           macht, halte ich die énderungen durchaus fÅr vertretbar.
