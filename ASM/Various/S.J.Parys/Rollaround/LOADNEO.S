	DC.W	$A000	INIT LINE A
	DC.W	$A00A	MOUSE OFF

	MOVE.L	A7,OLDUSP+2	STORE OLD USP
	MOVE.W	SR,OLDSR+2	STORE OLD SR
	MOVE.L	A7,-(A7)	SSP TO USP VALUE
	MOVE.W	#$20,-(A7)	SUPER
	TRAP	#1	GEMDOS
	MOVE.L	D0,OLDSSP+2	STORE OLD SSP

	MOVE.L	$44E.W,LASTPOS+2
	MOVE.L	#TEXT,-(A7)	FILENAME REQUEST
	MOVE.W	#9,-(A7)	PRINT LINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK

READ	PEA	NAMEBUF	TEXT INPUT STORE
	MOVE.W	#10,-(A7)	READLINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK
	TST.W	D0	ANY TEXT ?
	BEQ.S	READ	NO

	MOVE.L	#TEXT1,-(A7)	WIDTH REQUEST
	MOVE.W	#9,-(A7)	PRINT LINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK
	LEA	WIDTH,A4	WIDTH STORE
	BSR	GETNUM	GET NUMBER
	MOVE.W	D0,WIDTH	AND STORE IT

REDOHT	MOVE.L	#TEXT2,-(A7)	HEIGHT REQUEST
	MOVE.W	#9,-(A7)	PRINT LINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK
	LEA	HEIGHT,A4	HEIGHT STORE
	BSR	GETNUM	GET NUMBER
	MOVE.W	D0,HEIGHT	AND STORE IT

LOPPY	MOVE.W	#2,-(A7)	READ/WRITE
	PEA	NAME	STORED NAME
	MOVE.W	#$3D,-(A7)	OPEN
	TRAP	#1	GEMDOS
	ADDQ	#8,A7	CORRECT STACK
	TST.L	D0	ERROR ?
	BMI	OLDSSP	YES
	MOVE.W	D0,HANDLE+2	STORE FILE HANDLE

	PEA	HEADER	LOAD ADDRESS
	MOVE.L	#$80,-(A7)	128 BYTE HEADER
	MOVE.W	D0,-(A7)	FILE HANDLE
	MOVE.W	#$3F,-(A7)	READ
	TRAP	#1	GEMDOS
	ADDA.W	#12,A7	CORRECT STACK
	CMPI.L	#$80,D0	128 BYTES READ ?
	BNE	OLDSSP	NO

	MOVE.L	$44E.W,-(A7)	LOAD ADDRESS
	MOVE.L	#32000,-(A7)	32000 BYTE SCREEN
HANDLE	MOVE.W	#0,-(A7)	FILE HANDLE
	MOVE.W	#$3F,-(A7)	READ
	TRAP	#1	GEMDOS
	ADDA.W	#12,A7	CORRECT STACK
	CMPI.L	#32000,D0	32000 BYTES READ ?
	BNE	OLDSSP	NO

	MOVE.W	HANDLE+2,-(A7)	FILE HANDLE
	MOVE.W	#$3E,-(A7)	CLOSE
	TRAP	#1	GEMDOS
	ADDQ	#4,A7	CORRECT STACK
	BMI	OLDSSP	ERROR IF MINUS

	LEA	$FFFF8240,A1	HARDWARE PALLET
	LEA	OLDPAL,A0	PALLET STORE
	BSR	DOPAL	MOVE PALLET
	LEA	HEADER+4,A1	NEO PALLET
	LEA	$FFFF8240,A0	HARDWARE PALLET
	BSR	DOPAL	MOVE PALLET

LASTPOS	MOVE.L	#0,A0
FIXPOS	NOT.L	(A0)
	NOT.L	4(A0)
	MOVE.L	A0,-(A7)
	MOVE.W	#8,-(A7)
	TRAP	#1
	ADDQ	#2,A7
	MOVE.L	(A7)+,A0
	NOT.L	(A0)
	NOT.L	4(A0)
	CMPI.B	#"Z",D0
	BNE.S	NOTL
	SUBQ	#8,A0
	BRA.S	FIXPOS
NOTL	CMPI.B	#"X",D0
	BNE.S	NOTR
	ADDQ	#8,A0
	BRA.S	FIXPOS
NOTR	CMPI.B	#"L",D0
	BNE.S	NOTU
	SUBA.W	#160*8,A0
	BRA.S	FIXPOS
NOTU	CMPI.B	#"M",D0
	BNE.S	NOTD
	ADDA.W	#160*8,A0
	BRA.S	FIXPOS
NOTD	CMPI.B	#13,D0
	BNE.S	FIXPOS
	MOVE.L	A0,LASTPOS+2

	LEA	STORE,A2	HEIGHTS STORE
	MOVE.W	WIDTH,D0	WIDTH IN PIXELS
	LSR.W	#4,D0	WIDTH IN WORD BLOCKS
LOOP1	MOVEQ	#15,D3	1ST BIT TO TEST
LOOP2	MOVE.L	A0,A1	COPY POSITION
	MOVEQ	#0,D1	CLEAR HEIGHT COUNT
LOOP3	MOVE.W	(A1),D2	1ST PLANE
	OR.W	2(A1),D2	+ 2ND PLANE
	OR.W	4(A1),D2	+ 3RD PLANE
	OR.W	6(A1),D2	+ 4TH PLANE
	BTST	D3,D2	TEST THE BIT
	BNE.S	FOUND	SET = FOUND TOP OF SPRITE
	ADDQ	#1,D1	ADD 1 TO HEIGHT COUNT
	ADDA.W	#160,A1	MOVE TO NEXT LINE
	CMP.W	HEIGHT,D1	REACHED BOTTOM ?
	BNE.S	LOOP3	NO
FOUND	MOVE.B	D1,(A2)+	STORE HEIGHT
	SUBQ	#2,D3	MOVE TO NEXT BIT
	BPL.S	LOOP2	+VE = CONTINUE
	ADDQ	#8,A0	MOVE TO NEXT BLOCK
	DBF	D0,LOOP1	REPEAT FOR ALL BLOCKS

	MOVE.W	#8,-(A7)	GET A KEYPRESS
	TRAP	#1	GEMDOS
	ADDQ	#2,A7	CORRECT STACK

	MOVE.L	#TEXT,-(A7)	FILENAME REQUEST
	MOVE.W	#9,-(A7)	PRINT LINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK

READ1	PEA	NAMEBUF2	TEXT INPUT STORE
	MOVE.W	#10,-(A7)	READ LINE
	TRAP	#1	GEMDOS
	ADDQ	#6,A7	CORRECT STACK
	TST.W	D0	ANY TEXT ?
	BEQ.S	READ1	NO

	MOVE.W	#0,-(A7)	READ/WRITE
	PEA	NAME2	FILENAME
	MOVE.W	#$3C,-(A7)	CREATE
	TRAP	#1	GEMDOS
	ADDQ	#8,A7	CORRECT STACK
	TST.W	D0	ERROR ?
	BMI.S	OLDSSP	YES
	MOVE.W	D0,HANDLE+2	STORE FILE HANDLE

	MOVE.L	#STORE,-(A7)	HEIGHTS
	MOVEQ.L	#0,D0	CLEAR D0
	MOVE.W	WIDTH,D0	WIDTH IN PIXELS
	LSR.W	#1,D0	/2=NO. OF HEIGHTS
	MOVE.L	D0,-(A7)	LENGTH TO SAVE
	MOVE.W	HANDLE+2,-(A7)	FILE HANDLE
	MOVE.W	#$40,-(A7)	WRITE
	TRAP	#1	GEMDOS
	ADDA.W	#12,A7	CORRECT STACK

	MOVE.W	HANDLE+2,-(A7)	FILE HANDLE
	MOVE.W	#$3E,-(A7)	CLOSE
	TRAP	#1	GEMDOS
	ADDQ	#4,A7	CORRECT STACK
	BMI.S	OLDSSP	ERROR IF MINUS

	MOVE.W	#8,-(A7)	GET A KEYPRESS
	TRAP	#1	GEMDOS
	ADDQ	#2,A7	CORRECT STACK

	CMPI.B	#"H",D0
	BEQ	REDOHT
	CMPI.B	#32,D0
	BNE	LOPPY

	LEA	$FFFF8240,A0	HARDWARE PALLET
	LEA	OLDPAL,A1	PALLET STORE
	BSR.S	DOPAL	MOVE PALLET

OLDSSP	MOVE.L	#0,A7	RESTORE SSP
OLDSR	MOVE.W	#0,SR	RESTORE SR
OLDUSP	MOVE.L	#0,A7	RESTORE USP
	DC.W	$A009	MOUSE ON
	CLR.W	-(A7)	TERM
	TRAP	#1	GEMDOS

DOPAL	MOVEQ	#15,D0	16 COLOURS
PALOOP	MOVE.W	(A1)+,(A0)+	MOVE COLOUR
	DBF	D0,PALOOP	ALL PALLET
	RTS		EXIT

GETNUM	MOVEQ	#0,D6	COUNT TO ZERO
GETNUM1	MOVE.W	#8,-(A7)	GET A KEY
	TRAP	#1	GEMDOS
	ADDQ	#2,A7	CORRECT STACK
	CMPI.B	#13,D0	ENTER ?
	BEQ.S	NUMOK	YES
	CMPI.B	#"0",D0	CHARACTER IN RANGE ?
	BCS.S	GETNUM1	NO
	CMPI.B	#"9",D0	CHARACTER IN RANGE ?
	BHI.S	GETNUM1	NO
	MOVE.B	D0,(A4)+	STORE CHARACTER
	ANDI.W	#$FF,D0	CLEAR UPPER BYTE OF WORD
	MOVE.W	D0,-(A7)	PUT CODE ON STACK
	MOVE.W	#2,-(A7)	PRINT CHAR
	TRAP	#1	GEMDOS
	ADDQ	#4,A7	CORRECT STACK
	ADDQ	#1,D6	ADD 1 TO COUNT
	CMPI.B	#3,D6	DONE 3 CHARS ?
	BNE.S	GETNUM1	NO
NUMOK	TST.W	D6	ANY CHARS ?
	BEQ.S	GETNUM1	NO
	MOVE.W	#13,-(A7)	ENTER
	MOVE.W	#2,-(A7)	PRINT CHAR
	TRAP	#1	GEMDOS
	ADDQ	#4,A7	CORRECT STACK
	SUBA.W	D6,A4	MOVE TO START OF STORE
	SUBQ	#1,D6	DECREASE COUNT FOR DBF
	MOVEQ	#0,D0	CLEAR D0
	MOVEQ	#0,D1	CLEAR D1
CALCNUM	MULU	#10,D0	MULTIPLY D0 BY TEN
	MOVE.B	(A4)+,D1	GET ASCII IN D1
	SUBI.W	#"0",D1	CONVERT TO NUMERIC
	ADD.L	D1,D0	ADD TO D0
	DBF	D6,CALCNUM	REPEAT FOR ALL CHARS
	RTS		EXIT

STORE	DS.B	160	STORED HEIGHTS
WIDTH	DS.B	4	4 TO STAY EVEN
HEIGHT	DS.B	4	4 TO STAY EVEN
OLDPAL	DS.W	16	16 COLOURS
HEADER	DS.B	128	NEO HEADER
NAMEBUF	DC.B	20,0	20 CHARS MAX
NAME	DS.B	22	22 CHARS TO BE SAVE
NAMEBUF2 DC.B	20,0	20 CHARS MAX
NAME2	DS.B	22	22 CHARS TO BE SAVE
TEXT	DC.B	27,"E",27,"Y",39,32
	DC.B	"FILENAME ? ",0
TEXT1	DC.B	12,13,"WIDTH ? ",0
TEXT2	DC.B	12,13,"HEIGHT ? ",0

