' DEMONSTRATIONSPROGRAMM FUER DEN SPRITE DESIGNER !
' GESCHRIEBEN AM 29.3.91 VON RALF BUML
'
@init
@gemcol
DIM x%(15),y%(15),rx(15),ry(15),a%(15)
@load_spr(0,"sprites\pacman3.spr")         ! HIER MUSS IHR SPRITE STEHEN !
HIDEM
@test0
@end_it
CLS
END
'
PROCEDURE test0
  @set_palette(0)
  CLS
  @screen_changed
  @update
  @wait(10)
  @wait(50)
  FOR sprite=1 TO 10                 ! HIER STEHT, WIE OFT SICH DAS SPRITE WIEDERHOHLT
    FOR i%=1 TO 15                   ! HIER STEHT DIE ZAHL DER SPRITES
      FOR j%=1 TO 10
        @set_sprite(j%,170,100,0,i%)
      NEXT j%
      @update
      @wait(3)
    NEXT i%
  NEXT sprite
  @all_sprite_off
  @wait(50)
RETURN
'
' ***************************************************
'
PROCEDURE set_palette(bank_nr%)
  POKE mc%+0,1
  POKE mc%+1,bank_nr%
  CALL mcstart%
RETURN
'
PROCEDURE screen_changed
  POKE mc%+0,2
  CALL mcstart%
RETURN
'
PROCEDURE all_sprite_off
  POKE mc%+0,3
  CALL mcstart%
RETURN
'
PROCEDURE sprite_off(sprite_nr%)
  POKE mc%+0,4
  POKE mc%+2,sprite_nr%
  CALL mcstart%
RETURN
'
PROCEDURE set_sprite(sprite_nr%,x%,y%,bank_nr%,image_nr%)
  POKE mc%+0,5
  POKE mc%+2,sprite_nr%
  DPOKE mc%+4,x%
  DPOKE mc%+6,y%
  POKE mc%+1,bank_nr%
  POKE mc%+3,image_nr%
  CALL mcstart%
RETURN
'
PROCEDURE update
  POKE mc%+0,6
  CALL mcstart%
RETURN
'
PROCEDURE begin_it(phys_scr%,log_scr%,spr_scr%)
  POKE mc%+0,7
  LPOKE mc%+8,log_scr%
  LPOKE mc%+12,phys_scr%
  LPOKE mc%+16,spr_scr%
  CALL mcstart%
RETURN
'
PROCEDURE end_it
  POKE mc%+0,8
  CALL mcstart%
RETURN
'
PROCEDURE set_bank(bank_nr%,bank_ptr%)
  POKE mc%+0,9
  POKE mc%+1,bank_nr%
  LPOKE mc%+20,bank_ptr%
  CALL mcstart%
RETURN
'
' *******************
PROCEDURE gemcol
  RESTORE gemcol_data
  DIM gemcol%(15)
  FOR i%=0 TO 15
    READ gemcol%(i%)
  NEXT i%
  gemcol_data:
  DATA 0,2,3,6,4,7,5,8,9,10,11,14,12,15,13,1
RETURN
'
PROCEDURE wait(a%)
  LOCAL i%
  FOR i%=1 TO a%
    VSYNC
  NEXT i%
RETURN
'
PROCEDURE load_spr(bank_nr%,file$)
  LOCAL bank_ptr%
  bank$(bank_nr%)=STRING$(32+4+16*512,0)
  bank_ptr%=VARPTR(bank$(bank_nr%))
  BLOAD file$,bank_ptr%
  @set_bank(bank_nr%,bank_ptr%)
RETURN
'
PROCEDURE init
  mc$=STRING$(2500,0)
  mc%=VARPTR(mc$)
  spr_screen$=STRING$(32000,0)
  spr_screen%=VARPTR(spr_screen$)
  BLOAD "sprite.mc",mc%
  mc%=mc%+28
  mcstart%=mc%+30
  '
  phys%=XBIOS(2)
  log$=STRING$(32256,0)
  log%=(VARPTR(log$)+255) AND &HFFFFFF00
  '
  DIM bank$(15)
  '
  @begin_it(phys%,log%,spr_screen%)
RETURN
