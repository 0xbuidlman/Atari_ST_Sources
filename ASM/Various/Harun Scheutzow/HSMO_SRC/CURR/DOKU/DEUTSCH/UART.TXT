UART*.PRG
*********

Dies _werden_ (sind) Treiber fÅr die mit einem UART aus der 16550 
kompatiblen Serie realisierten Schnittstellen von Atari- mehr oder weniger 
kompatiblen Computern. Sie funktionieren zusammen mit DRVIN.PRG oder einem 
gleichwertigen Ersatz. EinfÅhrende Bemerkungen finden sich in 
1_README.TXT.


Allgemeines
-----------
######## Diese Treiber befinden sich momentan noch in der Entwicklungs, 
sind also noch nicht fertig. #### Der Schwerpunkt liegt momentan auf der 
Funktion auf dem Milan.

######## Ich habe nicht untersucht, was zusammen mit Michael Schwingens 
weihnachtlichem Hack passiert. Man benutze einfach ein Milan-TOS, das 
diesen Hack nicht enthÑlt.


Taktrate und Bps-Raten
----------------------
Normalerweise werden die UARTs mit 1,8432 MHz getaktet, was eine maximale 
Rate von 115200 bps erlaubt. ### Momentan gehen die Treiber einfach von 
1,8432 MHz aus. Dies ist auch der Takt der beiden UART-Seriellen des 
Milan.

Einige UARTs lassen sich aber auch mit bis zu 16 MHz oder gar 50 MHz 
takten. #### Hier wird es in Zukunft sicher Parameter im Treiber geben.

### Momentan wird nur 16550er mit 16 Byte FIFO unterstÅtzt.

Es sind folgende hohe Rsconf-Baudraten mîglich:
(neue - alte)
115200 - 150
 57600 - 134
 38400 - 110

Wenn man die GEMDOS-Fcntl TIOC?BAUD benutzt, hat man ohnehin kein Problem, 
dort erfÑhrt man, welche Baudraten mîglich sind im Klartext als 
"Bit pro Sekunde".


UART
----
UART ist das KÅrzel fÅr Universal Asyncronous Receiver Transmitter. Ich 
benutze es hier einfach zur Kennzeichnung der 16550er 
Schnittstellenschaltkreise. (Im MFP oder SCC sitzen USART, die auch 
Syncronbetrieb kînnen.)


UART_3F8.PRG
------------
Voreingestellt fÅr den auf I/O-Adresse $3F8 im ISA-Busbereich und ISA-IRQ 
4 liegenden UART im Milan. GEMDOS-Name MODEM2, BIOS-Nummer 7.


UART_2F8.PRG
------------
Voreingestellt fÅr den auf I/O-Adresse $2F8 im ISA-Busbereich und ISA-IRQ 
3 liegenden UART im Milan. GEMDOS-Name SERIAL2, BIOS-Nummer 8.


Die Konfiguration
-----------------
Die Konfiguration erfolgt durch das SETTER.TTP. Zur Bedienung siehe 
SETTER.TXT.

BINR
- - -
Hier kann die BIOS-Nummer des Schnittstellentreibers festgelegt werden. 
Wird 0 angegeben, so belegt der Treiber die erste freie BIOS-Nummer. Die 0 
sollte fÅr zusÑtzliche Schnittstellen angegeben werden, die nicht zur 
Grundausstattung des Computers gehîren (und deshalb vor dem Start dieses 
Treibers noch keine BIOS-Nummer belegen).

Belegen die Schnittstellen schon eine BIOS-Nummer beim Start des Treibers, 
wie es beim Milan fÅr die beiden auf dem Motherboard integrierten 
UART-Schnittstellen (seit einem Milan-TOS irgendwann in der zweiten HÑlfte 
von 1998) der Fall ist, so sollte diese Nummer hier angegeben werden. 
Entsprechend ist UART_3F8.PRG auf 7 und UART_2F8.PRG auf 8 voreingestellt.

Es gibt leider Programme (wie Connect), die nicht vernÅnftig 
funktionieren, wenn die in den Listen des RSVF-Cookies eingetragenen 
BIOS-Nummern keinen zusammenhÑngenden Bereich bilden.

GNAME
- - -
Hier wird der GEMDOS-Name des Schnittstellentreibers eingetragen. Die 
Grundeinstellung ist MODEM2 bei UART_3F8.PRG und SERIAL2 bei UART_2F8.PRG. 
Jeder Treiber muû seinen eigenen Namen haben. Dieser Name wird immer 
ausgewertet und ist nach dem Treiberstart im Verzeichnis U:\DEV\ zu 
finden.

Prinzipiell kînnen beliebige gÅltige TOS-Dateinamen (d.h. MaximallÑnge 
8+3) verwendet werden.

ADR
- -
Auf dem Milan kann man hier einfach die I/O-Adresse des UART im Bereich 0 
bis 65528 angeben, die automatisch vom Treiber in die entsprechende 
Adresse im 68K-Adreûraum umgerechnet wird.

Die I/O-Adresse des UART ist seine niedrigste Adresse. #### Der Treiber 
erwartet momentan, daû 8 aufeinanderfolgende Adressen vom UART belegt 
werden. #### Auûerdem benutzt er den I/O-Bereich des Milan ab 68K-Adresse 
$80000000 und damit das 32-Bit-Swapping.

Werte ab 65536 aufwÑrts werden nicht umgerechnet sondern direkt als 
68K-Adresse benutzt. (Eventuell muû man Adressen ab $80000000 aufwÑrts mit 
ihrem negativen Equivalent in SETTER.TTP eintippen)

IRQ
- -
Auf dem Milan kann man hier eine ISA-IRQ-Nummer von 0 bis 15 angeben. Der 
Treiber rechnet das automatisch auf den zu benutzenden 68K-Interruptvektor 
um.

Alternativ kann direkt die 68K-Interruptvektornummer angegeben werden, 
d.h. die Vektoradresse dividiert durch 4. Da die 68K-Vektornummern 0 bis 
15 sowieso von der CPU belegt sind, stîrt die im vorigen Absatz 
beschriebene Sonderbehandlung nicht.

### Interruptsharing wird momentan nicht unterstÅtzt. In Zukunft soll ein 
Treiber alle UART-Schnittstellen bedienen, die sich den gleichen 
Interrupt teilen.

HISP
- - -
####

REPL
- - -
##### momentan funktionslos (oder geht das etwa doch wie bei MFP.PRG?)

DTR
- -
Das DTR(Data Terminal Ready)-Signal der Schnittstelle wird beim Start 
dieses Treibers einmalig auf den hier angegebenen Wert gesetzt. Eine 
Aktivierung mit "Ja" entspricht der Arbeitsweise des TOS, eine 
Deaktivierung mit "Nein" verhindert das "ungefragte" Abheben eines 
entsprechend konfigurierten Modems.

HOG
- - -
Die Grundeinstellung ist "Ja". So kann die GEMDOS-Schnittstelle mehrfach 
geîffnet werden, auch durch verschiedene Programme. Dies ist das von TOS 
her bekannte Verhalten, auf das sich einige Programme verlassen.

Mit "Nein" kann die GEMDOS-Schnittstelle ohne speziellen Wunsch der 
Programme nur genau einmal offen sein bzw. von einem Programm zur gleichen 
Zeit geîffnet werden. Dies ist bei MagiC ab Version 3 Åblich. Eine 
Programme oder Programmkombinationen kommen damit _nicht_ klar.

RBL
- -
Wenn man hiermit nichts anzufangen weiû, einfach 256 einstellen. Hier wird 
die EmpfangspufferlÑnge der Schnittstelle in Byte eingestellt. Sie darf 
maximal 65534 und minimal 16 betragen. Werte auûerhalb dieses Bereiches 
werden auf den Standardwert von 256 gesetzt. Die LÑnge wird auf eine 
gerade Zahl abgerundet. Die "Wassermarken", die die Steuerung des 
Handshakes mitbestimmen, werden generell auf 1/4 (low water mark) und 3/4 
(high water mark) gesetzt.

TBL
- - -
SendepufferlÑnge fÅr Schnittstelle, zur ErlÑuterung siehe RBL.


FÅr Programmierer: Behandlung von Empfangsfehlern
-------------------------------------------------
#### folgender Absatz stimmt so etwa, aber wohl nicht ganz ####
Der UART macht eine Fehlerbehandlung recht schwer, bzw langwierig, was die 
Datenrate senken wÅrde, wenn man seinen EmpfangsFIFO sinnvoll nutzt. 
Deshalb ist die Empfangsfehlerabfrage mit TIOCCTLGET noch _nicht_ 
implementiert. Fehlerhaft empfangene Zeichen, auûer receiver overrun, also 
parity error und frame error, werden der Einfachheit halber mit in den 
Empfangspuffer Åbernommen. Im Gegensatz dazu beseitigt der MFP-Treiber 
alle Zeichen mit Empfangsfehlern.


Versionen
---------
1998-12-31
Erste Verîffentlichung
1999-01-12
BINR in Grundeinstellung nun 7 und 8 fÅr Milan, BINR Konfig geht jetzt
1999-01-10
XON/XOFF Handshake eingebaut

Harun Scheutzow
