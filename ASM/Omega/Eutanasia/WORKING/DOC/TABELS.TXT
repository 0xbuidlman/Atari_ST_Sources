* Data Tables for Eutanasia, lastes change
* 30 10 1991
* (C) Martin Liesen 1991

**********************************************
**      OBJECT DATA
**********************************************

*  0       DC.L    ; ANI START ADDR
*  4       DC.L    ; ANI STOP ADDR
*  8       DC.W    ; ANI ADD (SPEED)
*  10      DC.W    ; 0=NO ANI 1=ANI
*  12      DC.W    ; ADD FOR ROTATION
*  14      DC.W    ; HEIGHT -1
*  16      DC.W    ; SPRITE ROUT TO USE 0=16 1=32 2=48 3=128 4=(CALC AFTER 20)
*  18      DC.W    ; NUMBER OF CRASH RECTANGELS -1
*  20      DC.W    ; NUMBER OF WORDS WIDE
*  22      DC.W    ; NR OF EXTENDED EXPLOS (-1=Normal)
*  24      DC.W    ; -- NOT USED --
*  26      DC.W    ; SHOOT X ADD
*  28      DC.W    ;       Y ADD
*  30      DC.W    ; ROTATION (0=16,1=8,2=4,3=2,4=0) (LSR TO GET RIGHT NUMBER..)
*  32      DC.W    ; EXPLOSION     X ADD
*  34      DC.W    ;               Y ADD (*160)
*  36              ; ---NOT USED---
*  64

64 REPEAT

0.w  CRASH X1
2.w  Y1*160
4.w  X2
6.w  Y2*160

NUMBER OF CRASH RECTANGELS

64+(CrasRect*8) REPEAT

0.w   AddX
2.w   AddY
4.w   Time
6.w   **Reserved**

NR OF EXTENDED EXPLOS

****************************************************
**      SPRITE DATA
****************************************************

*  0       DC.W    ; OFF/ON/ERASE ONLY
*  2       DC.W    ; X
*  4       DC.W    ; Y*160
*  6       DC.L    ; AW START
*  10      DC.L    ; AW END
*  14      DC.W    ; AW ADD (SPEED)
*  16      DC.W    ; OBJ NR
*  18      DC.W    ; SHOOTING RATE
*  20      DC.W    ; BULLET TYPE
*  22      DC.L    ; POINTER ADDR BILD DATA
*  26      DC.W    ; VBL COUNT FOR ANI (-1 NO ANI)
*  28      DC.W    ; HITS LEFT UNTIL DEATH
*  30      DC.W    ; 0 NORMAL 1=WHITE
*  32      DC.W    ; CENTRERING X
*  34      DC.W    ; CENTRERING Y*160
*  36      DC.L    ; SPRITE ADDR. WHERE INJURY WILL APPEARE
*  40      DC.L    ; ADDR TO OBJECT DATA
*  44      DC.W    ; INJURY ON PLAYER WHEN COLIDATE
*  46      DC.W    ; SPRITE FLAS
*  48      DS.B 6  ; RESERVED
*  54      BLK.B 7 ; SCORE BCD, ONE DIGIT PER BYTE
*  61      DC.B    ; -- NOT USED --
*  62      DC.L    ; OR ON STATUS WHEN ENEMY IS SHOOT DOWN
*  66      DC.L    ; AND ON STATUS WHEN ENEMY ESCAPE
*  70      DC.L    ; STATUS NEEDED TO HURT ENEMY
*  74      DC.L    ; Selfdestruct and test
*  78      DC.W    ; -- NOT USED --
*  80      DC.W    ; O-ANI nr (-1=no OANI)
*  82      DC.W    ; O-ANI pek
*  86      DC.W    ; O-ANI count (negative means new)
*  88      DC.L    ; -- NOT USED --
*  92      DC.L    ; -- NOT USED --

*  96      DC.W    ; Number of add curves (ACR) -1
*   REPEAT
*  98      DC.L    ; ACR start
*  102     DC.L    ; ACR pointer
*  106     DC.L    ; ACR end
*  110     DC.W    ; Speed
*  112
*   nr of add curves

***********************************************
**      ENEMY DATA
***********************************************

******* NORMAL SPRITE
0       DC.W    ; OBJ NR (0 JOINED SPRITE SEE SOME FUTHER 
                  DOWN, negative means O-ANI)
2       DC.W    ; * SHOOTING TYPE
4       DC.W    ; * SHOOTING RATE
6       DC.W    ; HITS BEFORE DEATH
8       DC.W    ; * X OFFSET TO ATTACK WAVE
10      DC.W    ; * Y OFFSET TO ATTACK WAVE
12      DC.W    ; * SPRITE FLAGS
14      DC.L    ; OR on status when shoot down
18      DC.L    ; AND on status if escapes
22      DC.L    ; AND test if can be shoot
26      DC.L    ; AND test for selfdestruct
20      BLK.B 7 ; SCORE BCD SYSTEM
27      DC.B    ; -- NOT USED --
28      DC.w    ; Injury On Player When Colidate



****** JOINED SPRITE
0       DC.W    0        ; JOIN MARK
2       DC.W    0        ; * SHOOTING TYPE
4       DC.W    $8000    ; * SHOOTING RATE
6       DC.W    30       ; HITS TO KILL
8       DC.W    3        ; NUMBER OF JOINED SPRITES
10      DC.W    0        ; ADD ON ATTACKWAVE PER SPRITE (FOR MASKS)
12      DC.W    20       ; INJURY ON PLAYER WHEN COLIDATE
14      BLK.B 7          ; SCORE BCD SYSTEM
21      DC.B             ; -- NOT USED --
22

*** REPEAT
0       DC.W    4        ; OBJECT NR (negative for O-ANI)
2       DC.W    -15      ; * X OFFSET TO ATTACK WAVE
4       DC.W    -24      ; * Y OFFSET TO ATTACK WAVE
6       DC.W             ; * SPRITE FLAGS
8       DC.L             ; OR on status when shoot down
12      DC.L             ; AND on status if escapes
16      DC.L             ; AND test if can be shoot
20      DC.L             ; AND test for selfdestruct
24

*** NUMBER OF JOINED SPRITES TIMES

**************************************************
**      SPRITE FLAG
**************************************************
*  BIT 0   0= BECOMES WHITE WHEN IT IS HIT
*  BIT 1   0= SPRITE DIES WHEN IT COLIDATES WITH PLAYER
*  BIT 2   0= SPRITE CAN BE SHOOT DOWN
*  BIT 3   0= Flags set if crash
*  BIT 4   0= Flags set if shoot down
*  BIT 5   0= Flags set on both players
*  BIT 6   0= White if hit, but can't be hurt
*  BIT 7   0= Dies not when crash and hit flags doesn't match
*  BIT 8
*  BIT 9
*  BIT A
*  BIT B
*  BIT C
*  BIT D
*  BIT E
*  BIT F


*******************************************
**      LOAD IMAGE MAKE
*******************************************  !
*   0       DC.W                            ; SPRITE IMAGE NR -1 INDICATES END
*   2       DC.W                            ; ROTATIONS (16,8,4,2,1)
*   4       DC.B    "SPRITE01.ENI",0,0,0,0  ; FILE NAME
*   20      DC.L 0       ; > ADDRESS TO SPRITE IMAGE
*   24      DC.W         ; COLOR ON SEKTION 1    -1=ORGINAL COLOR
*   26      DC.W         ; COLOR ON SEKTION 2    -1=ORGINAL COLOR
*   28      DC.W         ; COLOR ON SEKTION 3    -1=ORGINAL COLOR
*   30      DC.W         ; > HIGHT
*   32      DC.W         ; > WIDTH x/16
*   34      DC.W         ; > LENGHT OF ONE ROTATION
*   36      DC.W         ; > LENGHT OF ONE CELL
*   38      DC.W         ; > NUMBER OF CELLS
*   40              ; -- NOT USED --
*   64

********************************************
**      SEQUENSER OBJECT MAKE
********************************************  !
*   0       DC.W    ; SPRITE IMAGE TO USE   -1 INDICATES END OF "OBJECT MAKE"
*   2       DC.W    ; NUMBER OF CRASH RECTANGELS (NORMALY 1)
*   4       DC.W    ; MIDPOINT      ADD X
*   6       DC.W    ;               ADD Y
*   8       DC.W    ; BULLET        ADD X
*   10      DC.W    ;               ADD Y
*   12      DC.W    ; EXPLOSION     ADD X
*   14      DC.W    ;               ADD Y
*   16      DC.W    ; ANI SPEED     (0=NO ANI)
*   18      DC.W    ; ANI TYPE
*   20      DC.W    ; SPRITING TYPE (-1 SET AFTER WIDTH) SEE 16 OBJTAB
*   22              ; -- NOT USED --
*   32

** REPEAT
*   0       DC.W    ; CRASH X1
*   2       DC.W    ;       Y1
*   4       DC.W    ;       X2
*   6       DC.W    ;       Y2
** NR OF CRASH REKTANGELS


***********************************************
**      PLAYER LOAD FILE
***********************************************
*  0      ds.b 16         ; Name of .PLY file
*  16     ds.w 1          ; **Reserved** (ply col 1)
*  18     ds.w 1          ; **Reserved** (2)
*  20     ds.w 1          ; **Reserved** (3)
*  22     ds.b 16         ; Name of .BOO file
*  38     ds.w 1          ; **Reserved** (boo col 1)
*  40     ds.w 1          ; **Reserved** (2)
*  42     ds.w 1          ; **Reserved** (3)
*  44     ds.w 1          ; Lowest X for player
*  46     ds.w 1          ; Lowest Y for player
*  48     ds.w 1          ; Highest X for player
*  50     ds.w 1          ; Highest Y for player
*  52     ds.w 1          ; Mid X
*  54     ds.w 1          ; Mid Y
*  56     ds.w 1          ; Player crash low X
*  58     ds.w 1          ; Player crash low Y
*  60     ds.w 1          ; Player crash high X
*  62     ds.w 1          ; Player crash high Y
*  64     ds.w 1          ; Boost Pos (down) Left  X
*  66     ds.w 1          ; Boost Pos (down) Left  Y
*  68     ds.w 1          ; Boost Pos (down) right  X
*  70     ds.w 1          ; Boost Pos (down) right  Y

***********************************************
**      WEAPON LOOK TAB  (48 Bytes)
**
**      used for knowig what weapons that's
**      already rotated and the data about them
***********************************************
*                dc.l 0          ; 0   Address to image       (comp)
*                dc.w 0          ; 4   Hight                  (comp)
*                dc.w 0          ; 6   Rotations
*                dc.w 0          ; 8   Rotations as LSR       (comp)
*                dc.w 0          ; 10  Sprite rout to use     (comp)
*                dc.w 0          ; 12  width in words         (comp)
*                dc.w 0          ; 14  col section 1
*                dc.w 0          ; 16  col section 2
*                dc.w 0          ; 18  col section 3
*                dc.w 0          ; 20  add for next rotation  (comp)
*                dc.w 0          ; 22  add for next animation (comp)
*                ds.b 14         ; 24  FileName to weapon
*
*                ds.b 48-38


***********************************************
**      WEAPON CREATE TAB  (32 Bytes)
**
**      level dependig tabell, says what weapon
**      that's to be used on a specifican player
***********************************************
*                dc.w 0          ; 0   Weapon Look to use
*                dc.l W_INIT_1   ; 2   Init rout
*                dc.l W_MOVE_1   ; 6   Move rout
*                dc.l W_NEW__1   ; 10  New rout
*                dc.l W_DRAW_1   ; 14  Draw rout
*
*                ds.b 32-18
 
 




