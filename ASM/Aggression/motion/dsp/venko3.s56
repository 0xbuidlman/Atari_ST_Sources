; Kuvavenko dsp partti.. WizTom of AGGRESSION
; ilman y kertoa..

PBC	equ	$ffe0
HSR	equ	$ffe9
HTX	equ	$ffeb


	org	p:$0
	jmp	start

	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0,0,0,0,0,0,0
	dc	0,0,0,0

start	
	movep	#0,x:$fffe
	move	#>$babe,x0
x_ready	jclr	#1,X:HSR,x_ready
	move	x0,X:HTX		



kasky	movep	#1,X:PBC		
	jclr	#0,x:HSR,kasky
	move	x:HTX,a
	tst	a	#>1,x0
	jeq	key0			;venkoa
	sub	x0,a
	jeq	key1			;feed size,bases,steps,mods
	sub	x0,a
	jeq	key2			;feed curves
	sub	x0,a
	jeq	key3			;feed gfx

	jmp	start
;-------------------------------
key0
	move	x:base_0,r0
	move	x:base_1,r1
	move	x:base_2,r2
	move	x:base_3,r3
	move	x:base_4,r4
	move	x:base_5,r5
	move	r4,x:base_4b
	move	x:base_6,r6
	move	x:base_7,r7
	move	x:step_0,n0
	move	x:step_1,n1
	move	x:step_2,n2
	move	x:step_3,n3
	move	x:step_5,n5
	move	x:step_6,n6
	move	x:step_7,n7
	move	x:mod_0,m0
	move	x:mod_1,m1
	move	x:mod_2,m2
	move	x:mod_3,m3
	move	x:mod_5,m5
	move	x:mod_6,m6
	move	x:mod_7,m7
	move	#>16383,y0
	move	x:y_size,x0
	do	x0,yloop
	move	x:x_size,x0
	do	x0,xloop
;----
	move	x:(r5),a
	move	x:(r6)+n6,x0
	add	x0,a	x:(r7)+n7,x0
	add	x0,a	x:(r0)+n0,x0
	add	x0,a	x:(r1)+n1,x0
	add	x0,a	x:(r2)+n2,x0
	add	x0,a	
	and	y0,a			;mask range
	move	a1,r4
	nop
	move	y:(r4),x0

write	jclr	#1,X:HSR,write
	move	x0,X:HTX		
xloop
;----
	move	(r5)+n5
	move	x:base_0,a
	move	x:(r3)+n3,x0
	add	x0,a
	move	a1,r0

	move	x:mod_4,m4
	move	x:step_4,n4
	move	x:base_4b,r4
	move	x:base_1,a
	move	x:(r4)+n4,x0
	move	r4,x:base_4b
	add	x0,a
	move	a1,r1

	move	x:base_2,r2	
	move	x:base_6,r6	
	move	x:base_7,r7	
	nop
	nop
yloop
;----
	jmp	start
;------------------------------------
key1
	move	#x_size,r0
	move	#$ffff,m0	
	do	#26,zeek
ra	movep	#1,X:PBC	;get x/y size,rx,nr,mr
	jclr	#0,x:HSR,ra
	move	x:HTX,x0
	move	x0,x:(r0)+
zeek
	jmp	start
;------------------------------------
key2
qa	movep	#1,X:PBC		
	jclr	#0,x:HSR,qa	;base x:rammissa
	move	x:HTX,r0

qb	movep	#1,X:PBC		
	jclr	#0,x:HSR,qb	;pituus
	move	x:HTX,x0

	move	#$ffff,m0
	do	x0,qd
qc	movep	#1,X:PBC		
	jclr	#0,x:HSR,qc	;fill
	move	x:HTX,x:(r0)+
	nop
qd
	jmp	start
;------------------------------------
key3
	move	#0,r0
	move	#>128*128,x0
	do	x0,filler
getpix	movep	#1,X:PBC		
	jclr	#0,x:HSR,getpix	;base x:rammissa
	move	x:HTX,y:(r0)+
filler
	jmp	start
;------------------------------------
;read_one
;	movep	#1,X:PBC		
;	jclr	#0,x:HSR,read_one
;	move	x:HTX,a1
;
;write_one
;	jclr	#1,X:HSR,write_one
;	move	a1,X:HTX		
;---------------------------------
	org	x:$0
x_size	ds	1
y_size	ds	1

base_0	ds	1	;r-reg base
base_1	ds	1
base_2	ds	1
base_3	ds	1
base_4	ds	1
base_5	ds	1
base_6	ds	1
base_7	ds	1

step_0	ds	1	;n-reg
step_1	ds	1
step_2	ds	1
step_3	ds	1
step_4	ds	1
step_5	ds	1
step_6	ds	1
step_7	ds	1

mod_0	ds	1
mod_1	ds	1
mod_2	ds	1
mod_3	ds	1
mod_4	ds	1
mod_5	ds	1
mod_6	ds	1
mod_7	ds	1

base_4b	ds	1
	end

