Alain BROBECKER				Dracula of Positivity.
rte de Dardagny
 01630 CHALLEX
    FRANCE
    
  Ok, I just add this text to explain you the methods used in this demo.
( In case you are interested. )

  For the texture mapping+shading, the idea is that the blitter of the
STe can pick a vertical line in a block, put it in another position
in the word ( with the skew register ) and isolate it from all the
others lines of the block. ( With the mask. ) So the blitter allows
you to copy a single line even if it's in a block, and not at the
good position.
  Then I had the idea to have all the y-zoom already done, so when
I draw a "mapped" line I simply have to see what is its height and
then make a copy.
  The shading is then very simple ( I wonder how I can be the first
to do this considering the big amount of top-coders who own a ST. )
because when a line has a size decreasing, its luminosity also
decreases. So I simply have to do the pre-shade when I do the pre-zoom.
  The x zooming is made realtime.
  With this method I have exactly 96000 bytes of precalcs per image,
and that's not too much considering the good resolution, changing
from all the big squares...
  A good way to understand this quickly is to take your cartridge
( if any ) and view the memory. ( With a 80 pixels, 4 planes screen. )

  For the skullsphere, the only interesting thing is that I did a
"sort" of the skulls in o(n). ( If you don' t understand this, then
pick up copies of the DNT papers... ) I just consider that there
are N possible distances for the vectorskulls, and that there is
always less than M skulls per distance. ( M is 2^m-1 alike. )
  This given, I make N mini arrays, each with a counter and with
2^m-1 set of coords. ( Then each mini array as a length like 2^y )
Then quite simply, when I calculate the coords (x;y;z) of a skull,
I put the (x;y) set in the mini array number z ( with a z*2^y operation
which is also a lsl  #$y,z ) , I increase the mini array counter
and then the skulls are sorted...

  Well, I think nothing else is interesting, but you should know that
I found all the tricks and hints by my own has I lack of code contacts,
and that it's sometimes hard to improve some routine without a lot
experience, so I'm sure you will make much better, and I hope you will
send me your products...

  If you are a really good coder, ( and there are a lot of them on ST. )
please always think to learners ( and each coder is a "learner", even
a really good one. ) and help them. I hope that giving my sources
like I always do will help some people. Then, why don' t you make
the same, or write articles in Diskmags, or help some guys to
learn assembly, ( Lots of thanks Survivor for getting me started
with 68000!... ) or whatever you want if it's coOOol... 

                           So long, and thanks for the fish...
                                        Dracula.
