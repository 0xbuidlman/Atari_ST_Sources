	output d:\assemble\sources.v45\rotozoom\rotozoom.acx

OPT_GWVA_DEBUG_ERROR			; [option][root] generates an illegal when something goes wrong (for debugging purposes)
OPT_GWVA_DEBUG_PRINT_COMMENTS		; [option][root] print comments/warnings when assembling source

*OPT_GWVA_DEBUG_SEARCH_EXEC		; [option][root] is needed to do any log alert_box/logger
*OPT_GWVA_DEBUG_SEARCH_EXEC_IN_ALERT_BOX	; [option][root][LIB_HEXA][LIB_DECI][OPT_GWVA_DEBUG_SEARCH_EXEC] prints an alert box at each method distribution
*OPT_GWVA_DEBUG_SEARCH_EXEC_IN_LOGGER	; [option][root][LIB_HEXA][LIB_DECI][OPT_GWVA_DEBUG_SEARCH_EXEC] prints in log window each method distribution
*LIB_HEXA				; [none]
*LIB_DECI				; [none]

*GWVA_DEBUG_MSG_MAX_SIZE = 256		; [var] defines the debug message max length (generated by SEARCH_EXEC)
*GWVA_DEBUG_MAX_MSG_DEBUG_PENDING = 64	; [var] how many debug messages can be sent in a row

*PATCH_GWVA_ROOT_GEM_MESSAGE_PADDED16	; [option][MDL_GEM] aligns automatically the length of outgoing messages on multiple of 16 bytes

PATCH_GWVA_WFORM_CUSTOM_EDITABLE_TEXT	; [option][MDL_WIND_FORM] patches the behaviour of objc_edit to have smart cursor redraw and extended capabilities

PATCH_GWVA_ROOT_GEM_EVNT_BTON_MB_0		; [option][MDL_GEM] patches the fact that a double event (message+bton) gives mouse_button=0

OPT_FULL_PATHNAMES
*OPT_DEBUG_IN_ACCESSORY_MODE
*OPT_DEBUG

	lea objet_application,a1

	include rotozoom.def
	include visual45.s
	include rotozoom.hs
	include rotozoom.obj

	comment HEAD=7
	section TEXT

*------------------------------------------------------------------------------
custom_inits:
	tst GWVA_ROOT_IS_ACC_PRG
	beq.s .acc

	bfset GWVA_WIND_OBJ_PROPERTIES(a0){GWVA_WIND_OLBIT_AMENU:1}	; menu principal
	bfset GWVA_WAPP_OBJ_PROPERTIES(a0){GWVA_WAPP_OLBIT_BACKGROUND:1}	; fond
	bfset GWVA_WAPP_OBJ_PROPERTIES(a0){GWVA_WAPP_OLBIT_BACKGROUND_CENTER:1}	; fond centr‚

.acc:	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

;------------------------------------------------------------------------------
acc_open:
menu_open:	
	cmp.w #8,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	beq.s .resolut_8bitpixel
	cmp.w #16,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	bne.s .pas8_ni_16bits_pixel
.resolut_8bitpixel:


	lea objet_fenetre1,a0
	bsr GWVA_WIND_CREATE_OPEN_ONE_WIND

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

.pas8_ni_16bits_pixel:
	move #ALERT_NO_16_8BIT,d0
	move #1,d1
	bsr GWVA_RSC_ALERT_BOX
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

menu_info:	lea objet_fenetre_info,a0
	bsr GWVA_WIND_CREATE_OPEN_ONE_WIND
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

menu_quit:
app_term:
acc_close:
	; quoi qu'il arrive, il y a 1 delete all win

	bsr GWVA_ROOT_KILL_APPLICATION

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

;------------------------------------------------------------------------------
wind1_bton_ok_click:

	save.l a1

	move.w #FORM_SIZE_XY,d0
	move.w #FSXY_TEXT_WIDTH,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	move.l a1,a0
	clr.b d0
	bsr GWVA_DECI2VALUE
	move.w d1,roto_zoom_w

	move.w #FORM_SIZE_XY,d0
	move.w #FSXY_TEXT_HEIGHT,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	move.l a1,a0
	clr.b d0
	bsr GWVA_DECI2VALUE
	move.w d1,roto_zoom_h

	load.l a0

	bsr GWVA_WIND_DELETE_ONE_WIND	; nous meme

	lea objet_fenetre2,a0		; l'autre

	bsr GWVA_ROOT_TEST_IF_OBJECT_CREATED
	cmp.w #GWVA_NO_ERROR_GENERIC,d7
	bne .erreur_objet_pas_encore_cree

*	bsr GWVA_WIND_DELETE_ONE_WIND	; ceci ne marche pas car il est pip‚
	GWVA_CALL_METHOD_OTHER_OBJ	#GWVA_METHOD_DELETE
.erreur_objet_pas_encore_cree:

	lea objet_fenetre2,a0
	move.l roto_zoom_w,GWVA_WBITM_OBJ_IMG_WIDTH(a0)
	move.w GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2,GWVA_WBITM_OBJ_NB_BITPLANES(a0)
	clr.l GWVA_WBITM_OBJ_AFF_DX(a0)
	move.l roto_zoom_w,GWVA_WIND_OBJ_FIRST_INT_VISIBLE_W(a0)
	move.w roto_zoom_w,d0
	mulu roto_zoom_h,d0

	move.w GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2,d1
	ext.l d1
	mulu.l d1,d0
	divu.l #8,d0	; taille du buffer en octet
	move.l d0,d1

	save.l d1/a0
	MXALLOC #MX_PREFTTRAM,d0
	load.l d1/a0
	tst.l d0
	beq .pas_de_memoire

	move.l d0,GWVA_WBITM_OBJ_DATA_PTR(a0)

	move.l d0,a2
.clear_buf:	clr.b (a2)+
	sub.l #1,d1
	bne.s .clear_buf

	lea objet_fenetre2,a0
	bsr GWVA_WIND_CREATE_OPEN_ONE_WIND

.pas_de_memoire:
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

wind1_bton_annule_click:
	move.l a1,a0
	bsr GWVA_WIND_DELETE_ONE_WIND

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

;------------------------------------------------------------------------------

initialisation_fenetre:
	clr.l d0
	GWVA_CALL_METHOD_DIFF_METH_SAME_CLASS #GWVA_METHOD_UNREGISTER_TIMER

	save.l a0

	lea filename_tab_zoom,a0
	move.w #MX_PREFTTRAM,d0
	bsr GWVA_FILE_LOAD_IN_MEM
	tst.l d0
	ble .erreur_loading_components
	move.l a0,ptr_load_tab_zoom
	add.l d0,a0
	move.l a0,ptr_fin_tab_zoom

	load.l a0

	cmp.w #16,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	bne.s .pas16bitpixel

	save.l a0

	lea filename_map_TC,a0
	move.w #MX_PREFTTRAM,d0
	bsr GWVA_FILE_LOAD_IN_MEM
	tst.l d0
	ble .erreur_loading_components
	move.l a0,ptr_load_map_TC

	load.l a0

	save.l a0
	movem.w roto_zoom_w,d0/d1
	move.l GWVA_WBITM_OBJ_DATA_PTR(a0),a0
	bsr ROTO_INIT
	load.l a0

	bra .fin_initialisation_fenetre
.pas16bitpixel:

	cmp.w #8,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	bne .pas8bitpixel

	save.l a0

	lea filename_palette_256,a0
	move.w #MX_PREFTTRAM,d0
	bsr GWVA_FILE_LOAD_IN_MEM
	tst.l d0
	ble .erreur_loading_components
	move.l a0,ptr_load_palette_256

	lea filename_map_256,a0
	move.w #MX_PREFTTRAM,d0
	bsr GWVA_FILE_LOAD_IN_MEM
	tst.l d0
	ble .erreur_loading_components
	move.l a0,ptr_load_map_256

	load.l a0

	move.l ptr_load_palette_256,GWVA_WBITM_OBJ_PAL_PTR(a0)

	move.w roto_zoom_w,d0
	mulu roto_zoom_h,d0

	move.w GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2,d1
	ext.l d1
	mulu.l d1,d0
	divu.l #8,d0	; taille du buffer en octet

	save.l a0
	MXALLOC #MX_PREFTTRAM,d0
	load.l a0
	tst.l d0
	beq.s .pas_de_memoire

	save.l a0
	move.l d0,a1
	move.l d0,buffer_sup
	movem.w roto_zoom_w,d0/d1
	move.l GWVA_WBITM_OBJ_DATA_PTR(a0),a0
	bsr ROTO_INIT_256
	load.l a0
.pas8bitpixel:
.fin_initialisation_fenetre

	move.l #GWVA_METHOD_TIMER,d0
	move.l #1,d1
	move.w #GWVA_ROOT_MASK_TIMER_REARM,d2
	GWVA_CALL_METHOD_DIFF_METH_SAME_CLASS #GWVA_METHOD_REGISTER_TIMER

.pas_de_memoire:
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

.erreur_loading_components:
	load.l a0
	bsr FREE_ALL_MEM

	move #ALERT_FILENOTFND,d0
	move #1,d1
	bsr GWVA_RSC_ALERT_BOX
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

FREE_ALL_MEM:
	MFREE buffer_sup
	clr.l buffer_sup
	MFREE ptr_load_palette_256
	clr.l ptr_load_palette_256
	MFREE ptr_load_map_TC
	clr.l ptr_load_map_TC
	MFREE ptr_load_map_256
	clr.l ptr_load_map_256
	MFREE ptr_load_tab_zoom
	clr.l ptr_load_tab_zoom

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

close_fenetre_rotozoom:
	bsr FREE_ALL_MEM
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

	;----------------------------------------------

event_timer_rotozoom:
	bsr GWVA_WIND_TEST_IF_WIND_OPENED
	cmp.w #GWVA_NO_ERROR_GENERIC,d7
	bne.s .pas_de_fenetre

	cmp.w #16,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	bne.s .pas16bitpixel

	save.l a0
	bsr ROTOZOOM
	load.l a0

	bra.s .update_window
.pas16bitpixel:

	cmp.w #8,GWVA_ROOT_VDI_WORKSTATION_EXTD+4*2
	bne.s .pas8bitpixel

	save.l a0
	bsr ROTOZOOM_256
	load.l a0

.pas8bitpixel:

.update_window:

	GWVA_CALL_METHOD_OTHER_OBJ #GWVA_METHOD_WIND_REDRAW_ALL_CONTENTS
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

.pas_de_fenetre:
	clr.l d0
	GWVA_CALL_METHOD_DIFF_METH_SAME_CLASS #GWVA_METHOD_UNREGISTER_TIMER
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

*---------------------------------------------------------------------

	include visuroto.s

*---------------------------------------------------------------------

	section DATA

	ifnd OPT_FULL_PATHNAMES
filename_palette_256:	dc.b 'pal_256.bin',0
filename_map_TC:	dc.b 'map.bin',0
filename_map_256:	dc.b 'map_256.bin',0
filename_tab_zoom:	dc.b 'tab_zoom.bin',0
	else
filename_palette_256:	dc.b 'd:\assemble\sources.v45\rotozoom\pal_256.bin',0
filename_map_TC:	dc.b 'd:\assemble\sources.v45\rotozoom\map.bin',0
filename_map_256:	dc.b 'd:\assemble\sources.v45\rotozoom\map_256.bin',0
filename_tab_zoom:	dc.b 'd:\assemble\sources.v45\rotozoom\tab_zoom.bin',0
	endc

;------------------------------------------------------------------------------

	section BSS

roto_zoom_w:	ds.w 1
roto_zoom_h:	ds.w 1
buffer_sup:		ds.l 1

ptr_load_palette_256:	ds.l 1
ptr_load_map_TC:	ds.l 1
ptr_load_map_256:	ds.l 1
ptr_load_tab_zoom:	ds.l 1
ptr_fin_tab_zoom:	ds.l 1	; calcul‚

 END
