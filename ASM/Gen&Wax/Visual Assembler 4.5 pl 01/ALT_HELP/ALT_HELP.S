	output d:\assemble\sources.v45\alt_help\alt_help.app

OPT_GWVA_DEBUG_ERROR			; [option][root] generates an illegal when something goes wrong (for debugging purposes)
OPT_GWVA_DEBUG_PRINT_COMMENTS		; [option][root] print comments/warnings when assembling source

*OPT_GWVA_DEBUG_SEARCH_EXEC		; [option][root] is needed to do any log alert_box/logger
*OPT_GWVA_DEBUG_FILTER	 		; [var] filters debug messages to those in the list defined by OPT_GWVA_DEBUG_FILTER_PTR
*OPT_GWVA_DEBUG_FILTER_PTR		; [var] pointer to the list of the GWVA_OBJ_NAME of objects to debug (end with 0.l)
*OPT_GWVA_DEBUG_FILTER_0NAMES	 	; [option][root][OPT_GWVA_DEBUG_SEARCH_EXEC] filters debug messages for all objets having a 0.L in GWVA_OBJ_NAME
*OPT_GWVA_DEBUG_SEARCH_EXEC_IN_ALERT_BOX	; [option][root][LIB_HEXA][LIB_DECI][OPT_GWVA_DEBUG_SEARCH_EXEC] prints an alert box at each method distribution
*OPT_GWVA_DEBUG_SEARCH_EXEC_IN_LOGGER	; [option][root][LIB_HEXA][LIB_DECI][OPT_GWVA_DEBUG_SEARCH_EXEC][GWVA_DEBUG_MSG_MAX_SIZE][GWVA_DEBUG_MAX_MSG_DEBUG_PENDING] prints in log window each method distribution
*GWVA_DEBUG_MSG_MAX_SIZE = 256		; [var] defines the debug message max length (generated by SEARCH_EXEC)
*GWVA_DEBUG_MAX_MSG_DEBUG_PENDING = 64	; [var] how many debug messages can be sent in a row


OPT_FULL_PATHNAMES

DEBUT_TSR:	lea objet_application,a1

	include alt_help.def
	include visual45.s
	include alt_help.hs
	include alt_help.obj

	comment HEAD=7
	section TEXT

*-------------------------------------------------------------------------*

	; Alt + Help
	; (c) Wax 19 / XI / 1995
	; Cod‚ en 2 heures top chrono en VA 4.0
	; revu le 18/5/97 pour PB Apex 256 coul

	; pass‚ en V.A 4.5 le 27/11/98

*-------------------------------------------------------------------------*

my_inits:	tst GWVA_ROOT_IS_ACC_PRG
	beq .no_acc_run

	lea save_defaultname,a0
	lea save_filename,a1
	COPY_STRING_0 a0,a1

	lea save_defaultname,a1		; buffer source
	move #FORM_DIALOG,d0		; No pŠre
	move #FD_TEXT_SELECT_F,d1	; No fils
	move #GWVA_CFCBUF_ALIGN_RIGHT,d2	; justifi‚ droite
	move #GWVA_CFCBUF_REDRAW_NO,d3	; pas de redraw

	bsr GWVA_NO_FSEL_CP_BSS_UPDATE_FORM

	lea objet_fenetre_main,a0
	bsr GWVA_WIND_CREATE_OPEN_ONE_WIND

	cmp.w #GWVA_NO_ERROR_GENERIC,d7
	bne.s app_term

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

.no_acc_run:move #ALERT_NO_ACC_RUN,d0
	move #1,d1
	bsr GWVA_RSC_ALERT_BOX
	bra GWVA_INFINITE_LOOP

*-------------------------------------------------------------------------*

click_bton_cancel:
app_term:
event_window_main_closed:
fenetre_generic_control_u:
fenetre_generic_control_q:

	bsr GWVA_ROOT_KILL_APPLICATION
	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

*-------------------------------------------------------------------------*

click_bton_choose:
	lea choose_file,a0		; 35 chars max.
	lea mask_everything,a1		; 18 caracteres max
	lea save_filename,a2		; A:\TEMP\ ou #0.l
	lea save_filename,a3		; o— stocker nouveau
	lea objet_fenetre_main,a4	; fenˆtre du redraw
	move #FORM_DIALOG,d0		; No pŠre ou -1
	move #FD_TEXT_SELECT_F,d1	; No fils
	move #GWVA_CFCBUF_ALIGN_RIGHT,d2	; justifi‚ droite
	move #GWVA_CFCBUF_COPY_PATHNAME,d3	; all pathname

	bsr GWVA_CALL_FSEL_CP_BSS_UPDATE_FORM

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

*-------------------------------------------------------------------------*

fin_erreur:	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

click_bton_ok:
	move.l #"AltH",GWVA_ROOT_SEARCH_IN_OUT
	SUPEXEC GWVA_COOKIE_SEARCH_ONE_COOKIE
	tst.l GWVA_ROOT_SEARCH_IN_OUT
	beq.s .no_alt_help_present

	move #ALERT_ALREADY_IN,d0
	move #1,d1
	bsr GWVA_RSC_ALERT_BOX

	bra fin_erreur

.no_alt_help_present:
	move #FORM_DIALOG,d0
	move #FIELD_SCREEN_X,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,scr_size_x

	move #FORM_DIALOG,d0
	move #FIELD_SCREEN_Y,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,scr_size_y

	move #FORM_DIALOG,d0
	move #FIELD_SCREEN_NBP,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,scr_nbbp
	beq fin_erreur

	move #FORM_DIALOG,d0
	move #FIELD_GRAB_X,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,grab_size_x

	move #FORM_DIALOG,d0
	move #FIELD_GRAB_Y,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,grab_size_y

	move #FORM_DIALOG,d0
	move #FIELD_GRAB_W,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,grab_size_w
	beq fin_erreur

	move #FORM_DIALOG,d0
	move #FIELD_GRAB_H,d1
	bsr GWVA_RSC_RETURN_PTR_ON_TEXT
	clr.b d0
	move.l a1,a0
	bsr GWVA_DECI2VALUE
	move d1,grab_size_h
	beq fin_erreur

	move struct_bton_onetwo+GWVA_FBTON_OBJ_STATE,flag_2_files

	lea save_filename,a0
.fend:	tst.b (a0)+		; . R A W 0 x
	bne.s .fend
	cmp.l #'.RAW',-5(a0)
	bne click_bton_choose

	cmp.b #'*',-6(a0)
	beq click_bton_choose
	cmp.b #'?',-6(a0)
	beq click_bton_choose
	cmp.b #'\',-6(a0)
	beq click_bton_choose

	move grab_size_y,d0
	add grab_size_h,d0
	cmp scr_size_y,d0
	bgt fin_erreur

	move grab_size_x,d0
	add grab_size_w,d0
	cmp scr_size_x,d0
	bgt fin_erreur

	move.l #'AltH',GWVA_ROOT_SEARCH_IN_OUT
	move.l #cookie_struct,GWVA_ROOT_SEARCH_IN_OUT+4
	SUPEXEC GWVA_COOKIE_INSTALL_ONE_COOKIE

	tst.l GWVA_ROOT_SEARCH_IN_OUT
	beq.s .could_not_install

	move.l #FIN_TSR-DEBUT_TSR+L_BASEPAGE+4,objet_application+GWVA_WAPP_OBJ_TSR_SIZE

	SUPER 0
	move.l $70,old_vbl
	move.w sr,-(sp)
	move.w #$2700,sr
	move.l #my_vbl,$70
	move.w (sp)+,sr
	USER

	bsr GWVA_ROOT_KILL_APPLICATION

	moveq #GWVA_PRGRET_CONSUMED,d6
	rts

.could_not_install:
	move #ALERT_NOT_INSTAL,d0
	move #1,d1
	bsr GWVA_RSC_ALERT_BOX
	bra fin_erreur

;///////////////////////////// Le r‚sident //////////////////////////////////

my_vbl:	tst.w _prt_cnt	; incr‚ment‚ lorsqu'on appuie sur alt+help
	beq.s RAZ

	move.l old_vbl(pc),-(sp)     ; voir article
	rts

RAZ:	move.w sr,-(sp)	; on sauvegarde SR
	move.w #$2700,sr	; on coupe les interrups.
	save.l d0-a6

	appel xbios,physbase,2	; ad. ‚cran

	move.l d0,a6	; on la met dans a6

	btst #0,flag_2_files+1
	beq.s .1file

	lea save_filename,a0
.fend:	tst.b (a0)+		; . R A W 0 x
	bne.s .fend
	move.l #'.BIN',-5(a0)

.1file:	FILE_OPEN write,save_filename,d7

	move grab_size_h,d6
	subq #1,d6

	move scr_size_x,d0
	mulu scr_nbbp,d0
	divu #8,d0
	mulu grab_size_y,d0
	add.l d0,a6		; pointe sur la premiŠre ligne

	move grab_size_x,d0
	mulu scr_nbbp,d0
	divu #8,d0
	add.w d0,a6

.all_lines:
	move grab_size_w,d0
	mulu scr_nbbp,d0
	divu #8,d0
	ext.l d0

	FWRITE a6,d0,d7	; on ‚crit l'image.

	move scr_size_x,d0
	mulu scr_nbbp,d0
	divu #8,d0
	add.w d0,a6

	dbf d6,.all_lines

	cmp #16,scr_nbbp
	beq true_color

	btst #0,flag_2_files+1
	beq.s .1file2

	FCLOSE d7

	lea save_filename,a0
.fend2:	tst.b (a0)+		; . R A W 0 x
	bne.s .fend2
	move.l #'.PAL',-5(a0)

	FILE_OPEN write,save_filename,d7

.1file2:	pea save_pal
	move scr_nbbp,d1
	moveq #1,d0
	lsl.l d1,d0
	move d0,-(sp)
	clr -(sp)
	appel xbios,vgetrgb,10	; get palette

	move scr_nbbp,d1
	moveq #4,d0
	lsl.l d1,d0
	FWRITE #save_pal,d0,d7	; on ‚crit la palette.

true_color:	FCLOSE d7

	lea save_filename,a0
.fend3:	tst.b (a0)+		; . R A W 0 x
	bne.s .fend3
	add.b #1,-6(a0)	; incr‚ment le nom de fichier

	MOVE.W #$FFFF,_prt_cnt	; voir article 
     
	move.w #-1,-(sp)
	appel bios,kbshift,4	; ‚tat des touches sp‚ciales

	bclr #3,d0
	move.w d0,-(sp)
	appel bios,kbshift,4	; on d‚sactive alternate

	load.l d0-a6

	move.w (sp)+,sr	; on r‚tablit les interruptions
	move.l old_vbl(pc),-(sp)	; voir article
	rts

*-------------------------------------------------------------------------*

	section DATA
cookie_struct:
	dc.l '1.00'			; version

choose_file:	dc.b 'Enter generic name :',0
mask_everything:	dc.b '*.RAW',0
save_defaultname:	dc.b 'A:\ALT_HLP0.RAW',0

*-------------------------------------------------------------------------*

	section BSS

old_vbl:		ds.l 1	

flag_2_files:	ds.w 1	; bit 0 = 1 si 2 fichiers

scr_size_x:		ds.w 1
scr_size_y:		ds.w 1
scr_nbbp:		ds.w 1
grab_size_x:	ds.w 1
grab_size_y:	ds.w 1
grab_size_w:	ds.w 1
grab_size_h:	ds.w 1

save_pal:		ds.l 256

save_filename:	ds.b GWVA_ROOT_MAX_PATH_LENGTH

FIN_TSR:
 END
