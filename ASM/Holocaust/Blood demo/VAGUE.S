;Effet de 'vague' inspirÇ d'un effet codÇ par le groupe Lazer sur Falcon.
;Vous pouvez comparer les 2 versions..................no comment!!
;
;Code by Elric/Holocaust.

MAIN	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.W	#6,SP

	CLR	-(SP)
	PEA	-1.W
	PEA	-1.W
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	12(SP),SP
	CLR.B	$FFFFFA07.W
	CLR.B	$FFFFFA09.W
	MOVEQ	#1,D0
	JSR	MUS
	LEA	MUS+8,A0
	JMP	HOP
MUS	INCBIN	ZIK.ZIK

HOP	MOVE.L	A0,MODZIK+2
	MOVEQ	#0,D0
	MOVE.L	D0,$FFFF8240.W
	MOVE.L	D0,$FFFF8244.W
	MOVE.L	D0,$FFFF8248.W
	MOVE.L	D0,$FFFF824C.W
	MOVE.L	D0,$FFFF8250.W
	MOVE.L	D0,$FFFF8254.W
	MOVE.L	D0,$FFFF8258.W
	MOVE.L	D0,$FFFF825C.W

	MOVE.L	#BUFFER,D0
	CLR.B	D0
	MOVE.L	D0,SCREEN1
	ADDI.L	#32000+15360+1280*2,D0
	MOVE.L	D0,SCREEN2
	MOVE.L	SCREEN1,A1
	MOVE.L	SCREEN2,A2
	MOVE	#7999,D7
.KILL_EM	CLR.L	(A1)+
	CLR.L	(A2)+
	DBF	D7,.KILL_EM
	MOVE.L	#VBL_DêB,$70.W

	BSR	PREPARE_CODE
	MOVE.L	#INCREMENTS,PT_INC

	MOVE.L	#VBLR,$70.W
	CLR	TIME

BOUCLE	BRA.S	BOUCLE
	MOVE.L	#INTER_RTE,$70.W
J	JMP	J
INTER_RTE	RTE
TIME	DC	0
ZIK	MOVEM.L	D0-A6,-(SP)
MODZIK	JSR	$12345678
	MOVEM.L	(SP)+,D0-A6
	RTS
VBL_DêB	MOVEM.L	D0-A6,-(SP)
	MOVE	#$001,$FFFF8240.W
	MOVE.W	#$666,$FFFF8244.W
	MOVE.W	#$666,$FFFF8246.W
	MOVE.W	#$666,$FFFF824E.W
	MOVE.W	#$666,$FFFF8254.W
	MOVE.W	#$666,$FFFF8256.W
	MOVE.W	#$666,$FFFF825E.W
	MOVE	#$001,$FFFF8242.W
	MOVE	#$001,$FFFF8250.W
	;MOVE.W	#$212,$FFFF8242.W
	;MOVE.W	#$212,$FFFF8250.W
	CMPI	#20,TIME
	BLE	KEUD

	CMPI	#50+20,TIME
	BGT.S	NO1
	LEA	GFX,A1
	MOVE.L	SCREEN1,A0
	LEA	12*8(A0),A0
MOD1	LEA	-160*20(A0),A0
	MOVE	#15,D7
.AF1
N	SET	0
	REPT	8
	MOVE	(A1)+,N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.AF1
NO1	TST	MOD1+2
	BEQ.S	.NO2
	ADD	#160,MOD1+2
.NO2
POUET
	CMPI	#50+40,TIME
	BLE.S	NO1B
	LEA	GFX+8*2*16,A1
	MOVE.L	SCREEN1,A0
MOD2	LEA	160*200(A0),A0
	MOVE	#20-1,D7
.AF1
N	SET	0
	REPT	8
	MOVE	(A1)+,N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.AF1
	CMPI	#160*180,MOD2+2
	BEQ.S	.NO2
	SUB	#160,MOD2+2
.NO2
NO1B
KEUD	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2

	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME	JSR	ZIK
	ADDQ	#1,TIME
	MOVEM.L	(SP)+,D0-A6
	RTE
FAD_END	DC	$001,$012,$012,$012,$012,$023
	DC	$1234
VBL_END	MOVEM.L	D0-A6,-(SP)
	CMPI	#50,TIME
	BLE.S	FU
	LEA	FAD_END,A0
MO	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$1234,2(A0)
	BNE.S	.I
	MOVE	#$4E71,BOUCLE
.I	MOVE	(A0),$FFFF8240.W
	MOVE	(A0),$FFFF8242.W
	MOVE	(A0),$FFFF8250.W
	ADDQ	#2,MO
	BRA.S	FU2
FU	MOVE	#$001,$FFFF8240.W
	MOVE	#$001,$FFFF8242.W
	MOVE	#$001,$FFFF8250.W
FU2	
	CMPI	#50,TIME
	BGT.S	NO1C
	LEA	GFX,A1
	MOVE.L	SCREEN1,A0
	LEA	12*8(A0),A0
MOD1B	LEA	0(A0),A0
	MOVE	#15,D7
.AF1
N	SET	0
	REPT	8
	MOVE	(A1)+,N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.AF1
	MOVEQ	#3,D7
.EF1
N	SET	0
	REPT	8
	CLR	N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.EF1

NO1C	CMPI	#-160*20,MOD1B+2
	BEQ.S	.NO2
	SUB	#160,MOD1B+2
.NO2
POUET_AGAIN
	CMPI	#20,TIME
	BLE	NO1BF
	LEA	GFX+8*2*16,A1

	MOVE.L	SCREEN1,A0
	LEA	160*180(A0),A0
	MOVE	#20-1,D7
.EF1
N	SET	0
	REPT	8
	CLR	N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.EF1

	MOVE.L	SCREEN1,A0
MOD2B	LEA	160*180(A0),A0
	MOVE	#20-1,D7
.AF1
N	SET	0
	REPT	8
	MOVE	(A1)+,N+2(A0)
N	SET	N+8
	ENDR
	LEA	160(A0),A0
	DBF	D7,.AF1
	CMPI	#160*200,MOD2B+2
	BEQ.S	.NO2
	ADD	#160,MOD2B+2
.NO2
NO1BF
	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2

	CMPI.B	#$F,$FFFFFC02.W
	BNE.S	.NO_TIME
	ST	$FFFF8240.W
.NO_TIME	JSR	ZIK
	ADDQ	#1,TIME
	MOVEM.L	(SP)+,D0-A6
	RTE

MINIFAD	DC	$001,$101,$101,$212,$212
	DC	$323,$323,$434,$434,$545,$545,$656,$656,$767,$767
	DCB	15,$767
	DC	$656,$656,$545,$545,$434,$434,$323,$323,$212
	DC	$1234
MINIFAD2	DC	$323,$434,$545,$656,$767
	DCB	15,$767
	DC	$666,$555,$444,$333,$222,$001
	DC	$1234
VBLR	MOVE.W	#$1,$FFFF8240.W
	ADDQ	#1,TIME

	LEA	MINIFAD,A0
MODMNFD	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$1234,2(A0)
	BEQ.S	.OK_
	ADDQ	#2,MODMNFD
.OK_	MOVE	(A0),$FFFF8242.W
	MOVE	(A0),$FFFF8250.W

	CMPI	#50*17,TIME
	BLE.S	ON_SAUTE
	LEA	MINIFAD2,A0
MODMNFD2	EQU	*+2
	LEA	0(A0),A0
	CMPI	#$1234,2(A0)
	BEQ.S	.OK_2B
	ADDQ	#2,MODMNFD2
	BRA.S	.OK_2
.OK_2B	CLR	TIME
	MOVE.L	#VBL_END,$70.W
.OK_2	MOVE	(A0),$FFFF8242.W
	MOVE	(A0),$FFFF8250.W

ON_SAUTE	MOVEQ	#0,D0
	MOVE.L	SCREEN2,A2
N	SET	0
	REPT	200
	MOVE.L	D0,N+6(A2)
	MOVE.L	D0,N+22(A2)
	MOVE.L	D0,N+38(A2)
	MOVE.L	D0,N+54(A2)
	MOVE.L	D0,N+70(A2)
	MOVE.L	D0,N+86(A2)
	MOVE.L	D0,N+102(A2)
	MOVE.L	D0,N+118(A2)
	MOVE.L	D0,N+134(A2)
	MOVE.L	D0,N+150(A2)
N	SET	N+160
	ENDR

	MOVEQ	#$80,D0
	MOVEQ	#$40,D1
	MOVEQ	#$20,D2
	MOVEQ	#$10,D3
	MOVEQ	#8,D4
	MOVEQ	#4,D5
	MOVEQ	#2,D6
	MOVEQ	#1,D7
	MOVE.L	SCREEN2,A2
	LEA	160*100(A2),A2
	MOVE.L	PT_INC,A0
	JSR	BUF_COD
	CMPI.W	#$1234,(A0)
	BNE.S	.OK
	LEA	INCREMENTS,A0
.OK	MOVE.L	A0,PT_INC

	BSR	SWAPEC
	JSR	ZIK
	;CLR.W	$FFFF8240.W

	RTE

SWAPEC	MOVE.L	SCREEN1,D0
	MOVE.L	SCREEN2,SCREEN1
	MOVE.L	D0,SCREEN2

	MOVE.B	SCREEN1+1,$FFFF8201.W
	MOVE.B	SCREEN1+2,$FFFF8203.W
	RTS


PREPARE_CODE	LEA	BUF_COD,A6
	LEA	COLOR_VAGUE(PC),A1
	MOVE.W	(A1)+,D0
	MOVE.W	D0,D1
	ADD.W	D1,D1
	MULU.W	#362,D0	;362=SQR(2)*256
	LSR.W	#8,D0	;D0=RAYON MAXIMUM
	MOVE.W	D0,D5	;COULEUR DE DEPART

	;CODE PRELIMINAIRE
NEXT_COLOR	MOVE.L	CODE_FIXE(PC),(A6)+
	MOVE.L	A1,A0

	MOVE.W	D1,D7     ;LONGUEUR D'UN DES COTêS DU CARRê
	SUBQ.W	#1,D7
	MOVE.W	D7,PRATIK
	MOVEQ	#0,D4	;Y=0
SCAN_Y	MOVEQ	#0,D3	;X=0
PRATIK = *+2
	MOVE.W	#$1234,D6
SCAN_X	MOVEQ	#0,D2
	MOVE.B	(A0)+,D2	;LA COULEUR
	CMP.W	D5,D2
	BNE.S	.PAS_BONNE
	MOVEM.L	D0-D7,-(SP)
	LEA	GRILLE(PC),A3
	ADD.W	D1,D1
	ADD.W	D1,D1
	MULU.W	D4,D1
	ADD.W	D3,D3
	ADD.W	D3,D3
	ADD.W	D3,D1
	MOVE.W	(A3,D1.W),D3	;X ECRAN
	MOVE.W	2(A3,D1.W),D4	;Y ECRAN
;	CMPI.W	#200,D4
;	BGE.S	.CLIP
	CMPI.W	#320,D3
	BGE.S	.CLIP
	TST.W	D3
	BLT.S	.CLIP
;	TST.W	D4
;	BLT.S	.CLIP
	SUBI.W	#100,D4
	MULU.W	#160,D4
	MOVE.W	D3,D2
	ANDI.W	#$FFE0,D2
	LSR.W	#1,D2
	ADD.W	D2,D4
	LEA	TABLE_X(PC),A3
	ANDI.W	#31,D3
	ADD.W	D3,D3
	ADD.W	D3,D3
	ADD.W	2(A3,D3.W),D4	;D4=OFFSET ECRAN
	MOVE.W	(A3,D3.W),D3
	ADD.W	D3,D3
	ADD.W	D3,D3
	LEA	AFFICH_OR(PC),A3
	MOVE.W	(A3,D3.W),(A6)+
	MOVE.W	D4,(A6)+
.CLIP	MOVEM.L	(SP)+,D0-D7
.PAS_BONNE	ADDQ.W	#1,D3	;X=X+1
	DBRA	D6,SCAN_X
	ADDQ.W	#1,D4	;Y=Y+1
	DBRA	D7,SCAN_Y
	SUBQ.W	#1,D5
	BGT	NEXT_COLOR
	MOVE.W	#$4E75,(A6)+
	RTS

TABLE_X	DC.W	0,6,1,6,2,6,3,6,4,6,5,6,6,6,7,6
	DC.W	0,7,1,7,2,7,3,7,4,7,5,7,6,7,7,7
	DC.W	0,8,1,8,2,8,3,8,4,8,5,8,6,8,7,8
	DC.W	0,9,1,9,2,9,3,9,4,9,5,9,6,9,7,9

CODE_FIXE	MOVE.L	A2,A1	;1
	ADDA.W	(A0)+,A1	;3

	;D0=$80, D1=$40, ... ,D7=1
AFFICH_OR	OR.B	D0,$1234(A1)
	OR.B	D1,$1234(A1)
	OR.B	D2,$1234(A1)
	OR.B	D3,$1234(A1)
	OR.B	D4,$1234(A1)
	OR.B	D5,$1234(A1)
	OR.B	D6,$1234(A1)
	OR.B	D7,$1234(A1)

EFFAC	MOVE.B	D0,$1234(A1)

COLOR_VAGUE	INCBIN	VAGUE_4.VAG

GRILLE	INCBIN	COOR3.VAG

INCREMENTS	INCBIN	INC_4.VAG
	INCBIN	INC_5.VAG
	INCBIN	INC_6.VAG
	DC.W	$1234

GFX	INCBIN	GFX.GFX

	SECTION	BSS
PT_INC	DS.L	1
SCREEN1	DS.L	1
SCREEN2	DS.L	1
	DS.B	256+26000
BUFFER	DS.B	64000+16000+26000
BUF_COD	DS.B	29000
