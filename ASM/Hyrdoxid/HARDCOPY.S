 
	OPT	O+,W-,D+

	CLR.L	-(SP)
	MOVE	#32,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	BSR	CLS
	MOVE.B	#18,$FFFFFC02.W
	MOVE.B	#21,$FFFFFC02.W
	CLR.B	$484.W
	MOVE.B	#5,$FFFF8007.W

	MOVE.W	#-1,-(SP)		
	MOVE.W	#88,-(SP)		
	TRAP	#14			
	ADDQ.L	#4,SP			
	MOVE	D0,OLDMODECODE	

* EXCEPTIONS
	MOVE.L	#FIN,$10	;INSTRUCTION ILLEGALE
	MOVE.L	#FIN,$8	;ERREUR BUS
	MOVE.L	#ENABLE,$14;/0
	MOVE.L	#FIN,$C	;ERREUR D'ADRESSE

	BSR	VBL
	BSR	INITS
	BSR	CLS_VGA
	BSR	SYNCHRO
	BSR	VBL
	BSR	VGA
	BSR	PREP

	BSR	SAVE_RAST
	BSR	INSTAL_INTER
	MOVE.L	#NEW_VBL,$70.W

*	EH HOP ...
	MOVEM	CLEAR,D0-D7/A0-A6
	LEA	SINUS,A1
BOUCLE:	
	BSR.W	VBL
	CLR.L	$FFFF9800.W
	CLR	$FFFF8264.W
	MOVE.L	AFFECR,A6
	MOVE	(A1),D3

	CLR.B	$FFFFFA1B.w
	MOVE.L	#TIMER_B,$120.w
	MOVE.B	#1,$FFFFFA21.w
	MOVE.B	#8,$FFFFA1B

	BSR.W	SYNCHRO

	CMPA.L	#SINUS+720,A1
	BNE.S	NO_END
	LEA	SINUS,A1
NO_END	CMPI.B	#56,$FFFFFC02.W
	BNE.S	NO_TIME
	MOVE.L	#$FF,$FFFF9800.W
NO_TIME	CMPI.B	#57,$FFFFFC02.W
	BNE.S	BOUCLE

FIN:	
	MOVE	#$2700,SR
	MOVE.B	SAVE_A09,$FFFFFA09.W
	MOVE.B	SAVE_A07,$FFFFFA07.W	
	MOVE.B	SAVE_A1B,$FFFFFA1B.W	
	MOVE.B	SAVE_A21,$FFFFFA21.W	
	MOVE.B	SAVE_A13,$FFFFFA13.W	
	MOVE.L	SAVE_HBL,$120.w
	MOVE.L	SAVE_VBL,$70.W
	MOVE	#$2300,SR
	CLR	$FFFF8264.W

	BSR	VBL
	BSR	CLS_VGA
	
	BSR	VBL
	MOVE	OLDMODECODE,-(SP)
	MOVE	#3,-(SP)	
	move.l	#-1,-(sp)
	move.l	#-1,-(sp)
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	14(SP),SP		

	BSR	RESTORE
	BSR	CLS
	MOVE.B	#8,$FFFFFC02.W
	MOVE.B	#15,$484.W

	CLR.L	-(SP)
	MOVE	#32,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	CLR.L	-(SP)
	TRAP	#1

VBL:
	move.l	$466.w,d0
VSYNC:	cmp.l	$466.w,D0
	BEQ.S	VSYNC
	RTS

INITS:
	move.l	$44E.W,OLDXBIOS
	
	MOVE.L	#XBIOS2,D0
	ANDI.L	#$FFFFFFFF-2,D0
	MOVE.L	D0,AFFECR

	MOVE.L	#XBIOS3,D0
	ANDI.L	#$FFFFFFFF-2,D0
	MOVE.L	D0,WORKECR
	RTS

SYNCHRO:
	MOVE.L	AFFECR,D0
	MOVE.L	WORKECR,AFFECR
	MOVE.L	D0,WORKECR

	move.b AFFECR+1,$ffff8201.w
	move.b AFFECR+2,$ffff8203.w
	move.b AFFECR+3,$ffff820D.w
	RTS

CLS:
	MOVE.L	$44E.W,A0
	MOVE	#7999,D0
LOOP_CLS:
	CLR.L	(A0)+
	DBF	D0,LOOP_CLS
	RTS

CLS_VGA:
	MOVE.L	AFFECR,A0
	MOVE.L	WORKECR,A1
	MOVE	#96*240,D0
LOOP_VGA:
	CLR.L	(A0)+
	CLR.L	(A1)+ 
	DBF	D0,LOOP_VGA
	RTS

RESTORE:
	MOVE.B	OLDXBIOS+1,$FFFF8201.W
	move.b 	OLDXBIOS+2,$ffff8203.w
	move.b 	OLDXBIOS+3,$ffff820D.w
	RTS

VGA:
	MOVE	#192,$FFFF8210.W	;TAILLE EN MOT
	MOVE	#192,$FFFF820E.W	;TAILLE EN MOT
	MOVE	#16,$FFFF8266.W	;16=VGA & 256=TC
	MOVE	#254,$FFFF8282.W	;NBRE DE DEMI-LINES
	MOVE	#203,$FFFF8284.W	;FIN LIGNE HORIZONTALE
	MOVE	#47,$FFFF8286.W	;DEBUT LIGNE HORIZONTALE
	MOVE	#764,$FFFF8288.W	;FULL GAUCHE	
	MOVE	#157,$FFFF828A.W	;FULL DROIT
	MOVE	#216,$FFFF828C.W	;SYNCHRO HORIZONTAL
	MOVE	#625,$FFFF82A2.W	;NBRE DE CHAMPS
	MOVE	#613,$FFFF82A4.W	;FIN SCREEN
	MOVE	#47,$FFFF82A6.W	;DEBUT ECRAN
	MOVE	#85,$FFFF82A8.W	;FULL HAUT
	MOVE	#566,$FFFF82AA.W	;FULL BAS
	MOVE	#619,$FFFF82AC.W	;SYNCHRO VERTICAL
	MOVE	#385,$FFFF82C0.W	;????
	CLR	$FFFF82C2.W	;PIXEL OPTIONS	
	RTS


NEW_VBL:
	ADDQ.L	#1,$466.W	
	RTE

ENABLE:
	RTE

SAVE_RAST:
	move.l	$120.w,SAVE_HBL
	MOVE.L	$70.W,SAVE_VBL
	move.b	$fFfffa1b.W,SAVE_A1B
	move.b	$fFfffa09.W,SAVE_A09
	move.b	$fFfffa21.W,SAVE_A21
	move.b	$fFfffa07.W,SAVE_A07
	move.b	$fFfffa13.W,SAVE_A13
	RTS

INSTAL_INTER:
	MOVE	#$2700,SR
	CLR.B 	$FFFFFA1B.W	STOP TIMER B
	CLR.B 	$FFFFFA21.W	STOP TIMER B
	MOVE.B 	#%00000001,$FFFFFA07.W ;ENABLE TIMER B
	MOVE.B 	#%00000001,$FFFFFA13.W
	MOVE.B	#%01000000,$FFFFFA09.W
	MOVE	#$2300,SR
	RTS

TIMER_B:
	MOVE	D3,$FFFF8264.W
	MOVE	D3,D1
	ANDI	#$FFF0,D1
	ADD.L	D1,AFFECR
	ADDI.L	#768,AFFECR
	MOVE.B	AFFECR+1,$FFFF8205.W
	MOVE.B	AFFECR+2,$FFFF8207.W
	MOVE.B	AFFECR+3,$FFFF8209.W
	SUB.L	D1,AFFECR

	MOVE	(A1)+,D3
	SUBQ	#1,D3
	BPL.S	OK
	MOVEQ	#0,D3	
OK	

	ADDQ	#1,D4
	CMPI	#240,D4
	BNE.S	.NO_END
	CLR.B	$FFFFFA1B.w
	CLR.B	$FFFFFA21.w
	CLR	$FFFF8264.W
*	MOVE.L	#$77000000,$FFFF9800.W
	MOVE.L	A6,AFFECR
	MOVEQ	#0,D4
	LEA	-239*2(A1),A1
.NO_END	BCLR	#0,$FFFFFA0F.W
	RTE

PREP:
	BSR	VBL
	LEA	PIC,A0
	LEA	$FFFF9800.W,A1

	MOVE	#254,D0
.LOOP:
	MOVE.L	(A0)+,(A1)+
	DBF	D0,.LOOP

	MOVEM	CLEAR,D0-D7/A0-A6
	LEA	PIC+1024,A0
	MOVE.L	WORKECR,A1
	LEA	64+768(A1),A1
	MOVE.L	AFFECR,A2
	LEA	64+768(A2),A2

	MOVE	#239,D1
.LOOP3:
	MOVE	#95,D0
.LOOP2:
	MOVE.L	(A0),(A1)+
	MOVE.L	(A0)+,(A2)+
	DBF	D0,.LOOP2
	LEA	384(A1),A1
	LEA	384(A2),A2
	DBF	D1,.LOOP3
	RTS

	SECTION	DATA

PIC:	INCBIN F:DEEP.HDX
SINUS:	INCBIN F:SINUS.INL

	SECTION	BSS

CLEAR:	DS.L	16
SAVE_VBL:	DS.L	1
SAVE_HBL:	DS.L	1
SAVE_A1B:	DS.B	1
SAVE_A21:	DS.B	1
SAVE_A07:	DS.B	1
SAVE_A09:	DS.B	1
SAVE_A13:	DS.B	1
OLDXBIOS:	DS.L	1
AFFECR:	DS.L	1
WORKECR:	DS.L	1
OLDMODECODE:DS.L	1
	EVEN
	DS.B	4
XBIOS2:	DS.B	768*242
	DS.B	4
XBIOS3:	DS.B	768*242