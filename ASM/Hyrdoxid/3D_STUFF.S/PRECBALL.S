
 	LEA.L 	PILE,SP
	CLR.L	-(SP)
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP
	CLR.B	$484.W
	MOVE.B	#18,$FFFFC02
	BSR	INITS
*	BSR	INIT_RAST 
*	MOVE.L	#TIMER,$4D2
	move.l	$70.w,OLD_VBL
	move.l	#NEW_VBL,$70.w
	BSR	CLS
	BSR	VBL
	BSR	CLR_REGISTERS
	BSR	MAKE_YTABLE
	BSR	PRECALC_BALL
	MOVE.L	#$FFFF00FF,$FFFF9804

LOOP
	MOVE.L	#$00500070,$FFFF9800
*	BSR	EFFA
	CMPI.B	#56,$FFFFC02
	BNE.S	NO_ALT
	MOVE.L	#$FF0000,$FFFF9800
NO_ALT
	BSR	BALLS
	BSR	SYNCHRO
	CMPI.B	#56,$FFFFC02
	BNE.S	NO_ALT2
	MOVE.L	#$FF,$FFFF9800
NO_ALT2
	BSR	VBL
	CMPI.B	#57,$FFFFC02
	BNE	LOOP
	BRA	SORTIE
*********************
PRECALC_BALL
	LEA	BUFFER,A3
MAKE_DOTS
	ADD.W	#4,X_ANGLE
	CMPI.W	#720,X_ANGLE
	BLS.S	NO_STOP
	RTS
NO_STOP
	ADD.W	#4,Y_ANGLE
	CMPI.W	#720,Y_ANGLE
	BLS.S	NO_STOP2
	CLR.W	Y_ANGLE
NO_STOP2
*	ADD.W	#4,Z_ANGLE
*	CMPI.W	#720,Z_ANGLE
*	BLT.S	NO_STOP3
*	CLR.W	Z_ANGLE
*NO_STOP3
	BSR	TRIGO
	MOVE.W	#419,D7
	LEA	COORD,A2
	MOVE.L	#$3111,D0		;coupe cache
	MOVEC.L	D0,CACR
AFF_BALL
	MOVE.L	(A2)+,XE
	MOVE.W	(A2)+,ZE
**COORD SPAT TO PLAN******
	MOVEM.L	  D7/A2-A3/A4/A5,-(SP)		
	LEA	XE,A6
	MOVE.W	(A6)+,D0
	MOVE.W	(A6)+,D1
	MOVE.W	(A6),D2
	MOVE.W	ZDEP,D5
	MOVEQ.B	#9,D6
	ASL.L	D6,D5		;zdep*512
	MOVE.L	D5,A3
	LEA	VAR_3D,A6
	MOVE.W	D0,D3
	MOVE.W	D1,D4
	MOVE.W	D2,D5
	MULS	(A6)+,D3	;d3=c*xe*512
	MULS	(A6)+,D4	;d4=f*ye*512
	MULS	(A6)+,D5	;d5=i*ze*512
	ADD.L	D4,D5		;+f*ye*512
	ADD.L	D3,D5		;+c*xe*512
	ADD.L	A3,D5		;+zdep*512
	MOVE.L	D5,A5		;a5=new_ze*512
	LSR.L	#8,D5

	MOVE.W	#512,D7
	SUB.W	D5,D7		;d7=512*q				;d7=512*(1-new_ze/z_pt_fuite)
	MOVE.W	D0,D3		;d3=xe
	MOVE.W	D1,D4		;d4=ye
	MOVE.W	D2,D5		;d5=ze
	MULS	(A6)+,D3	;d3=a*xe*512
	MULS	(A6)+,D4	;d4=d*ye*512
	MULS	(A6)+,D5	;d5=g*ze*512
	ADD.L	D4,D5		
	ADD.L	D3,D5
	MOVE.L	D5,A4		;a4=new_xe*512
	DIVS	D7,D5		;d5=new_xe/q
	MULS	(A6)+,D0	;d0=b*xe*512
	MULS	(A6)+,D1	;d1=e*ye*512
	MULS	(A6)+,D2	;d2=h*ze*512
	ADD.L	D0,D1		
	ADD.L	D1,D2
	MOVE.L	D2,D6		;d6=new_ye*512
	DIVS	D7,D2		;d2=new_ye/q
	MOVEM.L	(SP)+,D7/A2-A3/A4/A5
*************
	MOVE.W	D5,(A3)+
	MOVE.W	D2,(A3)+
	DBF	D7,AFF_BALL
	MOVE.L	#$2510,D0		;coupe cache
	MOVEC.L	D0,CACR
	BRA	MAKE_DOTS
	RTS
***************************INITIALISATIONS*********************************************************
INITS
	MOVEC.L	CACR,D0			
	MOVE.L	D0,OLD_CACR
	MOVE.L	#$2510,D0		;coupe cache
	MOVEC.L	D0,CACR
	
	MOVE.W	#-1,-(SP)		
	MOVE.W	#88,-(SP)		
	TRAP	#14			
	ADDQ.L	#4,SP			
	MOVE.W	D0,OLDMODECODE	

	move.l	$44E.W,OLDXBIOS2
	
	MOVE.L	#XBIOS2,D0
	ANDI.L	#$FFFFFFFF-2,D0
	MOVE.L	D0,AFFECR

	MOVE.L	#XBIOS3,D0
	ANDI.L	#$FFFFFFFF-2,D0
	MOVE.L	D0,WORKECR

	BSR	SYNCHRO
	BSR	VGA
	RTS
SYNCHRO:
	MOVE.L	AFFECR,D0
	MOVE.L	WORKECR,AFFECR
	MOVE.L	D0,WORKECR

	move.b AFFECR+1,$ffff8201.w
	move.b AFFECR+2,$ffff8203.w
	move.b AFFECR+3,$ffff820D.w
	RTS
VGA:
	MOVE	#192/2,$FFFF8210.W	;TAILLE EN MOT
*	MOVE	#192,$FFFF820E.W	;TAILLE EN MOT
	MOVE	#8,$FFFF8266.W	;16=VGA & 256=TC
	MOVE	#254,$FFFF8282.W	;NBRE DE DEMI-LINES
	MOVE	#203,$FFFF8284.W	;FIN LIGNE HORIZONTALE
	MOVE	#47,$FFFF8286.W	;DEBUT LIGNE HORIZONTALE
	MOVE	#764,$FFFF8288.W	;FULL GAUCHE	
	MOVE	#157,$FFFF828A.W	;FULL DROIT
	MOVE	#216,$FFFF828C.W	;SYNCHRO HORIZONTAL
	MOVE	#625,$FFFF82A2.W	;NBRE DE CHAMPS
	MOVE	#613-10,$FFFF82A4.W	;FIN SCREEN
	MOVE	#47-10,$FFFF82A6.W	;DEBUT ECRAN
	MOVE	#85,$FFFF82A8.W	;FULL HAUT
	MOVE	#566,$FFFF82AA.W	;FULL BAS
	MOVE	#619,$FFFF82AC.W	;SYNCHRO VERTICAL
	MOVE	#385,$FFFF82C0.W	;????
	CLR	$FFFF82C2.W	;PIXEL OPTIONS	
	RTS
*******************************SOUS ROUTINES*****************************************
AFF_DOTS
	movem.l	clr,d2-d6/a0-a6
	LEA	Y_TABLE,A5
	LEA	TAB,A4
	LEA	BUFFER,A2
	MOVE.L	WORKECR,A0
	ADD.W	#8,CURVE_COMPT
	CMPI.W	#1432,CURVE_COMPT
	BLT.S	NO_CLR
	CLR.W	CURVE_COMPT
NO_CLR
	MOVE.W	CURVE_COMPT,D7
	MULU	#210,D7
	ADD.L	D7,A2
	MOVE.W	#419,D4
	MOVE.L	#$3111,D6		;coupe cache
	MOVEC.L	D6,CACR
NO_D
	MOVE.W	(A2)+,D3
	MOVE.W	(A2)+,D2
	ADD.W	D1,D3
	ADD.W	D0,D2
	MOVE.W	(A5,D2.W*2),D5 		; coord y
	MOVE.L	(A4,D3.W*4),D6		; coord x
	ADD.W	D6,D5
	SWAP	D6
	OR.W	D6,(A0,D5.L)	
	DBF	D4,NO_D
	MOVE.L	#$2510,D6		;coupe cache
	MOVEC.L	D6,CACR
	RTS
***************************CLS ROUT*****************************************
VBL:
	MOVE.L	D0,-(SP)
	move.l	$466.w,d0		
VSYNC:	cmp.l	$466.w,d0
	BEQ.S	VSYNC
	MOVE.L	(SP)+,D0
	RTS
CLS
	MOVEM.L	D0/A0-a1,-(SP)
	MOVE.L	AFFECR,A0
	move.l workecr,a1
	MOVE.W	#7999,D0
	MOVEQ.L	#0,D1
OK
	MOVE.L	D1,(A0)+
	MOVE.L	D1,(A1)+
	DBF	D0,OK
	MOVEM.L	(SP)+,D0/A0-a1
	RTS
CLR_REGISTERS
	rts

MAKE_YTABLE
	LEA	Y_TABLE,A1
	MOVE.B	#240,D1
	MOVEQ	#0,D2
MAKE
	MOVE.W	D2,(A1)+
	ADD.W	#192,D2
	DBF	D1,MAKE
	RTS

REBOND_BALL
	LEA	REBOND,A2
	LEA	ABS,A3
	ADDQ.W	#2,CURVE
	ADDQ.W	#2,CURVE2
	ADDQ.W	#2,CURVE3
	CMPI.W	#360,CURVE
	BLT.S	NO
	CLR	CURVE
NO
	CMPI.W	#640,CURVE2
	BLT.S	NO2
	CLR	CURVE2
NO2
	CMPI.W	#320,CURVE3
	BLT.S	NO3
	CLR	CURVE3
NO3
	MOVE.W	CURVE,D1
	MOVE.W	CURVE2,D2
	ADD.W	D4,D1	
	ADD.W	D5,D2
	MOVE.W	(A2,D1.W),YADD
	MOVE.W	(A3,D2.W),XADD
	RTS

REBOND_BALL2
	LEA	REBOND,A2
	LEA	ABS,A3
	MOVE.W	CURVE,D1
	MOVE.W	CURVE2,D2
	ADD.W	D4,D1	
	ADD.W	D5,D2
	MOVE.W	(A2,D1.W),YADD
	MOVE.W	(A3,D2.W),XADD
	RTS
REBOND_BALL3
	LEA	REBOND,A2
	LEA	ABS2,A3
	MOVE.W	CURVE,D1
	MOVE.W	CURVE3,D2
	ADD.W	D4,D1	
	ADD.W	D5,D2
	MOVE.W	(A2,D1.W),YADD
	MOVE.W	(A3,D2.W),XADD
	RTS
BALLS

	MOVEQ.W	#0,D4
	MOVE.W	#300,D5
	BSR	REBOND_BALL
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT

	MOVEQ.W	#30,D4
	MOVE.W	#200,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT2,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT2
	RTS

	MOVEQ.W	#60,D4
	MOVEQ.W	#0,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT3,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT3

	MOVEQ.W	#100,D4
	MOVE.W	#500,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT4,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT4

	MOVE.W	#140,D4
	MOVEQ.W	#50,D5
	BSR	REBOND_BALL3
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT5,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT5

	MOVE.W	#180,D4
	MOVE.W	#200,D5
	BSR	REBOND_BALL3
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT6,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT6

	MOVE.W	#0,D4
	MOVE.W	#280,D5
	BSR	REBOND_BALL3
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT7,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT7

	MOVE.W	#50,D4
	MOVE.W	#100,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT8,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT8

	MOVE.W	#100,D4
	MOVE.W	#600,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT9,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT9
******
	MOVE.W	#300,D4
	MOVE.W	#50,D5
	BSR	REBOND_BALL2
	MOVE.W	YADD,D0
	MOVE.W	XADD,D1
	MOVE.W	COMPT10,D2
	MOVE.W	D2,CURVE_COMPT
	BSR	AFF_DOTS
	MOVE.W	CURVE_COMPT,D2
	MOVE.W	D2,COMPT10
	RTS
NEW_VBL
	addq	#1,$466.w
	rte
****************************ROUTINE DE CALCUL************************************
********************************************************
*precalculs trigonometriques			*
*en entree:x_angle,y_angle,z_angle(angle de rotation)  *	
*en sortie:A,B,C,D,E,F,G,H,I*512		           *				
********************************************************


TRIGO
	MOVEM.L	D0-D7/A4-A6,-(SP)
	LEA	COS_TAB,A4
	LEA	SIN_TAB,A5
	LEA	X_ANGLE,A6
	MOVE.W	(A6)+,D2	;d2=x angle
	MOVE.W	(A6)+,D1	;d1=y ...
	MOVE.W	(A6)+,D0	;d0=z ...

	MOVE.W	(A5,D2.W),D5	;d5=sinx
	MOVE.W	(A4,D2.W),D4	;d4=cosx
	MOVE.W	(A5,D1.W),D3	;d3=siny
	MOVE.W	(A4,D1.W),D2	;d2=cosy
	MOVE.W	(A5,D0.W),D1	;d1=sinz
	MOVE.W	(A4,D0.W),D0	;d0=cosz

	LEA	VAR_3D,A6	;zone sauvegarde calc intermediaire
	MOVEQ.W	#9,D7		;nombre de decalages pour/512

	;**********CALCUL DE C************
SP_C
	MOVE.W	D3,D6		;siny
	NEG.W	D6		;-siny	
	MOVE.W	D6,(A6)+
	;**********CALCUL DE F************
SP_F	
	MOVE.W	D2,D6		;cosy
	MULS	D5,D6		;cosy*sinx
	ASR.L	D7,D6		;/512
	MOVE.W	D6,(A6)+
	;**********CALCUL DE I************
SP_I
	MOVE.W	D2,D6		;cosy
	MULS	D4,D6		;cosy*cosx
	ASR.L	D7,D6		;/512
	MOVE.W	D6,(A6)+		
	;**********CALCUL DE A************
SP_A
	MOVE.W	D0,D6		;cosz
	MULS	D2,D6		;cosz*cosy
	ASR.L	D7,D6		
	MOVE.W	D6,(A6)+
	;**********CALCUL DE D************
SP_D
	MOVE.W	D1,D6		;sinz	
	MULS	D4,D6		;sinz*cosx
	ASR.L	D7,D6
	MOVE.W	D6,A4

	MOVE.W	D0,D6		;cosz
	MULS	D3,D6		;cosz*siny
	ASR.L	D7,D6		
	MULS	D5,D6		;cosz*siny*sinx
	ASR.L	D7,D6
	SUB.W	A4,D6		;(cosz*siny*sinx)-(sinz*cosx)
	MOVE.W	D6,(A6)+
	;**********CALCUL DE G************
SP_G
	MOVE.W	D7,D6		;sinz
	MULS	D5,D6		;sinz*sinx
	ASR.L	D7,D6
	MOVE.W	D6,A4

	MOVE.W	D0,D6		;cosz
	MULS	D3,D6		;cosz*siny
	ASR.L	D7,D6
	MULS	D4,D6		;cosz*siny*cosx
	ASR.L	D7,D6
	ADD.W	A4,D6		;(cosz*siny*cosx)+(sinz*sinx)
	MOVE.W	D6,(A6)+
	;**********CALCUL DE B************
SP_B
	MOVE.W	D1,D6		;sinz		
	MULS	D2,D6		;sinz*cosy
	ASR.L	D7,D6
	MOVE.W	D6,(A6)+
	;**********CALCUL DE E************
SP_E
	MOVE.W	D0,D6		;cosz
	MULS	D4,D6		;cosz*cosx
	ASR.L	D7,D6
	MOVE.W	D6,A4

	MOVE.W	D1,D6		;sinz
	MULS	D3,D6		;sinz*siny
	ASR.L	D7,D6
	MULS	D5,D6		;sinz*siny*sinx
	ASR.L	D7,D6
	ADD.W	A4,D6		;(sinz*siny*sinx)+(cosz*cosx)
	MOVE.W	D6,(A6)+	
	;**********CALCUL DE H*************
SP_H
	MOVE.W	D0,D6		;cosz
	MULS	D5,D6		;cosz*sinx
	ASR.L	D7,D6	
	MOVE.W	D6,A4

	MOVE.W	D1,D6		;sinz
	MULS	D3,D6		;sinz*siny		
	ASR.L	D7,D6
	MULS	D4,D6		;sinz*siny*cosx
	ASR.L	D7,D6
	SUB.W	A4,D6		;(sinz*siny*cosx)-(cosz*sinx)
	MOVE.W	D6,(A6)+
	MOVEM.L	(SP)+,D0-D7/A4-A6
	RTS

SORTIE
	MOVE.L	OLD_CACR,D0
	MOVEC.L	D0,CACR
*	CLR.L	$4D2
*	MOVE.B	SAVE_A09,$FFFFA09
*	MOVE.B	SAVE_A07,$FFFFA07	
*	MOVE.L	SAVE_HBL,$120.W
*	MOVE.B	SAVE_A1B,$FFFFA1B	
*	MOVE.B	SAVE_A21,$FFFFA21	
*	MOVE.B	SAVE_A13,$FFFFA13	
	MOVE.L	OLD_VBL,$70.W
	MOVE.W	OLDMODECODE,-(SP)
	MOVE.W	#3,-(SP)	
	MOVE.L	OLDXBIOS2,-(SP)
	MOVE.L	OLDXBIOS2,-(SP)
	MOVE.W	#5,-(SP)
	TRAP	#14
	LEA	14(SP),SP		
	MOVE.B	#8,$FFFFC02
	MOVE.B	#15,$484
	
	MOVE.W	#$20,-(SP)
	TRAP	#1
	ADDQ.L	#2,SP
	CLR.W	-(SP)
	TRAP	#1

	SECTION DATA
YADD		DC.W	0
XADD		DC.W	0
CURVE_COMPT	DC.W	0
CURVE		DC.W	0
CURVE2		DC.W	0
CURVE3		DC.W	0
********
COMPT		DC.W	0
COMPT2		DC.W	160
COMPT3		DC.W	320
COMPT4		DC.W	480
COMPT5		DC.W	640
COMPT6		DC.W	680
COMPT7		DC.W	400
COMPT8		DC.W	200
COMPT9		DC.W	600
COMPT10		DC.W	300
********
OLD_VBL		DC.L	0 
OLD_CACR		DC.L	0
SAVE_HBL:		DC.L	0
SAVE_A1B:		DC.B	0
SAVE_A21:		DC.B	0
SAVE_A07:		DC.B	0
SAVE_A09:		DC.B	0
SAVE_A13:		DC.B	0
SAVE_REZ:		DC.W	0
SCREEN_ADD		DC.L	0
AFFECR:		DC.L 	1
WORKECR:		DC.L 	1
OLDXBIOS2:		DC.L	1
OLDMODECODE	DC.W	1
FORME		INCBIN	"C:\UTILS\CODE_UTI.LS\GEN_ASM\MULTIPAR.T\V.INL"	
COORD		INCBIN	"C:\UTILS\CODE_UTI.LS\GFABASIC\DOTSBAL2.INL"
REBOND		INCBIN	"C:\UTILS\CODE_UTI.LS\GFABASIC\REBOND.INL"
ABS		INCBIN	"C:\UTILS\CODE_UTI.LS\GFABASIC\ABS.INL"
ABS2		INCBIN	"C:\UTILS\CODE_UTI.LS\GFABASIC\ABS2.INL"
COS_TAB		INCBIN	"C:\UTILS\CODE_UTI.LS\GFABASIC\COSIN.DAT"
SIN_TAB		EQU	COS_TAB+720	
**************************
**************************
TAB	
OXO	SET	0	
	REPT	24
	DC	32768,OXO,16384,OXO,8192,OXO,4096,OXO
	DC	2048,OXO,1024,OXO,512,OXO,256,OXO
	DC	128,OXO,64,OXO,32,OXO,16,OXO
	DC	8,OXO,4,OXO,2,OXO,1,OXO
OXO	SET	OXO+8
	ENDR
*****************
XE		DC.W	0
YE		DC.W	0
ZE		DC.W	0
ZDEP		DC.W	-200
X_ANGLE		DC.W	2
Y_ANGLE		DC.W	2
Z_ANGLE		DC.W	2
Z_PT_FUITE		DC.W	256
	SECTION	BSS
Y_TABLE		DS.B	250*2
XP		DS.W	1
YP		DS.W	1
NEW_XE		DS.W	1
NEW_YE		DS.W	1
NEW_ZE		DS.W	1
VAR_3D		DS.W	9
CLR		DS.L	17
		DS.L	2000
PILE		DS.L	10
		DS.B	4
XBIOS2:		DS.B	384*242
		DS.B	4
XBIOS3:		DS.B	384*242
BUFFER		DS.B	170000
	END
