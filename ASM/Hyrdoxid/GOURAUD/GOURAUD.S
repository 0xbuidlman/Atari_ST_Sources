** ROUT DE GOURAUD
NBR_DROITE=2

	OPT	O+,W-

	CLR.L	-(SP)
	MOVE	#32,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	BSR	CLS
	MOVE	#-1,-(SP)		
	MOVE	#88,-(SP)		
	TRAP	#14			
	ADDQ.L	#4,SP			
	MOVE	D0,OLDMODECODE	

	MOVE.B	#18,$FFFFFC02.W
	MOVE.B	#21,$FFFFFC02.W
	CLR.B	$484.W
	MOVE.B	#5,$FFFF8007.W

* EXCEPTIONS
	MOVE.L	#FIN,$10	;INSTRUCTION ILLEGALE
	MOVE.L	#FIN,$8	;ERREUR BUS
	MOVE.L	#ENABLE,$14;/0
	MOVE.L	#FIN,$C	;ERREUR D'ADRESSE

	BSR.W	VBL
 	BSR.W	INITS
	BSR.W	SYNCHRO
	BSR.W	TRUE_COLOR
	CLR.L	$FFFF9800.W
	BSR.W	CLS_TRUE
	BSR.W	MULS
	BSR.W	PREP_COLOR

* INIT EFFECT
	MOVE.L	$70.W,SAVE_VBL
	MOVE.B	$FFFFFA07.W,SAVE_A07
	MOVE.B	$FFFFFA09.W,SAVE_A09

	MOVE.L	#NEW_VBL,$70.W
	MOVE.B	#%00000000,$FFFFFA07.W
	MOVE.B	#%00000000,$FFFFFA13.W
	MOVE.B	#%00000000,$FFFFFA09.W
	MOVE.B	#%00000000,$FFFFFA15.W

	MOVEM	CLEAR(PC),A0-A6/D0-D7
	CLR	X_ANGLE
	CLR	Y_ANGLE
	CLR	Z_ANGLE
BOUCLE:
	BSR.W	VBL

ESC:	CMPI.B	#1,$FFFFFC02.W
	BEQ.S	ESC

	CLR.L	$FFFF9800.W
	BSR.W	SYNCHRO
********	
	LEA	([WORKECR],168+30*768.L),A0
	MOVEM	CLEAR,D2-D7/A1-A6

	MOVE	#150-1,D0
.LOOP:
	MOVEQ	#9-1,D1
.LOOP2:	
	MOVEM.L	D2-D7/A1-A6,(A0)
	LEA	24*2(A0),A0
	DBF	D1,.LOOP2
	LEA	768-(48*9)(A0),A0
	DBF	D0,.LOOP


********
	ADDQ	#2,X_ANGLE
	CMPI	#720,X_ANGLE
	BLT.S	.NOX
	CLR	X_ANGLE
.NOX
	ADDQ	#2,Y_ANGLE
	*MOVE	#572,Y_ANGLE
	CMPI	#720,Y_ANGLE
	BLT.S	.NOY
	CLR	Y_ANGLE
.NOY
	*ADDQ	#2,Z_ANGLE
	BSR.W	TRIGO
** CALCUL
	MOVEQ	#(NBR_DROITE*2)-1,D6	;NBR DE POINTS A CALCULER
	LEA	POSITION(PC),A0
	LEA	POS_3D(PC),A1

	MOVEQ	#9,D0
	MOVEC	D0,CACR
LOOP:
	MOVEM	(A0)+,D0-D2	;POSITION(X,Y,Z)
	NEG	D1 	

	MOVE	D0,D3
	MOVE	D1,D4
	MOVE	D2,D5

	LEA	VAR_3D(PC),A6
	MULS	(A6)+,D3	;d3=c*xe*512
	MULS	(A6)+,D4	;d4=f*ye*512
	MULS	(A6)+,D5	;d5=i*ze*512
	ADD.L	D3,D5	;+c*xe*512
	ADD.L	D4,D5	;+f*ye*512
	LSR.L	#8,D5	;d5=new_ze/256
	
	MOVE	#512,D7
	SUB	D5,D7		;d7=512*q
				;d7=512*(1-new_ze/z_pt_fuite)
	MOVE	D0,D3		;d3=xe
	MOVE	D1,D4		;d4=ye
	MOVE	D2,D5		;d5=ze

	MULS	(A6)+,D3	;d3=a*xe*512
	MULS	(A6)+,D4	;d4=d*ye*512
	MULS	(A6)+,D5	;d5=g*ze*512
	ADD.L	D3,D5
	ADD.L	D4,D5		
	DIVS	D7,D5		;d5=new_xe/q

	MULS	(A6)+,D0	;d0=b*xe*512
	MULS	(A6)+,D1	;d1=e*ye*512
	MULS	(A6)+,D2	;d2=h*ze*512
	ADD.L	D0,D1		
	ADD.L	D1,D2
	DIVS	D7,D2		;d2=new_ye/q

;A6 pointe sur zone de sauve 
;coord planes

	ADD	#192,D5
	MOVE	D5,(A1)+	;X_DEP
	
	ADD	#120,D2
	MOVE	D2,(A1)+	;Y_DEP

	MOVE	D7,(A1)+	;Z_DEP
	DBF	D6,LOOP

	MOVEQ	#0,D7
	MOVEC	D7,CACR
** PREP TABLEAU
	LEA	X_MIN,A0
	LEA	X_MAX,A1

	MOVE	#299,D0
.LOOP:
	MOVE.L	#$0FFF0000,(A0)+	;X+COL
	MOVE.L	#$FFFF0000,(A1)+	;X+COL
	DBF	D0,.LOOP

** TRACAGE EN MEM
	MOVEQ	#NBR_DROITE-1,D7		;NBR DE DROITE
	LEA	POS_3D(PC),A3

LOOP2:
	MOVE	(A3)+,X_DEP
	MOVE	(A3)+,Y_DEP
	MOVE	(A3)+,Z_DEP

	MOVE	(A3)+,X_DEP2
	MOVE	(A3)+,Y_DEP2
	MOVE	(A3)+,Z_DEP2

	BSR.W	LINE
	DBF	D7,LOOP2
** AFF FACE SHADED
	MOVEQ	#9,D3
	MOVEC	D3,CACR

	MOVE	SAVE_Y,D3
	LEA	(X_MIN,D3.W*4),A0
	LEA	(X_MAX,D3.W*4),A1

	LEA	([WORKECR],-120*768.L),A3
	ADD.L	(TABLE_768,D3.W*4),A3
	MOVE	#-768,A2
	LEA	TABLE_COL,A5

	SUB	SAVE_Y2,D3
	SUBQ	#2,D3
	BMI.S	.NO
.LOOP3:
	MOVE	(A1),D1	;XMAX
	MOVE	2(A1),(A3,D1.W*2)
	MOVE	(A0),D2	;XMIN
	MOVE	2(A0),(A3,D2.W*2)

	;LEA	(A3,D2.W*2),A4
	;SUB	D2,D1	;DX
** ECLAIRAGE
	;MOVEQ	#32,D6
	;MOVE	2(A1),D2
	;SUB	2(A0),D2
	;BPL.S	.OK
	;MOVEQ	#-32,D6
	;NEG	D2
.OK
** CALC COEFF
	;MOVEQ	#5,D4
	;LSR	D4,D2

	;MOVE	D1,D4
	;DIVU	D2,D4	;DX/DELTA COL
	;MOVE	2(A0),D2	;COL DEP
	
	;MOVE	D4,D5
.LOOP4:
	;SUBQ	#1,D5
	;BGE.S	.NO2
	;MOVE	D4,D5
	;ADD	D6,D2
.NO2	
	;MOVE	D2,(A4)+	
	;DBF	D1,.LOOP4

	ADD.L	A2,A3
	SUBQ	#4,A0
	SUBQ	#4,A1
	DBF	D3,.LOOP3
.NO
	MOVEQ	#0,D3
	MOVEC	D3,CACR
	

	CMPI.B	#56,$FFFFFC02.W
	BNE.S	NO_TIME
	MOVE.L	#$88,$FFFF9800.W
NO_TIME	CMPI.B	#57,$FFFFFC02.W
	BNE.W	BOUCLE

FIN:	
	BSR.W	CLS_TRUE
	MOVE.L	SAVE_VBL,$70.W
	MOVE.B	SAVE_A07,$FFFFFA07.W
	MOVE.B	SAVE_A07,$FFFFFA13.W
* VIDE BUFFE CLAVIER
CLEAR_00:	MOVE.B	$FFFFFC02.W,D0
	BTST.B	#0,$FFFFFC00.W
	BNE.S	CLEAR_00
	MOVE.B	SAVE_A09,$FFFFFA09.W
	MOVE.B	SAVE_A09,$FFFFFA15.W

	BSR.W	VBL

	MOVE	OLDMODECODE,-(SP)
	MOVE	#3,-(SP)	
	move.l	#-1,-(sp)
	move.l	#-1,-(sp)
	MOVE	#5,-(SP)
	TRAP	#14
	LEA	14(SP),SP		

	BSR.W	RESTORE
	BSR.W	CLS
	MOVE.B	#8,$FFFFFC02.W
	MOVE.B	#15,$484.W

	CLR.L	-(SP)
	MOVE	#32,-(SP)
	TRAP	#1
	ADDQ.L	#6,SP

	CLR.L	-(SP)
	TRAP	#1

VBL:
	move.l	$466.w,d0
VSYNC:	cmp.l	$466.W,D0
	BEQ.S	VSYNC
	RTS

INITS:
	move.l	$44E.W,OLDXBIOS
	
	MOVE.L	#XBIOS2+(120*768),D0
	ANDI.L	#$FFFFFFFD,D0
	MOVE.L	D0,AFFECR

	MOVE.L	#XBIOS3+(120*768),D0
	ANDI.L	#$FFFFFFFD,D0
	MOVE.L	D0,WORKECR
	RTS

SYNCHRO:
	MOVE.L	AFFECR(PC),D0
	MOVE.L	WORKECR(PC),AFFECR
	MOVE.L	D0,WORKECR

	MOVE.B	AFFECR+1(PC),$FFFF8201.W
	move.b 	AFFECR+2(PC),$ffff8203.w
	move.b 	AFFECR+3(PC),$ffff820D.w
	RTS

RESTORE:
	MOVE.B	OLDXBIOS+1,$FFFF8201.W
	move.b 	OLDXBIOS+2,$ffff8203.w
	move.b 	OLDXBIOS+3,$ffff820D.w
	RTS

CLS:
	MOVE.L	$44E,A0
	MOVE	#7999,D0
LOOP_CLS:
	CLR.L	(A0)+
	DBF	D0,LOOP_CLS
	RTS

CLS_TRUE:
	MOVEQ	#9,D0
	MOVEC	D0,CACR

	MOVEQ	#0,D1
	MOVE.L	AFFECR,A0
	MOVE.L	WORKECR,A1
	MOVE	#(192*245)-1,D0
LOOP_CLS2:
	MOVE.L	D1,(A0)+
	MOVE.L	D1,(A1)+
	DBF	D0,LOOP_CLS2
	RTS

TRUE_COLOR:
	CLR.B	$FFFF8260.W
	MOVE	#384,$FFFF8210.W	;TAILLE EN MOT
	MOVE	#256,$FFFF8266.W	;256=TC
	MOVE	#254,$FFFF8282.W	;NBRE DE DEMI-LINES
	MOVE	#203,$FFFF8284.W	;FIN LIGNE HORIZONTALE
	MOVE	#39,$FFFF8286.W	;DEBUT LIGNE HORIZONTALE
	MOVE	#14+8,$FFFF8288.W	;FULL GAUCHE	
	MOVE	#175+8,$FFFF828A.W	;FULL DROIT
	MOVE	#216,$FFFF828C.W	;SYNCHRO HORIZONTAL
	MOVE	#625,$FFFF82A2.W	;NBRE DE CHAMPS
	MOVE	#613,$FFFF82A4.W	;FIN SCREEN
	MOVE	#47,$FFFF82A6.W	;DEBUT ECRAN
	MOVE	#87,$FFFF82A8.W	;FULL HAUT
	MOVE	#567,$FFFF82AA.W	;FULL BAS
	MOVE	#619,$FFFF82AC.W	;SYNCHRO VERTICAL
	MOVE	#385,$FFFF82C0.W	;????
	CLR	$FFFF82C2.W	;PIXEL OPTIONS
	RTS

NEW_VBL:
	ADDQ.L	#1,$466.W	
	RTE

ENABLE:
	RTE

MULS:
* BEGIN
	MOVEM	CLEAR,D0-D7/A0-A6
	LEA	TABLE_768-(120*4),A0
	MOVEQ	#0,D1
	MOVEQ	#119,D2
.LOOP
	MOVE.L	D1,(A0)+
	ADD.L	#768,D1
	DBF	D2,.LOOP	

* MIDDLE
	MOVEM	CLEAR,D0/D2-D7/A0-A6
	LEA	TABLE_768,A0
	MOVE	#239,D0
LOOP4:
	MOVE.L	D1,(A0)+
	ADD.L	#768,D1
	DBF	D0,LOOP4
* END
	MOVEM	CLEAR,D0/D2-D7/A0-A6
	LEA	TABLE_768+(240*4),A0
	MOVEQ	#119,D2
.LOOP
	MOVE.L	D1,(A0)+
	ADD.L	#768,D1
	DBF	D2,.LOOP	
	RTS


LINE:
* POSITION POINT
	MOVE	X_DEP(PC),D0
	MOVE	Y_DEP(PC),D1

	MOVE	X_DEP2(PC),D2
	MOVE	Y_DEP2(PC),D3
 
	move	d3,d4	;copy y2/d4
	sub	d1,d4	;y2-y1

	move	d2,d5	;copy x2/d4
	sub	d0,d5	;x2-x1

* DETERMINE TAILLE LIGNE
	MOVE	D5,D0
	BPL.S	SAVE_X_PLS
	NEG	D0		
SAVE_X_PLS MOVE	D4,D1
	BPL.S	SAVE_Y_PLS
	NEG	D1
SAVE_Y_PLS	
**** DETERMINE SI DX>DY
	MOVE	D0,D2	;DX>DY
	SUB	D1,D2
	BMI.W	Y_X	
* DX>DY
* TST SI X2>X1
	MOVE	X_DEP2,D2
	SUB	X_DEP,D2
	BPL.W	X2_X	
* X > X2
	MOVE	X_DEP,D0
	MOVE	X_DEP2,X_DEP
	MOVE	D0,X_DEP2

	MOVE	Y_DEP,D0
	MOVE	Y_DEP2,Y_DEP
	MOVE	D0,Y_DEP2

******* SI Y2>Y1
	MOVE	Y_DEP2,D0	;TST SI Y2>Y1
	SUB	Y_DEP,D0
	BPL.W	Y2_Y1
**** Y1>Y2
* INVERSION COORDONNEE
	MOVE	Y_DEP,D4				
	MOVE	Y_DEP2,Y_DEP
	MOVE	D4,Y_DEP2				

	MOVE	#1,INC

* CALCUL COEFF
	MOVEQ	#0,D4
	move	Y_DEP2,d4	;copy y2/d4
	sub	Y_DEP,d4	;y2-y1

	move	X_DEP2,d5	;copy x2/d4
	sub	X_DEP,d5	;x2-x1

	MOVE	Z_DEP,D0				
	MOVE	Z_DEP2,Z_DEP
	MOVE	D0,Z_DEP2				

	BRA.W	DROITE_1
Y2_Y1	
* CALCUL COEFF
	MOVEQ	#0,D4
	move	Y_DEP2,d4	;copy y2/d4
	sub	Y_DEP,d4	;y2-y1

	move	X_DEP2,d5	;copy x2/d4
	sub	X_DEP,d5	;x2-x1

	;MOVE	Z_DEP,D0
	;MOVE	Z_DEP2,Z_DEP
	;MOVE	D0,Z_DEP2

	MOVE	X_DEP,D0
	MOVE	X_DEP2,X_DEP
	MOVE	D0,X_DEP2
	MOVE	#-1,INC

	BRA.W	DROITE_1
*********
X2_X
**** SI Y2>Y1
	MOVE	Y_DEP2,D0
	SUB	Y_DEP,D0
	BPL.W	Y2_Y1_2
****** Y1>Y2
* INVERSION COORDONNEE
	MOVE	Y_DEP,D4
	MOVE	Y_DEP2,Y_DEP
	MOVE	D4,Y_DEP2

* CALCUL COEFF
	MOVEQ	#0,D4
	move	Y_DEP2,d4	;copy y2/d4
	sub	Y_DEP,d4	;y2-y1

	move	X_DEP2,d5	;copy x2/d4
	sub	X_DEP,d5	;x2-x1

	MOVE	#1,INC

	BRA.W	DROITE_1
Y2_Y1_2
* CALCUL COEFF
	MOVEQ	#0,D4
	move	Y_DEP2,d4	;copy y2/d4
	sub	Y_DEP,d4	;y2-y1

	move	X_DEP2,d5	;copy x2/d4
	sub	X_DEP,d5	;x2-x1

	MOVE	Z_DEP,D0
	MOVE	Z_DEP2,Z_DEP
	MOVE	D0,Z_DEP2

	MOVE	X_DEP,D0
	MOVE	X_DEP2,X_DEP
	MOVE	D0,X_DEP2

	MOVE	#-1,INC

	BRA.W	DROITE_1
********************************* DY>DX
Y_X
***** TST SI X2>X1
	MOVE	X_DEP2,D1	;X2>X1
	SUB	X_DEP,D1
	BPL.S	.X2_X1
****** X>X2
	MOVE	X_DEP,D1
	MOVE	X_DEP2,X_DEP
	MOVE	D1,X_DEP2

	MOVE	Y_DEP,D1
	MOVE	Y_DEP2,Y_DEP
	MOVE	D1,Y_DEP2

	MOVE	Z_DEP,D1
	MOVE	Z_DEP2,Z_DEP
	MOVE	D1,Z_DEP2

.X2_X1
****** TST Y1>Y2
	MOVE	Y_DEP2,D1
	SUB	Y_DEP,D1
	BPL.W	Y2_Y1_3
**** Y2>Y1
	MOVE	Y_DEP,D1
	MOVE	Y_DEP2,Y_DEP
	MOVE	D1,Y_DEP2

	MOVE	#$D941,INC

* CALCUL COEFF
	MOVEQ	#0,D4
	move	X_DEP2,d4	;copy y2/d4
	sub	X_DEP,d4	;y2-y1

	move	Y_DEP2,d5	;copy x2/d4
	sub	Y_DEP,d5	;x2-x1

	BRA.W	DROITE_2
Y2_Y1_3
*********
* CALCUL COEFF
	MOVEQ	#0,D4
	move	X_DEP2,d4	;copy y2/d4
	sub	X_DEP,d4	;y2-y1

	move	Y_DEP2,d5	;copy x2/d4
	sub	Y_DEP,d5	;x2-x1

	MOVE	X_DEP,D1
	MOVE	X_DEP2,X_DEP
	MOVE	D1,X_DEP2

	MOVE	Z_DEP,D1
	MOVE	Z_DEP2,Z_DEP
	MOVE	D1,Z_DEP2

	MOVE	#$9941,INC

	BRA.W	DROITE_2
**************
DROITE_1:
	MOVEQ	#9,D6
	MOVEC	D6,CACR

	lsl.L	d6,d4	;*d4 par 512
	
	DIVU	d5,d4	;coef directeur

	lsl	#7,d4	;*d4 par 128

	MOVEQ	#0,D0
	SUBX	D0,D4
	MOVE	D4,A5
*******
	MOVEQ	#0,D2
	MOVE	Z_DEP2,D0
	MOVE	(TABLE_COL,D0.W*2),D2
	
	MOVE.L	#$06420020,D1
	MOVE	Z_DEP,D0
	SUB	(TABLE_COL,D0.W*2),D2
	BPL.S	.NO3
	MOVE.L	#$04420020,D1
	NEG	D2
.NO3
	MOVEQ	#5,D3
	LSR	D3,D2
* TAILLE EN PIX
	MOVE	D5,D3

	DIVU	D2,D3	;COEFF D'INC

	MOVE	Z_DEP,D0
	MOVE	(TABLE_COL,D0.W*2),D2
	MOVE	D3,A4
************
	MOVE	INC,A2
	LEA	X_MIN,A0
	LEA	X_MAX,A1

	MOVE	X_DEP,D4
	MOVE	Y_DEP2,D3
	MOVE	D3,SAVE_Y
	MOVE	Y_DEP,SAVE_Y2

	MOVEQ	#0,D0
	MOVEC	D0,CACR
** CODE AUTO MODIFIANT
	MOVE.L	D1,.MODIF	;ADDQ/SUBQ
	
	MOVEQ	#9,D6
	MOVEC	D6,CACR
	MOVE	A4,D6	;COEFF COL
	MOVEQ	#0,D1	;SUBX

.LOOP:	
** XMIN
	CMP	(A0,D3.W*4),D4
	BGE.S	.NO
	MOVE	D4,(A0,D3.W*4)	;X
	MOVE	D2,2(A0,D3.W*4)	;COL
.NO
** XMAX
	CMP	(A1,D3.W*4),D4
	BLE.S	.NO2
	MOVE	D4,(A1,D3.W*4)	;X
	MOVE	D2,2(A1,D3.W*4)	;COL
.NO2

	ADD	A5,D0	;AUGMT COEFF
	SUBX	D1,D3	;OUI!

	SUBQ	#1,D6
	BGE.S	.NO4
	MOVE	A4,D6
.MODIF:	NOP
	NOP
.NO4

	ADD	A2,D4
	DBF	D5,.LOOP

	MOVEQ	#0,D6
	MOVEC	D6,CACR
	RTS

DROITE_2:
	moveq	#9,d6
	MOVEC	D6,CACR
	
	Lsl.L	d6,d4	;*d4 par 512
	
	DIVU	d5,d4	;coef directeur

	Lsl	#7,d4	;*d4 par 512

	MOVEQ	#0,D0
	SUBX	D0,D4
	MOVE	D4,A5

** COEFF COULEUR
	MOVEQ	#0,D2
	MOVE	Z_DEP2,D0
	MOVE	(TABLE_COL,D0.W*2),D2
	
	MOVE.L	#$06420020,D1
	MOVE	Z_DEP,D0
	SUB	(TABLE_COL,D0.W*2),D2
	BPL.S	.NO3
	NEG	D2
	MOVE.L	#$04420020,D1
.NO3
	MOVEQ	#5,D3
	LSR	D3,D2
* TAILLE EN PIX
	MOVE	D5,D3

	DIVU	D2,D3	;COEFF D'INC

	MOVE	Z_DEP,D0
	MOVE	(TABLE_COL,D0.W*2),D2
	MOVE	D3,A4
************
	LEA	X_MIN,A0
	LEA	X_MAX,A1

	MOVE	X_DEP,D4
	MOVE	Y_DEP2,D3
	MOVE	D3,SAVE_Y
	MOVE	Y_DEP,SAVE_Y2

	MOVEQ	#0,D0
	MOVEC	D0,CACR
** CODE AUTO MODIFIANT
	MOVE	INC,.MODIF2
	MOVE.L	D1,.MODIF

	MOVEQ	#9,D6
	MOVEC	D6,CACR
	MOVE	A4,D6	;COEFF COL
	MOVEQ	#0,D1	;SUBX

.LOOP:
** XMIN
	CMP	(A0,D3.W*4),D4
	BGE.S	.NO
	MOVE	D4,(A0,D3.W*4)	;X
	MOVE	D2,2(A0,D3.W*4)	;COL
.NO
** XMAX
	CMP	(A1,D3.W*4),D4
	BLE.S	.NO2
	MOVE	D4,(A1,D3.W*4)	;X
	MOVE	D2,2(A1,D3.W*4)	;COL
.NO2

	ADD	A5,D0
.MODIF2:	NOP

	SUBQ	#1,D6
	BGE.S	.NO4
	MOVE	A4,D6
.MODIF:	NOP
	NOP
.NO4
	
	SUBQ	#1,D3
	DBF	D5,.LOOP	

	MOVEQ	#0,D6
	MOVEC	D6,CACR
	RTS

********************************************************
*precalculs trigonometriques			*
*en entree:x_angle,y_angle,z_angle(angle de rotation)  *	
*en sortie:A,B,C,D,E,F,G,H,I*512		       	*				
********************************************************
TRIGO:
	LEA	COS_TAB,A4
	LEA	SIN_TAB,A5
	LEA	X_ANGLE,A6
	MOVE.W	(A6)+,D2	;d2=x angle
	MOVE.W	(A6)+,D1	;d1=y ...
	MOVE.W	(A6)+,D0	;d0=z ...

	MOVE.W	(A5,D2.W),D5	;d5=sinx
	MOVE.W	(A4,D2.W),D4	;d4=cosx
	MOVE.W	(A5,D1.W),D3	;d3=siny
	MOVE.W	(A4,D1.W),D2	;d2=cosy
	MOVE.W	(A5,D0.W),D1	;d1=sinz
	MOVE.W	(A4,D0.W),D0	;d0=cosz

	LEA	VAR_3D,A6		;zone sauvegarde calc intermediaire
	MOVEQ	#9,D7		;nombre de decalages pour/512

	;**********CALCUL DE C************
SP_C
	MOVE	D3,D6		;siny
	NEG	D6		;-siny	
	MOVE	D6,(A6)+
	;**********CALCUL DE F************
SP_F	
	MOVE	D2,D6		;cosy
	MULS	D5,D6		;cosy*sinx
	LSR.L	D7,D6		;/512
	MOVE	D6,(A6)+
	;**********CALCUL DE I************
SP_I
	MOVE	D2,D6		;cosy
	MULS	D4,D6		;cosy*cosx
	LSR.L	D7,D6		;/512
	MOVE	D6,(A6)+		
	;**********CALCUL DE A************
SP_A
	MOVE	D0,D6		;cosz
	MULS	D2,D6		;cosz*cosy
	LSR.L	D7,D6		
	MOVE	D6,(A6)+
	;**********CALCUL DE D************
SP_D
	MOVE	D1,D6		;sinz	
	MULS	D4,D6		;sinz*cosx
	LSR.L	D7,D6
	MOVE	D6,A4

	MOVE	D0,D6		;cosz
	MULS	D3,D6		;cosz*siny
	LSR.L	D7,D6		
	MULS	D5,D6		;cosz*siny*sinx
	LSR.L	D7,D6
	SUB	A4,D6		;(cosz*siny*sinx)-(sinz*cosx)
	MOVE	D6,(A6)+
	;**********CALCUL DE G************
SP_G
	MOVE	D7,D6		;sinz
	MULS	D5,D6		;sinz*sinx
	LSR.L	D7,D6
	MOVE	D6,A4

	MOVE	D0,D6		;cosz
	MULS	D3,D6		;cosz*siny
	LSR.L	D7,D6
	MULS	D4,D6		;cosz*siny*cosx
	LSR.L	D7,D6
	ADD	A4,D6		;(cosz*siny*cosx)+(sinz*sinx)
	MOVE	D6,(A6)+
	;**********CALCUL DE B************
SP_B
	MOVE	D1,D6		;sinz		
	MULS	D2,D6		;sinz*cosy
	LSR.L	D7,D6
	MOVE	D6,(A6)+
	;**********CALCUL DE E************
SP_E
	MOVE	D0,D6		;cosz
	MULS	D4,D6		;cosz*cosx
	LSR.L	D7,D6
	MOVE	D6,A4

	MOVE	D1,D6		;sinz
	MULS	D3,D6		;sinz*siny
	LSR.L	D7,D6
	MULS	D5,D6		;sinz*siny*sinx
	LSR.L	D7,D6
	ADD	A4,D6		;(sinz*siny*sinx)+(cosz*cosx)
	MOVE	D6,(A6)+	
	;**********CALCUL DE H*************
SP_H
	MOVE	D0,D6		;cosz
	MULS	D5,D6		;cosz*sinx
	LSR.L	D7,D6	
	MOVE	D6,A4

	MOVE	D1,D6		;sinz
	MULS	D3,D6		;sinz*siny		
	LSR.L	D7,D6
	MULS	D4,D6		;sinz*siny*cosx
	LSR.L	D7,D6
	SUB	A4,D6		;(sinz*siny*cosx)-(cosz*sinx)
	MOVE	D6,(A6)+
	RTS

PREP_COLOR:
	MOVEM	CLEAR,D0-D7/A0-A6
	LEA	TABLE_COL,A0
	MOVE	#32*63,D2

	MOVE	#(800/12)-1,D0
.LOOP:
	MOVEQ	#12-1,D1
.LOOP1:
	MOVE	D2,(A0)+
	DBF	D1,.LOOP1
	SUB	#32,D2
	DBF	D0,.LOOP
********
	LEA	TABLE_COL-1800,A0

	MOVE	#(900)-1,D0
.LOOP3:
	MOVE	#-1,(A0)+
	DBF	D0,.LOOP3
	RTS

	SECTION	DATA

COS_TAB	INCBIN	E:\LINE.S\COSIN.DAT
SIN_TAB	EQU	COS_TAB+720
POSITION:		
	DC	0,100,0
	DC	100,0,0

	DC	0,100,0
	DC	-100,0,0

	SECTION	BSS

CLEAR:	DS.L	16
AFFECR:	DS.L	1
SAVE_A07:	DS.B	1
SAVE_A09:	DS.B	1
SAVE_VBL:	DS.L	1
OLDXBIOS:	DS.L	1
WORKECR:	DS.L	1
OLDMODECODE:DS.L	1
INC:	DS	1

	DS.L	120
TABLE_768:	DS.L	240
	DS.L	120

POS_3D:	DS	6*NBR_DROITE

	DS	900
TABLE_COL:	DS	900

X_DEP	DS.W	1
Y_DEP	DS.W	1
Z_DEP	DS.W	1

X_DEP2	DS.W	1
Y_DEP2	DS.W	1
Z_DEP2	DS.W	1

X_ANGLE	DS.W	1
Y_ANGLE	DS.W	1
Z_ANGLE	DS.W	1

X_MIN:	DS	400*2
X_MAX:	DS	400*2

VAR_3D	DS.W	9	
* POINTS
SAVE_X:	DS	1
SAVE_Y:	DS	1
SAVE_Y2:	DS	1
XBIOS2:	DS.B	(768*240)*2
	DS.B	4
XBIOS3:	DS.B	(768*240)*2