; ** ROUT DE LINE FULL DSP

	OPT	IL

	 nolist
	
ReadHost	MACRO	dest		
	jclr	#0,x:<<$FFE9,*	;NVELLE VAL ??
	movep	x:<<$FFEB,dest
	ENDM

WritHost	MACRO	srce
	jclr	#1,x:<<$FFE9,*	;PREC VALEUR LU ??
	movep	srce,x:<<$FFEB
	ENDM
	
	org	p:$0		; Vecteur RESET
	jmp	>Debut

	org	p:$40		; Debut du code
Debut

; ** SIGNAUX DE TEST, DSP ACTIF ???
	ReadHost	X0

	WritHost	#>12345678

	JSR	<TABLE_DIV
	JSR	<PREP_COLOR
YET
	WritHost	#>$99

; ** TRANSFERT DES VALEURS VAR_3D
	ReadHost	R1	;nb iterations
	
	MOVE	#>870,R0

	DO	#9,LABEL
	ReadHost	Y:(R0)+
LABEL	
; ** LIT TOUTES LES POSITIONS 3D DES DROITES
	MOVE	#>870+9,R0

	DO	R1,LABEL2			
	ReadHost	Y:(R0)+	;POS 3D X
	ReadHost	Y:(R0)+	;POS 3D Y
	ReadHost	Y:(R0)+	;POS 3D Z
LABEL2
	ReadHost	Y:0	;ADR ECRAN
;*******
	MOVE	R1,R2
	MOVE	#>870,R0
	MOVE	#>3,R1

	JSR	<CONVERT
	MOVE	R2,R1
;***********
	MOVE	#>870+9,R0
	JSR	<CONVERT

; ** CALCUL LES POS 3D->2D
	MOVE	#>870+9,R0	;OFFSET DES X-Y-Z
	MOVE	#>2100,R3
	CLR	B	#>512,R4
	MOVE	X:(512),N1	;/9->([512])
	MOVE	#>192,N0
	MOVE	#>120,N2
	MOVE	#>870,N3
	MOVE	N3,R5
	MOVE	Y:(R0)+,X0	;X

	DO	R1,LABEL3

	MOVE	Y:(R0)+,X1	; COORD Y
	MOVE	Y:(R5)+,Y1
	MOVE	Y:(R0)+,Y0

	MPY	X0,Y1,A	Y:(R5)+,Y1
	MAC	-X1,Y1,A	Y:(R5)+,Y1
	MAC	Y0,Y1,A	R4,B1

; ** *(1/512)
	MOVE	X0,B0

	MOVE	A0,Y1
	MOVE	N1,X0	;(A0)*(1/512)
	MPYR	X0,Y1,A	B0,X0

	MOVE	A1,Y1

	SUB	Y1,B	Y:(R5)+,Y1
;*********
	MPY	X0,Y1,A	Y:(R5)+,Y1
	MAC	-X1,Y1,A	Y:(R5)+,Y1
	MAC	Y0,Y1,A	B1,r2	;SAUVE DE B

	ASR	A	X0,B0
	MOVE	X:(r2),Y1
; **** DIVISION INVERSE ...
	MOVE	A0,X0
	MOVE	N0,A	;X (+191)
	MACR	X0,Y1,A	B0,X0

	MOVE	Y:(R5)+,Y1
; *** CALCUL DE B
	MPY	X0,Y1,B	Y:(R5)+,Y1
	MAC	-X1,Y1,B	Y:(R5)+,Y1	X:(R2),X0
	MAC	Y0,Y1,B	N3,R5

	ASR	B	A1,Y:(R3)+
; ***
	MOVE	B0,X1
	MOVE	N2,B	;Y (+120)
	MACR	X1,X0,B	Y:(R0)+,X0	;X
; ****

	MOVE	B1,Y:(R3)+		;SAVE Y
	MOVE	r2,Y:(R3)+		;SAVE Z
LABEL3
; *** DETERMINE TYPE DE DROITE+COEFF+...
	MOVE	R1,A
	LSR	A
	MOVE	A,R6
	MOVE	R6,N6

	MOVE	#>782,R3
	MOVE	#>2100,R0	;COORD X
	MOVE	#>2100+1,R1	;COORD Y
	MOVE	#>2100+2,R2	;COORD Z
	MOVE	#>3,N0
	MOVE	N0,N1
	MOVE	N0,N2
	MOVE	#>512/2,N3
	MOVE	#>128/2,N4
	MOVE	#>-768,N7

	DO	R6,LABEL7
	MOVE	#>768/2,N5
	JSR	<LINE

; ** INC 6 OCTETS
	LUA	(R0)+N0,R0
	LUA	(R1)+N1,R1
	LUA	(R2)+N2,R2
	LUA	(R0)+N0,R0
	LUA	(R1)+N1,R1
	LUA	(R2)+N2,R2
LABEL7

; ** ENVOI LES RESULTATS AU DSP
	MOVE	#>782,R3

	DO	N6,LABEL4
	WritHost	X:(R3)+	;COEFF
	WritHost	X:(R3)+	;ECRAN
	WritHost	X:(R3)+	;INC X
	WritHost	X:(R3)+	;INC Y
	WritHost	X:(R3)+	;DIST LIGNE
	WritHost	X:(R3)+	;COL DEP
	WritHost	X:(R3)+	;COEFF COL
	WritHost	X:(R3)+	;INC COL
LABEL4
;***********

	JMP	<YET
; ** FIN DU CODE 

CONVERT:
; ** CONVERTIT 16 BIT SIGNEE EN 24 BITS SIGNEE
	MOVE	#$FFFF,X0

	DO	R1,LABEL5
	CLR	A
	MOVE	Y:(R0),A		

	JCLR	#$F,A1,OK
	NEG	A
	AND	X0,A
	NEG	A
OK
	MOVE	A1,Y:(R0)+
; **
	CLR	A
	MOVE	Y:(R0),A		

	JCLR	#$F,A1,OK2
	NEG	A
	AND	X0,A
	NEG	A
OK2
	MOVE	A1,Y:(R0)+
; **
	CLR	A
	MOVE	Y:(R0),A		

	JCLR	#$F,A1,OK3
	NEG	A
	AND	X0,A
	NEG	A
OK3:
	MOVE	A1,Y:(R0)+
LABEL5:	RTS

TABLE_DIV:
; ** 8/4=2 OU 8*(1/4)=2
	MOVE	#>0,R0
	CLR	B	#>1,X0

	DO	#780,LABEL6
	CLR	A
	MOVE	X0,A0
	ADD	X0,B
	MOVE	B1,Y1
	Rep	#48
	div	Y1,a

	MOVE	A0,X:(R0)+
LABEL6
	MOVE	#>$7FFFFF,X0
	MOVE	X0,X:(0)
	MOVE	X0,X:(1)
	RTS

VERTICAL:
	MOVE	#>0,X0
	MOVE	X0,X:(R3)+

; *** SWAP Z/Z2
	MOVE	Y:(R2+N2),Y0
	MOVE	Y:(R2),X1
	MOVE	Y0,Y:(R2)
	MOVE	X1,Y:(R2+N2)

	MOVE	Y:(R1+N1),Y1

	MOVE	Y1,A
	MOVE	Y:(R1),X1
	SUB	X1,A
	JPL	<NO_Y2
	ABS	A	Y:(R1),Y1

; *** SWAP Z/Z2
	MOVE	Y:(R2+N2),Y0
	MOVE	Y:(R2),X1
	MOVE	Y0,Y:(R2)
	MOVE	X1,Y:(R2+N2)
NO_Y2
	MOVE	A1,R4

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0	;ADR ECRAN
	MOVE	#>768/2,X1
	MAC	Y1,X1,A	Y:(R0),B	;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>-768,X1
	MOVE	B1,X:(R3)+	;ECRAN
	MOVE	#>3000,N5

	MOVE	Y:(R2+N2),R5
	MOVE	X1,X:(R3)+	;INC X
	MOVE	X0,X:(R3)+	;INC Y
	MOVE	R4,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),Y0
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_7
	ABS	A	#>-32,Y1	;INC COL
OK_7

	MOVE	A1,X1
	MPY	Y0,X1,A	R4,X1
; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS

HORIZONTAL:
	MOVE	#>3000,N5
	MOVE	Y:(R0+N0),A
	MOVE	Y:(R0),B
	SUB	B,A	#>0,Y1
	JPL	<NO_NEG
	ABS	A	Y:(R0+N0),B

	MOVE	Y:(R2+N2),X1
	MOVE	Y:(R2),Y0
	MOVE	X1,Y:(R2)
	MOVE	Y0,Y:(R2+N2)
NO_NEG
	MOVE	A,R4

	MOVE	Y1,X:(R3)+

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0
	MOVE	#>768/2,X1
	MOVE	Y:(R1),Y0	;Y2
	MAC	Y0,X1,A
	MOVE	A0,A1

	ADDL	A,B	#>2,X0
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	Y:(R2+N2),R5
	MOVE	X0,X:(R3)+	;INC X
	MOVE	Y1,X:(R3)+	;INC Y
	MOVE	R4,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),Y0
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_8
	ABS	A	#>-32,Y1	;INC COL
OK_8
	MOVE	A1,X1
	MPY	Y0,X1,A	R4,X1

; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS

LINE:
; ******* X
	MOVE	Y:(R0+N0),A	;X2
	MOVE	Y:(R0),X1		;X1
; ** X2-X1
	SUB	X1,A
	JEQ	<VERTICAL
; ******* Y
	MOVE	Y:(R1+N1),B	;Y2
	MOVE	Y:(R1),X1		;Y1
; ** Y2-Y1
	SUB	X1,B
	JEQ	<HORIZONTAL
; ** VAL ABS DE X,Y
	ABS	A	;X
	ABS	B	;Y
	MOVE	A,R7
	MOVE	B,R5
	MOVE	R5,Y0
; ** DX>DY ?
	CMP	A,B
	JGE	<Y_X
; ** X2>X1 ?
	MOVE	Y:(R0+N0),A	;X2
	MOVE	Y:(R0),X1		;X1
	SUB	X1,A		;DX
	JPL	<X2_X
; ** SWAP X1,X2
	MOVE	Y:(R0),X0
	MOVE	Y:(R0+N0),X1
	MOVE	X0,Y:(R0+N0)	
	MOVE	X1,Y:(R0)	
; ** SWAP Y1,Y2
	MOVE	Y:(R1),X0
	MOVE	Y:(R1+N1),X1
	MOVE	X0,Y:(R1+N1)	
	MOVE	X1,Y:(R1)	

; ** SWAP Z1,Z2
	MOVE	Y:(R2),X0
	MOVE	Y:(R2+N2),X1
	MOVE	X0,Y:(R2+N2)	
	MOVE	X1,Y:(R2)
	
; ** Y2>Y1 ?
	MOVE	Y:(R1+N1),A
	MOVE	Y:(R1),X0
	SUB	X0,A	N3,X1
	JPL	<Y2_Y1
; *******************
	MPY	Y0,X1,A	X:(R7),X1

; **** DIVISION INVERSE ...
	MOVE	A0,X0
	MPYR	X0,X1,A	N4,Y1

	MOVE	A,X0
	MPY	Y1,X0,A	N5,X1

	MOVE	A0,X:(R3)+	;COEFF
	MOVE	#>3000,N5

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0	;ADR ECRAN
	MOVE	Y:(R1),X0	;Y2
	MAC	X0,X1,A	Y:(R0),B	;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>2,X0
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	Y:(R2+N2),R5
	MOVE	X0,X:(R3)+	;INC X
	MOVE	N7,X:(R3)+	;INC Y
	MOVE	R7,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),Y0
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_1
	ABS	A	#>-32,Y1	;INC COL
OK_1
	MOVE	A1,X1
	MPY	X1,Y0,A	R7,X1
; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS
Y2_Y1
; ************************

	MPY	Y0,X1,A	X:(R7),X1

; **** DIVISION INVERSE ...
	MOVE	A0,X0
	MPYR	X0,X1,A	N4,X0

	MOVE	A,Y1
	MPY	X0,Y1,A	N5,X1
	
	MOVE	A0,X:(R3)+	;COEFF
	MOVE	#>3000,N5

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0	;ADR ECRAN
	MOVE	Y:(R1),X0	;Y2
	MAC	X0,X1,A	Y:(R0),B	;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>768,X1
	MOVE	#>2,X0
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	Y:(R2+N2),R5
	MOVE	X0,X:(R3)+	;INC X
	MOVE	X1,X:(R3)+	;INC Y
	MOVE	R7,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),X1
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_2
	ABS	A	#>-32,Y1	;INC COL
OK_2

	MOVE	A1,Y0
	MPY	X1,Y0,A	R7,X1
; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS	
X2_X	
; ** Y2>Y1 ?
; ** SWAP Z1,Z2
	MOVE	Y:(R2),X0
	MOVE	Y:(R2+N2),X1
	MOVE	X0,Y:(R2+N2)	
	MOVE	X1,Y:(R2)	

	MOVE	Y:(R1+N1),A
	MOVE	Y:(R1),X0
	SUB	X0,A	N3,X1
	JPL	<Y2_Y1_2
;******************
	MPY	Y0,X1,A	X:(R7),X1

; **** DIVISION INVERSE ...
	MOVE	A0,X0
	MPYR	X0,X1,A	N4,X0

	MOVE	A,Y1
	MPY	X0,Y1,A	N5,X1
	
	MOVE	A0,X:(R3)+	;COEFF
	MOVE	#>3000,N5

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0	;ADR ECRAN
	MOVE	Y:(R1+N1),X0	;Y2
	MAC	X0,X1,A	Y:(R0+N0),B	;XDEP
	MOVE	A0,A1
	
	ADDL	A,B	#>768,X1
	MOVE	#>-2,X0
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	Y:(R2+N2),R5
	MOVE	X0,X:(R3)+	;INC X
	MOVE	X1,X:(R3)+	;INC Y
	MOVE	R7,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),X1
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_3
	ABS	A	#>-32,Y1	;INC COL
OK_3
	MOVE	A1,Y0
	MPY	X1,Y0,A	R7,X1
; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS
Y2_Y1_2
;**************************************
	MPY	Y0,X1,A	X:(R7),X1

; **** DIVISION INVERSE ...
	MOVE	A0,X0
	MPYR	X0,X1,A	N4,X0

	MOVE	A,Y1
	MPY	X0,Y1,A	N5,X1
	
	MOVE	A0,X:(R3)+	;COEFF
	MOVE	#>3000,N5

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0	;ADR ECRAN
	MOVE	Y:(R1+N1),X0	;Y2
	MAC	X0,X1,A	Y:(R0+N0),B	;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>-2,X0
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	Y:(R2+N2),R5
	MOVE	X0,X:(R3)+	;INC X
	MOVE	N7,X:(R3)+	;INC Y
	MOVE	R7,X:(R3)+	;DIST LIGNE

; ** CALCUL LIGHT
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	MOVE	X:(32),X1
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_4
	ABS	A	#>-32,Y1	;INC COL
OK_4
	MOVE	A1,Y0
	MPY	Y0,X1,A	R7,X1
; ** TAILLE PIX
	MOVE	A1,R7
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R7),Y0
; ** DIV
	MPYR	X1,Y0,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS
Y_X
; ***** TST SI X2>X1
	MOVE	Y:(R0+N0),A
	MOVE	Y:(R0),X0
	SUB	X0,A
	JPL	<X2_X1
; *******
; ** SWAP X1,X2
	MOVE	Y:(R0),X0
	MOVE	Y:(R0+N0),X1
	MOVE	X0,Y:(R0+N0)	
	MOVE	X1,Y:(R0)	
; ** SWAP Y1,Y2
	MOVE	Y:(R1),X0
	MOVE	Y:(R1+N1),X1
	MOVE	X0,Y:(R1+N1)	
	MOVE	X1,Y:(R1)	
; ** SWAP Z1,Z2
	MOVE	Y:(R2),X0
	MOVE	Y:(R2+N2),X1
	MOVE	X0,Y:(R2+N2)	
	MOVE	X1,Y:(R2)	
X2_X1
; ****** TST Y1>Y2
	MOVE	Y:(R1+N1),A
	MOVE	Y:(R1),X0
	SUB	X0,A	N3,X1
	JPL	<Y2_Y1_3
; **********
	MOVE	R7,X0
	MPY	X0,X1,B	X:(R5),X1

; **** DIVISION INVERSE ...
	MOVE	B0,Y1
	MPY	Y1,X1,A	N4,X1

	MOVE	A1,X0
	MPY	X0,X1,A	Y:(R1),X0	;Y2
	MOVE	A0,R7
	MOVE	N5,X1
	LUA	(R7)-,R7

	MOVE	R7,X:(R3)+	;COEFF

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0
	MAC	X0,X1,A	Y:(R0),B	;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>2,X1	;X
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	#>3000,N5
	MOVE	N7,X:(R3)+	;INC X
	MOVE	X1,X:(R3)+	;INC Y
	MOVE	R5,X:(R3)+	;DIST LIGNE
	MOVE	R5,R7

; ** CALCUL LIGHT
	MOVE	Y:(R2+N2),R5
	MOVE	X:(32),Y0
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	NOP
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_5
	ABS	A	#>-32,Y1	;INC COL
OK_5
	MOVE	A1,X1
	MPY	X1,Y0,A	R7,X1

	MOVE	A1,R5
; ** TAILLE PIX
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R5),Y0
; ** DIV
	MPY	Y0,X1,A	;COEFF INC/COL

	MOVE	A1,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS
Y2_Y1_3 
; *********************
	MOVE	R7,X0
	MPY	X0,X1,B	X:(R5),X1

; **** DIVISION INVERSE ...
	MOVE	B0,Y1
	MPY	Y1,X1,A	N4,X1

	MOVE	A1,X0
	MPY	X0,X1,A	Y:(R1+N1),X0	;Y2
	MOVE	A0,R7
	MOVE	N5,Y1
	LUA	(R7)-,R7

	MOVE	R7,X:(R3)+	;COEFF

; ** ADR ECRAN+(Y*768)+(X*2)
	MOVE	Y:0,A0
	MAC	X0,Y1,A	Y:(R0+N0),B ;XDEP
	MOVE	A0,A1

	ADDL	A,B	#>-2,X1	;X
	MOVE	B1,X:(R3)+	;ECRAN

	MOVE	N7,X:(R3)+	;INC X
	MOVE	X1,X:(R3)+	;INC Y
	MOVE	R5,X:(R3)+	;DIST LIGNE
	MOVE	R5,R7

; ** SWAP Z1,Z2
	MOVE	#>3000,N5
	MOVE	Y:(R2),X0
	MOVE	Y:(R2+N2),X1
	MOVE	X0,Y:(R2+N2)	
	MOVE	X1,Y:(R2)	

; ** CALCUL LIGHT
	MOVE	Y:(R2+N2),R5
	MOVE	X:(32),Y0
	MOVE	Y:(R5+N5),A
	
	MOVE	Y:(R2),R5
	NOP
	MOVE	Y:(R5+N5),X0

	SUB	X0,A	#>32,Y1	;INC COL
	JPL	<OK_6
	ABS	A	#>-32,Y1	;INC COL
OK_6
	MOVE	A1,X1
	MPY	X1,Y0,A	R7,X1

	MOVE	A1,R5
; ** TAILLE PIX
	MOVE	X0,X:(R3)+	;COL DEP
	MOVE	X:(R5),Y0
; ** DIV
	MPY	Y0,X1,A	;COEFF INC/COL

	MOVE	A,X:(R3)+	;COEFF COL
	MOVE	Y1,X:(R3)+	;INC COL
	RTS

PREP_COLOR:
	MOVE	#>3000,R0
	MOVE	#>32*63,A
	MOVE	#>32,X0

	DO	#800/12,LABEL8
	DO	#12,LABEL9
	MOVE	A,Y:(R0)+
LABEL9
	SUB	X0,A
LABEL8
	RTS
	end