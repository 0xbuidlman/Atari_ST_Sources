 MOVE.L A7,A5
 MOVE.L 4(A5),A5
 MOVE.L $C(A5),D0
 ADD.L $14(A5),D0
 ADD.L $1C(A5),D0
 ADD.L #$500,D0

 MOVE.L D0,D1
 ADD.L A5,D1
 AND.L #-2,D1
 MOVE.L D1,A7
 MOVE.L D0,-(SP)
 MOVE.L A5,-(SP)
 CLR.W -(SP)
 MOVE.W #$4A,-(SP)
 TRAP #1
 ADD.L #12,SP

SCR=449792
SCR1=408064
 BRA START
BUFFER: DS.B 11*128+1000

START:
 CLR.L -(SP)
 MOVE.W #$20,-(SP)
 TRAP #1
 ADDQ.W #6,SP
 MOVE.L D0,SSP

 LEA ASCII,A0
 CLR.L D0
 CLR.L D1
CHECKSUM:
 CMP.L #ASCIIEND,A0
 BEQ CHECKEND
 MOVE.B (A0)+,D0
 ADD.L D0,D1
 BRA CHECKSUM
CHECKEND:
 CMP.L #45986,D1
 BNE CHECKEND

 MOVE.W #$2700,SR

; MOVE.W #6,-(SP)
; MOVE.W #26,-(SP)
; TRAP #14
; ADDQ.L #4,SP

 PEA MOUSEOFF
 MOVE.W #1,-(SP)
 MOVE.W #25,-(SP)
 TRAP #14
 ADDQ.L #8,SP

 CLR.W -(SP)
 PEA SCR
 PEA SCR
 MOVE.W #5,-(SP)
 TRAP #14
 ADD.W #12,SP

 BSR SWEDEN

 LEA SCR,A0
 LEA SCR1,A1
 MOVE.W #7999,D0
 BSR COPY

 LEA $FF8240,A0
 LEA OLPAL,A1
 MOVEQ #7,D0
 BSR COPY
 LEA PALT,A0
 LEA $FF8240,A1
 MOVEQ #7,D0
 BSR COPY

 MOVEQ #0,D0
 JSR MUSIC+84

 MOVE.L $70,OLDVBL
 MOVE.L #VBL,$70
 LEA ASCII,A4    ;A4=CONSTANT!
 MOVE.W #$2300,SR
 BSR INITRAST

MAIN:
 CMP.B #$14,$FFFC02
 BEQ YESTRAIN
 CMP.B #$39,$FFFC02
 BNE MAIN

EXIT:
 MOVE.W #$2700,SR

 BSR INITRAIN
 BSR REMOVERAST
 MOVE.L OLDVBL,$70
 MOVE.W #$2300,SR

 BSR VOL0

 LEA OLPAL,A0
 LEA $FF8240,A1
 MOVEQ #7,D0
 BSR COPY

 MOVE.W #0,-(SP)
 PEA $78000
 PEA $78000
 MOVE.W #5,-(SP)
 TRAP #14
 ADD.W #12,SP

 MOVE.L SSP,-(SP)
 MOVE.W #$20,-(SP)
 TRAP #1
 ADD.L #6,SP

; MOVE.W #6,-(SP)
; MOVE.W #27,-(SP)
; TRAP #14
; ADDQ.L #4,SP

 PEA MOUSEON
 MOVE.W #1,-(SP)
 MOVE.W #25,-(SP)
 TRAP #14
 ADDQ.L #8,SP

 PEA NULL
 PEA NULL
 PEA NAME
 CLR.W -(SP)
 MOVE.W #$4B,-(SP)
 TRAP #1
 ADD.L #16,SP
 ILLEGAL

YESTRAIN:
 MOVE.W #$4E71,TNO
 BRA EXIT

TRAIN:  ;SUBROUTINE ON $300
 MOVE.W #$770,$FF8240
 MOVE.L A0,TRSP1
 SUBQ.L #4,(SP)
 MOVE.L (SP),A0
 MOVE.L #$41E800A0,(A0)
TNO:
 BRA.S TN1  ;REPLACE WITH NOP IF TRAIN
 MOVE.L #$3D7C0022,(A0)+
 MOVE.L #$4F684E71,(A0)+
 MOVE.L #$4E714E71,(A0)+
TN1:
 MOVE.L TRSP1,A0
 RTS
TRSP1:
 DC.L 0

INITRAIN:
 LEA TRAIN,A0
 LEA $300,A1
TRLOP:
 CMP.L #TRSP1,A0
 BEQ TRFIN
 MOVE.W (A0)+,(A1)+
 BRA TRLOP
TRFIN:
 RTS

VBL:

 CLR.B $FFFA1B
 MOVEQ #1,D0
 MOVE.B D0,$FFFA21
 MOVE.B #8,$FFFA1B
 CLR.W LINE
 CLR.W $FF8240
 LEA COLTAB,A0
 MOVE.L A0,PEKAR+2
 MOVE.L #COLTAB1,PEKAR1+2

 MOVE.L SCREEN,D0
 MOVE.L SCREEN1,D1
 EXG.L D0,D1
 MOVE.L D0,SCREEN
 MOVE.L D1,SCREEN1
 MOVE.L D0,A6       ;SCREEN TO PRINT ON

 BSR PUTPIC
 BSR SCROLL
 BSR BALLS

 MOVE.L A4,-(SP)
 JSR MUSIC+370
 MOVE.L (SP)+,A4

 BSR MOVBAL     ;MOVE BALLS
 MOVE.B SCREEN+1,$FF8201
 MOVE.B SCREEN+2,$FF8203
 MOVE.W #$2300,SR
 RTE
BALLS:
 LEA BALL,A2
 MOVE.L A6,A5
 ADD.W #24,A5
 MOVEQ #0,D2

 MOVE.L A5,A1
BALP1:
 ADD.W BALTAB,A1
 MOVE.L A2,A0
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP2:
 ADD.W BALTAB+2,A1
 ADD.W #8,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP3:
 ADD.W BALTAB+4,A1
 ADD.W #16,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP4:
 ADD.W BALTAB+6,A1
 ADD.W #24,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP5:
 ADD.W BALTAB+8,A1
 ADD.W #32,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP6:
 ADD.W BALTAB+10,A1
 ADD.W #40,A1
 BSR PUTBAL

 MOVE.L A5,A1
BALP7:
 ADD.W BALTAB+12,A1
 MOVE.L A2,A0
 ADD.W #48,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP8:
 ADD.W BALTAB+14,A1
 ADD.W #56,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP9:
 ADD.W BALTAB+16,A1
 ADD.W #64,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP10:
 ADD.W BALTAB+18,A1
 ADD.W #72,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP11:
 ADD.W BALTAB+20,A1
 ADD.W #80,A1
 BSR PUTBAL

 MOVE.L A5,A1
 MOVE.L A2,A0
BALP12:
 ADD.W BALTAB+22,A1
 ADD.W #88,A1
 BSR PUTBAL

 RTS

PUTBAL:
 MOVE.L D2,-160(A1)
 MOVE.L D2,-320(A1)
 MOVE.L D2,-480(A1)
 MOVE.L D2,-640(A1)
 MOVE.L (A0)+,(A1)
 MOVE.L (A0)+,160(A1)
 MOVE.L (A0)+,320(A1)
 MOVE.L (A0)+,480(A1)
 MOVE.L (A0)+,640(A1)
 MOVE.L (A0)+,800(A1)
 MOVE.L (A0)+,960(A1)
 MOVE.L (A0)+,1120(A1)
 MOVE.L (A0)+,1280(A1)
 MOVE.L (A0)+,1440(A1)
 MOVE.L (A0)+,1600(A1)
 MOVE.L (A0)+,1760(A1)
 MOVE.L (A0)+,1920(A1)
 MOVE.L (A0)+,2080(A1)
 MOVE.L (A0)+,2240(A1)
 MOVE.L (A0)+,2400(A1)
 MOVE.L D2,2560(A1)
 MOVE.L D2,2720(A1)
 MOVE.L D2,2880(A1)
 MOVE.L D2,3040(A1)
 RTS

MOVBAL:
 MOVEQ #2,D0
 LEA BALTABSLUT,A0
 LEA BALTAB,A2
 LEA MOVTAB,A3
MOVB2:           ;LOOP
 MOVE.L (A3)+,A1 ;NEW PEK ADRESS
 MOVE.L A1,D1
 TST.L D1        ;FINISHED?
 BMI MOVB1
 ADD.L D0,(A1)   ;NO, ADD 2 TO PEK
 CMP.L (A1),A0   ;BALTAB END?
 BHI MOVB2
 MOVE.L A2,(A1)  ;YES, RESET PEK
 JMP MOVB2       ;BACK TO LOOP
MOVB1:
 RTS

MOVTAB:
 DC.L BALP1+2,BALP2+2,BALP3+2,BALP4+2,BALP5+2,BALP6+2,BALP7+2,BALP8+2,BALP9+2,BALP10+2
 DC.L BALP11+2,BALP12+2
 DC.L $FFFFFFFF

SCROLL: ;PEK!
 LEA BUFFER,A0
 CMP.L #BUFFER+4*32,A0
 BLO SCIP

 MOVE.L #BUFFER,SCROLL+2
 LEA BUFFER,A0
 LEA BUFFER+128,A1  ;SCROLL BUFFER LEFT 1 CHAR
 LEA BUFFER,A2
 DS.W 320,$24D9   ;MOVE.L (A1)+,(A2)+

 CLR.W D0
 MOVE.B (A4)+,D0  ;PRINT NEW CHAR
 CMP.B #$FF,D0
 BNE SCIP1
 CMP.B #$FF,(A4)
 BNE SCIP4

 MOVE.L #OFFADTAB,SCIP3+2
 MOVE.L OFFADTAB,PEK2+2
 LEA ASCII,A4
 MOVE.B (A4)+,D0
 JMP SCIP1
SCIP4:

 ADDQ.L #4,SCIP3+2
SCIP3:    ;PEK!
 MOVE.L OFFADTAB,PEK2+2  ;NEW WOB TAB
 MOVE.B (A4)+,D0
SCIP1:

 SUB.B #32,D0
 LSL.W #7,D0
 LEA FONT,A1
 ADD.W D0,A1
 LEA BUFFER+10*128,A2
 MOVEQ #3,D0
SCRL3:
 MOVE.B (A1),(A2)+
 MOVE.B 4(A1),(A2)+
 MOVE.B 8(A1),(A2)+
 MOVE.B 12(A1),(A2)+
 MOVE.B 16(A1),(A2)+
 MOVE.B 20(A1),(A2)+
 MOVE.B 24(A1),(A2)+
 MOVE.B 28(A1),(A2)+
 MOVE.B 32(A1),(A2)+
 MOVE.B 36(A1),(A2)+
 MOVE.B 40(A1),(A2)+
 MOVE.B 44(A1),(A2)+
 MOVE.B 48(A1),(A2)+
 MOVE.B 52(A1),(A2)+
 MOVE.B 56(A1),(A2)+
 MOVE.B 60(A1),(A2)+
 MOVE.B 64(A1),(A2)+
 MOVE.B 68(A1),(A2)+
 MOVE.B 72(A1),(A2)+
 MOVE.B 76(A1),(A2)+
 MOVE.B 80(A1),(A2)+
 MOVE.B 84(A1),(A2)+
 MOVE.B 88(A1),(A2)+
 MOVE.B 92(A1),(A2)+
 MOVE.B 96(A1),(A2)+
 MOVE.B 100(A1),(A2)+
 MOVE.B 104(A1),(A2)+
 MOVE.B 108(A1),(A2)+
 MOVE.B 112(A1),(A2)+
 MOVE.B 116(A1),(A2)+
 MOVE.B 120(A1),(A2)+
 MOVE.B 124(A1),(A2)+
 ADDQ.W #1,A1
 DBRA D0,SCRL3

SCIP:

 MOVE.L A6,A2
; ADD.W #40*160,A2
 ADDQ.W #6,A2
PEK2:       ;PEK!
 LEA OFFTAB,A3
 CLR.W D1
 MOVEQ #9,D0
SCRL1:
 MOVE.L A2,A1
 ADD.W (A3)+,A1
 BSR PUTCHAR

 MOVE.L A2,A1
 ADD.W (A3)+,A1
 ADDQ.W #1,D1
 BSR PUTCHAR

 MOVE.L A2,A1
 ADD.W (A3)+,A1
 ADDQ.W #7,D1
 BSR PUTCHAR

 MOVE.L A2,A1
 ADD.W (A3)+,A1
 ADDQ.W #1,D1
 BSR PUTCHAR

 ADDQ.W #7,D1
 DBRA D0,SCRL1
 ADD.L #32,SCROLL+2
 RTS
PUTCHAR:
 ADD.W D1,A1
 MOVE.B (A0)+,(A1)
 MOVE.B (A0)+,160(A1)
 MOVE.B (A0)+,320(A1)
 MOVE.B (A0)+,480(A1)
 MOVE.B (A0)+,640(A1)
 MOVE.B (A0)+,800(A1)
 MOVE.B (A0)+,960(A1)
 MOVE.B (A0)+,1120(A1)
 MOVE.B (A0)+,1280(A1)
 MOVE.B (A0)+,1440(A1)
 MOVE.B (A0)+,1600(A1)
 MOVE.B (A0)+,1760(A1)
 MOVE.B (A0)+,1920(A1)
 MOVE.B (A0)+,2080(A1)
 MOVE.B (A0)+,2240(A1)
 MOVE.B (A0)+,2400(A1)
 MOVE.B (A0)+,2560(A1)
 MOVE.B (A0)+,2720(A1)
 MOVE.B (A0)+,2880(A1)
 MOVE.B (A0)+,3040(A1)
 MOVE.B (A0)+,3200(A1)
 MOVE.B (A0)+,3360(A1)
 MOVE.B (A0)+,3520(A1)
 MOVE.B (A0)+,3680(A1)
 MOVE.B (A0)+,3840(A1)
 MOVE.B (A0)+,4000(A1)
 MOVE.B (A0)+,4160(A1)
 MOVE.B (A0)+,4320(A1)
 MOVE.B (A0)+,4480(A1)
 MOVE.B (A0)+,4640(A1)
 MOVE.B (A0)+,4800(A1)
 MOVE.B (A0)+,4960(A1)
 RTS
COPY:
 MOVE.L (A0)+,(A1)+
 DBRA D0,COPY
 RTS
VOL0:
 LEA $FF8800,A0
 MOVE.B #8,(A0)
 CLR.B 2(A0)
 MOVE.B #9,(A0)
 CLR.B 2(A0)
 MOVE.B #10,(A0)
 CLR.B 2(A0)
 RTS
PUTPIC:
 LEA BILD,A0

 MOVE.L A6,A1
PEK1:      ;PEK
 MOVE.W LOGOFF,D0
 CMP.W #$FFFF,D0
 BNE PIC2
 MOVE.L #LOGOFF-2,PEK1+2
 MOVE.W LOGOFF,D0
PIC2:
 ADDQ.L #8,PEK1+2
 SUB.W #10*160,D0

 ADD.W D0,A1
 ADD.W #24,A1
 MOVE.L A1,A2

 BSR PICSUB ;CLEAR 8 LINES
 MOVEQ #92,D0
PIC1:
 MOVE.L A2,A1

 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1
 MOVE.L (A0)+,(A1)+
 MOVE.W (A0)+,(A1)
 ADDQ.W #4,A1

 ADD.W #160,A2
 DBRA D0,PIC1
 BSR PICSUB   ;CLEAR 8 LINES
 RTS
PICSUB:
 MOVEQ #7,D0
 MOVEQ #0,D1
PIC3:
 MOVE.L A2,A1
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 MOVE.L D1,(A1)+
 ADD.W #160,A2
 DBRA D0,PIC3
 RTS

SWEDEN:
 LEA SWETAB,A2
SWE2:
 LEA SCR,A0
 LEA SCR1,A1
 LEA FONT,A3
 MOVE.W (A2)+,D0
 CMP.W #$FFFF,D0
 BEQ SWEFIN

 ADD.W D0,A3
 MOVE.W (A2)+,D0
 ADD.W D0,A0
 ADD.W D0,A1
 MOVE.W #%0101010101010101,D2
 MOVEQ #31,D0
SWE1:
 MOVE.W (A3)+,D1
 AND.W D2,D1
 MOVE.W D1,(A0)
 MOVE.W D1,(A1)
 MOVE.W (A3)+,D1
 AND.W D2,D1
 MOVE.W D1,8(A0)
 MOVE.W D1,8(A1)
 ADD.W #160,A0
 ADD.W #160,A1
 DBRA D0,SWE1
 JMP SWE2
SWEFIN:
 RTS
INITRAST:
 MOVE.L $120,SPAR2
 MOVE.L $118,SPAR3+2
 MOVE.B $FFFA09,SPAR4
 MOVE.B $FFFA07,SPAR4+1
 MOVE.B $FFFA13,SPAR4+2
 MOVE.L #RASTER3,$118
 ANDI.B #-$21,$FFFA09
 ANDI.B #-2,$FFFA07
 MOVE.L #RASTER1,$120
 ORI.B #1,$FFFA07
 ORI.B #1,$FFFA13
 RTS

REMOVERAST:
 MOVE.B SPAR4,$FFFA09
 MOVE.B SPAR4+1,$FFFA07
 MOVE.B SPAR4+2,$FFFA13
 MOVE.L SPAR2,$120
 MOVE.L SPAR3+2,$118
 RTS

RASTER1:
 CMP.W #199,LINE    ;REACHED LAST?
 BEQ SKIP1          ;YES
PEKAR:
 MOVE.W COLTAB,$FF8240
PEKAR1:
 MOVE.W COLTAB1,$FF8240+16
 ADDQ.L #2,PEKAR+2
 ADDQ.L #2,PEKAR1+2
 ADD.W #1,LINE
 BCLR #0,$FFFA0F
 RTE
SKIP1:
 CLR.W $FF8240
 ADDQ.W #1,LINE
 BCLR #0,$FFFA0F
 RTE
RASTER3:
SPAR3:
 JMP $FC281C
 RTE
LINE: DC.W 0
ADDER: DC.W 0
SPAR1: DC.L 0
SPAR2: DC.L 0
SPAR4: DC.L 0
SPAR5: DC.W 0
COLTAB:
 DS.W 8,0
 DC.W $010,$010,$010,$010,$020,$020,$020,$020
 DC.W $030,$030,$030,$030,$040,$040,$040,$040
 DC.W $050,$050,$050,$050,$060,$060,$060,$060
 DC.W $070,$070,$070,$070,$171,$171,$171,$171
 DC.W $272,$272,$272,$272,$373,$373,$373,$373
 DC.W $474,$474,$474,$474,$575,$575,$575,$575
 DC.W $676,$676,$676,$676,$777,$777,$777,$777

 DC.W $777,$777,$777,$777,$676,$676,$676,$676
 DC.W $575,$575,$575,$575,$474,$474,$474,$474
 DC.W $373,$373,$373,$373,$272,$272,$272,$272
 DC.W $171,$171,$171,$171,$070,$070,$070,$070
 DC.W $060,$060,$060,$060,$050,$050,$050,$050
 DC.W $040,$040,$040,$040,$030,$030,$030,$030
 DC.W $020,$020,$020,$020,$020,$010,$010,$010

 DS.W 32,$000

 DC.W $000,$001,$002,$003,$004,$005,$006,$007
 DC.W $007,$006,$005,$004,$003,$002,$001,$000

 DS.W 32,$000

COLTAB1:
 DC.W $440,$550,$660,$770,$770,$660,$550,$440
 DS.W 12,$007
 DC.W $440,$550,$660,$770,$770,$660,$550,$440
 DS.W 12,$007
 DC.W $440,$550,$660,$770,$770,$660,$550,$440
 DS.W 12,$007
 DC.W $440,$550,$660,$770,$770,$660,$550,$440
 DS.W 12,$007
 DC.W $440,$550,$660,$770,$770,$660,$550,$440
 DS.W 12,$007
 DC.W $400,$500,$600,$700,$700,$600,$500,$400
 DS.W 12,$777
 DC.W $400,$500,$600,$700,$700,$600,$500,$400
 DS.W 12,$777
 DC.W $400,$500,$600,$700,$700,$600,$500,$400
 DS.W 12,$777
 DC.W $400,$500,$600,$700,$700,$600,$500,$400
 DS.W 12,$777
 DC.W $400,$500,$600,$700,$700,$600,$500,$400
 DS.W 12,$777

SSP: DC.L 0
OLDVBL: DC.L 0
PALT: DC.W $000,$774,$770,$750,$640,$620,$420,$320,$700,$774,$770,$750,$640,$620,$420,$320
OLPAL: DS.W 16
MOUSEOFF: DC.B $12,$1A
MOUSEON:  DC.B $08,$14
NULL: DC.W 0
NAME: DC.B 'CHOPPER.SPR',0
 ALIGN.W
SCREEN:
 DC.L SCR
SCREEN1:
 DC.L SCR1
ASCII:
 DC.B "FLEXIBLE FRONT PRESENTS                  ",$FF
 DC.B "RAMBO III           ",$FF
 DC.B "CRACKED AND TRAINED 88-12-23. PRESS 'T' FOR TRAINER.           ",$FF
 DC.B "THIS INTRO WAS WRITTEN BY           ",$FF
 DC.B "STALIN           ",$FF
 DC.B "WITH SOME GRAPHICAL ASSISTANCE BY EARTHLIGHT. SINE TABLES BY           ",$FF
 DC.B "COCA-COLA KID           ",$FF
 DC.B "NOW FOR SOME GREETINGS:           ",$FF
 DC.B "THE UNION (ESPECIALLY XXX,TCB & REPLICANTS), THE BLADE RUNNERS, SYNC, MHC, VECTOR, BEAR OF BLOCKBUSTERS, "
 DC.B "SCC (ESPECIALLY BIRDY), AN-COOL...           ",$FF
 DC.B "ARE YOUR EYES ACHING NOW?           ",$FF
 DC.B "FLEXIBLE FRONT WISHES YOU ALL A HAPPY NEW YEAR 1989, THE YEAR WHEN ATARI WILL CONQUER THE WORLD!!!           ",$FF
 DC.B "THIS GAME HAD A LOUSY PROTECTION, IF IT COULD INTEREST ANYONE. GOOD BYE FOR NOW...                                 ",$FF
 DC.B $FF,$FF
ASCIIEND:
 ALIGN.W

OFFADTAB:
 DC.L OFFTAB,OTAB3,OTAB5,OTAB2,OTAB6,OFFTAB,OTAB5,OTAB8,OTAB7,OTAB4
 DC.L OTAB5,OTAB2
L=160
OFFTAB:
 DC.W L*100,L*101,L*102,L*103,L*104,L*105,L*106,L*107,L*108,L*109
 DC.W L*110,L*111,L*112,L*113,L*114,L*115,L*116,L*117,L*118,L*119
 DC.W L*120,L*121,L*122,L*123,L*124,L*125,L*126,L*127,L*128,L*129
 DC.W L*130,L*131,L*132,L*133,L*134,L*135,L*136,L*137,L*138,L*139

OTAB2:
 DC.W L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100
 DC.W L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100,L*100
 DC.W L*102,L*104,L*106,L*108,L*110,L*112,L*114,L*116,L*118,L*120
 DC.W L*122,L*124,L*126,L*128,L*130,L*132,L*134,L*136,L*138,L*140

OTAB3:
 IBYTES SIN1.DAT

OTAB4:
 DS.W 10,L*140
 DS.W 10,L*108
 DS.W 10,L*140
 DS.W 10,L*108

OTAB5:
 IBYTES SIN2.DAT

OTAB6:
 IBYTES SIN3.DAT

OTAB7:
 IBYTES SIN4.DAT

OTAB8:
 IBYTES SIN5.DAT

LOGOFF:
 IBYTES LOGO_YCR.DAT
 DC.W $FFFF,-1,-1,-1

BALTAB:
 IBYTES BALLSIN.DAT
 IBYTES BALLSIN2.DAT
BALTABSLUT:

SWETAB:
 DC.W ('S'-32)*128,L*44+24+6+8
 DC.W ('W'-32)*128,L*44+40+6+8
 DC.W ('E'-32)*128,L*44+56+6+8
 DC.W ('D'-32)*128,L*44+72+6+8
 DC.W ('E'-32)*128,L*44+88+6+8
 DC.W ('N'-32)*128,L*44+104+6+8

 DC.W $FFFF

MUSIC:
 IBYTES STARRAY.MUS
BALL:
 IBYTES FFBALL.DAT
BILD:
 IBYTES GOLDFF.PIC
FONT:
 IBYTES FONT1.DAT
 END

 