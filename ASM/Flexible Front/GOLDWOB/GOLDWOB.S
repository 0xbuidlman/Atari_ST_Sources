;***   SOURCE FOR 'GOLD DIST' SCREEN     ***
;*** WRITTEN BY STALIN OF FLEXIBLE FRONT ***
;***     FOR THE WHATTAHECK DEMO-89      ***
;***    RUNS WITH ASSEMPRO ASSEMBLER     ***

; AHEM...
; SOME PROGRAMMING TECHNIQUES USED IN THIS SCREEN
; ARE VERY DATED AND SLOW. JUST DON'T THINK THAT
; I USE THE SAME ROUTINES NOW!!!  STalin 24/7-89


SCR=$F8000     ;$78000 FOR 520
SCR1=$F0000    ;$70000 FOR 520

 BRA START
BUFF:
 DS.B 3000,0

START:
 CLR.L -(SP)     ;SV MODE
 MOVE.W #$20,-(SP)
 TRAP #1
 ADDQ.L #6,SP
 MOVE.L D0,SPAR+4

 PEA MOUSE
 MOVE.W #1,-(SP)
 MOVE.W #25,-(SP)
 TRAP #14
 ADDQ.L #8,SP

 CLR.W -(SP)     ;SETSCR
 PEA SCR
 PEA SCR
 MOVE.W #5,-(SP)
 TRAP #14
 ADD.L #12,SP

 LEA $FF8240,A0
 LEA OPAL,A1
 MOVEQ #7,D0
 BSR COPY
 LEA PAL,A0
 LEA $FF8240,A1
 MOVEQ #7,D0
 BSR COPY

 MOVEQ #0,D0
 JSR MUSIC
 MOVE.W #$2700,SR
 MOVE.L $70,OVBL
 MOVE.L #VBL2,$70
 MOVE.W #$2300,SR
 BSR POURGOLD
 BSR PREGOLD

 LEA SCR1,A0
 MOVE.W #15999,D0
CLS:
 CLR.L (A0)+
 DBRA D0,CLS

 MOVE.W #$2700,SR
 MOVE.L #VBL,$70
 MOVE.W #$2300,SR

 CLR.W CLOCK
WAITER1:
 CMP.B #$66,$FFFC02
 BEQ EXIT
 CMP.W #30*50,CLOCK
 BNE WAITER1
 MOVE.W #2,STARTPEK1+4    ;START VERTICAL SCROLLER

DEADLOP:
 CMP.B #$66,$FFFC02
 BNE DEADLOP

EXIT:
 MOVE.W #$2700,SR
 MOVE.L OVBL,$70
 MOVE.W #$2300,SR

 MOVE.W #1,-(SP)
 PEA SCR
 PEA SCR
 MOVE.W #5,-(SP)
 TRAP #14
 ADD.L #12,SP

 LEA OPAL,A0
 LEA $FF8240,A1
 MOVEQ #7,D0
 BSR COPY

 MOVE.L SPAR+4,-(SP)
 MOVE.W #$20,-(SP)
 TRAP #1
 ADDQ.L #6,SP

 PEA MOUSE+2
 MOVE.W #1,-(SP)
 MOVE.W #25,-(SP)
 TRAP #14
 ADDQ.L #8,SP
 ILLEGAL
COPY:
 MOVE.L (A0)+,(A1)+
 DBRA D0,COPY
 RTS


VBL:
 MOVE.W #$0,$FF8240
 LEA SCREENS,A0
 MOVE.L (A0),D0
 MOVE.L 4(A0),D1
 EXG.L D0,D1
 MOVE.L D0,(A0)
 MOVE.L D1,4(A0)
 MOVE.L D0,A6

 JSR ATARI
 JSR WOBGOLD
 JSR SCROLL1
 JSR SCROLL2
 JSR BALLS
 JSR MUSIC+$106

 MOVE.B SCREENS+1,$FF8201
 MOVE.B SCREENS+2,$FF8203
 ADDQ.W #1,CLOCK
 RTE


VBL2:
 ADDQ.W #1,CLOCK
 RTE


ATARI:   ;PEK!
 LEA ATAWOB,A3
 LEA ATAGRAF,A0
 MOVEQ #80,D0
 JSR ATA1
 ADDQ.W #1,D0
 JSR ATA1
 MOVEQ #88,D0
 JSR ATA1
 ADDQ.W #1,D0
 JSR ATA1
 MOVEQ #96,D0
 JSR ATA1
 ADDQ.W #1,D0
 JSR ATA1
 MOVEQ #104,D0
 JSR ATA1
 ADDQ.W #1,D0
 JSR ATA1

 MOVE.B (A3)+,D0
 CMP.B #$FF,D0
 BNE ATSKP2
 MOVE.L #ATAWOB-1,ATARI+2
ATSKP2:
 ADDQ.L #1,ATARI+2
 RTS

ATA1:
 CLR.W D2
 MOVE.B (A3)+,D2
 MULU #160,D2
 MOVE.L A6,A1
 ADD.W D2,A1
 ADD.W D0,A1
 LEA 2(A1),A2

 MOVEQ #0,D3
 MOVE.B D3,-160(A1)
 MOVE.B D3,-160(A2)
 MOVE.B D3,-320(A1)
 MOVE.B D3,-320(A2)

 MOVE.B (A0)+,(A1)
 MOVE.B (A0)+,(A2)
 MOVE.B (A0)+,160(A1)
 MOVE.B (A0)+,160(A2)
 MOVE.B (A0)+,320(A1)
 MOVE.B (A0)+,320(A2)
 MOVE.B (A0)+,480(A1)
 MOVE.B (A0)+,480(A2)
 MOVE.B (A0)+,640(A1)
 MOVE.B (A0)+,640(A2)
 MOVE.B (A0)+,800(A1)
 MOVE.B (A0)+,800(A2)
 MOVE.B (A0)+,960(A1)
 MOVE.B (A0)+,960(A2)
 MOVE.B (A0)+,1120(A1)
 MOVE.B (A0)+,1120(A2)
 MOVE.B (A0)+,1280(A1)
 MOVE.B (A0)+,1280(A2)
 MOVE.B (A0)+,1440(A1)
 MOVE.B (A0)+,1440(A2)
 MOVE.B (A0)+,1600(A1)
 MOVE.B (A0)+,1600(A2)
 MOVE.B (A0)+,1760(A1)
 MOVE.B (A0)+,1760(A2)
 MOVE.B (A0)+,1920(A1)
 MOVE.B (A0)+,1920(A2)
 MOVE.B (A0)+,2080(A1)
 MOVE.B (A0)+,2080(A2)
 MOVE.B (A0)+,2240(A1)
 MOVE.B (A0)+,2240(A2)
 MOVE.B (A0)+,2400(A1)
 MOVE.B (A0)+,2400(A2)

 MOVE.B D3,2560(A1)
 MOVE.B D3,2560(A2)
 MOVE.B D3,2720(A1)
 MOVE.B D3,2720(A2)
 RTS

BALLS:   ;PEK!
 LEA BALLSIN,A2
 MOVE.B (A2)+,D0
 CMP.B #$FF,D0
 BNE BALSKP
 MOVE.L #BALLSIN,BALLS+2
 MOVE.B BALLSIN,D0
BALSKP:
 ADDQ.L #1,BALLS+2
 MOVEQ #0,D1
 JSR ONEBALL
 MOVE.L A3,A1
 ADD.W #128,A1
 JSR ONEBALL2

BALLS2:   ;PEK!
 LEA BALLSIN+4,A2
 MOVE.B (A2)+,D0
 CMP.B #$FF,D0
 BNE BALSKP2
 MOVE.L #BALLSIN,BALLS2+2
 MOVE.B BALLSIN,D0
BALSKP2:
 ADDQ.L #1,BALLS2+2
 MOVEQ #8,D1
 JSR ONEBALL
 MOVE.L A3,A1
 ADD.W #136,A1
 JSR ONEBALL2

BALLS3:   ;PEK!
 LEA BALLSIN+8,A2
 MOVE.B (A2)+,D0
 CMP.B #$FF,D0
 BNE BALSKP3
 MOVE.L #BALLSIN,BALLS3+2
 MOVE.B BALLSIN,D0
BALSKP3:
 ADDQ.L #1,BALLS3+2
 MOVEQ #16,D1
 JSR ONEBALL
 MOVE.L A3,A1
 ADD.W #144,A1
 JSR ONEBALL2

BALLS4:   ;PEK!
 LEA BALLSIN+12,A2
 MOVE.B (A2)+,D0
 CMP.B #$FF,D0
 BNE BALSKP4
 MOVE.L #BALLSIN,BALLS4+2
 MOVE.B BALLSIN,D0
BALSKP4:
 ADDQ.L #1,BALLS4+2
 MOVEQ #24,D1
 JSR ONEBALL
 MOVE.L A3,A1
 ADD.W #152,A1
 JSR ONEBALL2

 RTS

ONEBALL:
 CLR.W D2
 MOVE.B D0,D2
 MULU #160,D2
 MOVE.L A6,A1
 ADD.W D2,A1
 MOVE.L A1,A3
 ADD.W D1,A1

ONEBALL2:
 LEA BALL+16,A0
 MOVEQ #0,D0
 MOVE.W D0,-160(A1)
 MOVE.W D0,-320(A1)
 MOVE.W D0,-480(A1)
 MOVE.W D0,-640(A1)
 MOVE.W D0,-800(A1)
 MOVE.W D0,-960(A1)
 MOVE.W D0,-1120(A1)
 MOVE.W D0,-1280(A1)
 MOVE.W D0,-1440(A1)
 MOVE.W D0,-1600(A1)
 MOVE.W D0,-1760(A1)
 MOVE.W D0,-1920(A1)
 MOVE.W D0,-2080(A1)
 MOVE.W D0,-2240(A1)
 MOVE.W D0,-2400(A1)
 MOVE.W D0,-2560(A1)

 MOVEM.W (A0)+,D0-D7
 MOVE.W D0,(A1)
 MOVE.W D1,160(A1)
 MOVE.W D2,320(A1)
 MOVE.W D3,480(A1)
 MOVE.W D4,640(A1)
 MOVE.W D5,800(A1)
 MOVE.W D6,960(A1)
 MOVE.W D7,1120(A1)
 MOVEM.W (A0)+,D0-D7
 MOVE.W D0,1280(A1)
 MOVE.W D1,1440(A1)
 MOVE.W D2,1600(A1)
 MOVE.W D3,1760(A1)
 MOVE.W D4,1920(A1)
 MOVE.W D5,2080(A1)
 MOVE.W D6,2240(A1)
 MOVE.W D7,2400(A1)
 MOVEQ #0,D0
 MOVE.W D0,2560(A1)
 MOVE.W D0,2720(A1)
 MOVE.W D0,2880(A1)
 MOVE.W D0,3040(A1)
 MOVE.W D0,3200(A1)
 MOVE.W D0,3360(A1)
 MOVE.W D0,3520(A1)
 MOVE.W D0,3680(A1)
 MOVE.W D0,3840(A1)
 MOVE.W D0,4000(A1)
 MOVE.W D0,4160(A1)
 MOVE.W D0,4320(A1)
 MOVE.W D0,4480(A1)
 MOVE.W D0,4640(A1)
 MOVE.W D0,4800(A1)
 MOVE.W D0,4960(A1)

 RTS


WOBGOLD:    ;PEK!
 LEA WOBTAB,A0

 MOVE.L A6,A2
 ADD.W #(40*160)+40,A2
 MOVEQ #0,D7
 MOVEQ #121,D6
WOB1:
 CLR.W D0
 MOVE.B (A0)+,D0
 LSL.W #2,D0
 LEA GOLDOFFS,A1
 MOVE.L (A1,D0.W),D1
 LEA GRAF,A1
 ADD.L D1,A1
 ADD.W D7,A1
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #16,A2
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #16,A2
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #16,A2
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #16,A2
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #16,A2
 MOVEM.W (A1)+,D0-D5
 MOVE.W D0,(A2)
 MOVE.W D1,2(A2)
 MOVE.W D2,4(A2)
 MOVE.W D3,8(A2)
 MOVE.W D4,10(A2)
 MOVE.W D5,12(A2)
 ADD.W #80,A2
 ADD.W #72,D7
 DBRA D6,WOB1

 MOVE.B (A0)+,D0
 CMP.B #$FF,D0
 BNE WOB2
 MOVE.L #WOBTAB-1,WOBGOLD+2
WOB2:
 ADDQ.L #1,WOBGOLD+2
 RTS

G=8784
GOLDOFFS:
 DC.L 0,G,G*2,G*3,G*4,G*5,G*6,G*7,G*8,G*9,G*10,G*11,G*12,G*13,G*14,G*15
WOBTAB:
 DS.B 122,8
 IBYTES GOLDSIN1.DAT
 IBYTES GOLDSIN1.DAT
 DS.B 250,8
 DC.B $FF
 ALIGN.W

PREGOLD:
 LEA GRAF,A0
 LEA GRAF+8784,A1
 MOVE.W #((8784*16)/4)-1,D0
 BSR COPY

 LEA GRAF+8784,A0
 MOVEQ #0,D5
 MOVEQ #14,D6
PRE4:
 MOVE.W D5,D4
 BSR PRESUB1
 ADDQ.W #1,D5
 ADD.W #8784,A0
 DBRA D6,PRE4

 LEA ASCCI2,A2   ;WRITE SCROLLER IN MEMORY
 LEA FONT2+32,A1
PRE7:
 CLR.W D0
 MOVE.B (A2)+,D0
 TST.B D0
 BEQ PRE6
 SUB.B #32,D0
 LSL.W #5,D0
 LEA FONT,A0
 ADD.W D0,A0
 MOVEM.L (A0)+,D0-D7
 MOVEM.L D0-D7,-(A1)
 ADD.W #64,A1
 BRA PRE7
PRE6:
 MOVE.W #$-1,-32(A1)
 RTS

PRESUB1:
 MOVE.L A0,A3
 MOVE.L A0,A1
PRE5:
 MOVEQ #121,D3
PRE3:
 MOVE #0,CCR
 MOVE.L A1,A0
 MOVE.L A0,A2
 MOVEQ #2,D1
PRE2:
 MOVE.L A2,A0
 MOVEQ #11,D0
PRE1:
 ROXR.W (A0)
 ADDQ.W #6,A0
 DBRA D0,PRE1
 ADDQ.W #2,A2
 DBRA D1,PRE2
 ADD.W #72,A1
 DBRA D3,PRE3
 MOVE.L A3,A0
 DBRA D4,PRE5
 RTS

SCROLL1:  ;PEK
 MOVE.W #0,D0
 CMP.W #15,D0
 BNE SC12
 MOVE.W #-1,SCROLL1+2
 CLR.W D0
ASCPEK1:
 MOVE.B ASCCI1,D0
 TST.B D0
 BNE SC13
 MOVE.L #ASCCI1,ASCPEK1+2
 MOVE.B ASCCI1,D0
SC13:
 ADDQ.L #1,ASCPEK1+2
 SUB.B #32,D0
 LSL.W #5,D0
 LEA FONT,A0
 ADD.W D0,A0
 MOVEM.L (A0)+,D0-D7
 LEA BUFF+21*32,A1
 MOVEM.L D0-D7,-(A1)

SC12:
 ADDQ.W #1,SCROLL1+2

 LEA BUFF+(20*32),A0
 MOVE #0,CCR
 MOVEQ #15,D0
SC11:
 ROXL.W (A0)
 ROXL.W -32(A0)
 ROXL.W -64(A0)
 ROXL.W -96(A0)
 ROXL.W -128(A0)
 ROXL.W -160(A0)
 ROXL.W -192(A0)
 ROXL.W -224(A0)
 ROXL.W -256(A0)
 ROXL.W -288(A0)
 ROXL.W -320(A0)
 ROXL.W -352(A0)
 ROXL.W -384(A0)
 ROXL.W -416(A0)
 ROXL.W -448(A0)
 ROXL.W -480(A0)
 ROXL.W -512(A0)
 ROXL.W -544(A0)
 ROXL.W -576(A0)
 ROXL.W -608(A0)
 ROXL.W -640(A0)
 ADDQ.W #2,A0
 DBRA D0,SC11

 LEA BUFF,A0
 MOVE.L A6,A1
 ADD.W #(160*132)+6,A1

 MOVEQ #4,D1
SC15:
 MOVE.W (A0)+,(A1)
 MOVE.W (A0)+,160(A1)
 MOVE.W (A0)+,320(A1)
 MOVE.W (A0)+,480(A1)
 MOVE.W (A0)+,640(A1)
 MOVE.W (A0)+,800(A1)
 MOVE.W (A0)+,960(A1)
 MOVE.W (A0)+,1120(A1)
 MOVE.W (A0)+,1280(A1)
 MOVE.W (A0)+,1440(A1)
 MOVE.W (A0)+,1600(A1)
 MOVE.W (A0)+,1760(A1)
 MOVE.W (A0)+,1920(A1)
 MOVE.W (A0)+,2080(A1)
 MOVE.W (A0)+,2240(A1)
 MOVE.W (A0)+,2400(A1)

 ADDQ.W #8,A1
 DBRA D1,SC15

 MOVEQ #3,D6
 MOVE.W #640,D5
SC17:
 MOVE.L A1,A2
 MOVEQ #3,D4
SC16:
 MOVEM.W (A0)+,D0-D3
 MOVE.W D0,(A2)
 NOT.W D0
 AND.W D0,-2(A2)
 AND.W D0,-4(A2)
 AND.W D0,-6(A2)

 MOVE.W D1,160(A2)
 NOT.W D1
 AND.W D1,158(A2)
 AND.W D1,156(A2)
 AND.W D1,154(A2)

 MOVE.W D2,320(A2)
 NOT.W D2
 AND.W D2,318(A2)
 AND.W D2,316(A2)
 AND.W D2,314(A2)

 MOVE.W D3,480(A2)
 NOT.W D3
 AND.W D3,478(A2)
 AND.W D3,476(A2)
 AND.W D3,474(A2)

 ADD.W D5,A2
 DBRA D4,SC16
 ADDQ.W #8,A1
 DBRA D6,SC17

 MOVEQ #10,D1
SC18:
 MOVE.W (A0)+,(A1)
 MOVE.W (A0)+,160(A1)
 MOVE.W (A0)+,320(A1)
 MOVE.W (A0)+,480(A1)
 MOVE.W (A0)+,640(A1)
 MOVE.W (A0)+,800(A1)
 MOVE.W (A0)+,960(A1)
 MOVE.W (A0)+,1120(A1)
 MOVE.W (A0)+,1280(A1)
 MOVE.W (A0)+,1440(A1)
 MOVE.W (A0)+,1600(A1)
 MOVE.W (A0)+,1760(A1)
 MOVE.W (A0)+,1920(A1)
 MOVE.W (A0)+,2080(A1)
 MOVE.W (A0)+,2240(A1)
 MOVE.W (A0)+,2400(A1)

 ADDQ.W #8,A1
 DBRA D1,SC18
 RTS

SCROLL2:
 MOVE.L A6,A1
 ADD.W #70,A1
SC2PEK:
 LEA FONT2,A0
 MOVE.W #320,D1
 MOVE.W #20,D0
SC21:
 MOVE.W (A0)+,(A1)
 MOVE.W (A0)+,160(A1)
 ADD.W D1,A1
 DBRA D0,SC21

 ADD.W #80,A0
 ADD.W #40*160,A1
 MOVE.W -2(A0),-160(A1)

 MOVE.W #160,D3
 MOVEQ #0,D2
 MOVEQ #7,D1
SC23:
 CLR.L D0
 MOVE.W (A0)+,D0
 LSL.L D2,D0

 MOVE.W D0,(A1)
 NOT.W D0
 AND.W D0,-2(A1)
 AND.W D0,-4(A1)
 AND.W D0,-6(A1)
 SWAP D0
 MOVE.W D0,-8(A1)
 NOT.W D0
 AND.W D0,-10(A1)
 AND.W D0,-12(A1)
 AND.W D0,-14(A1)

 ADDQ.W #1,D2
 ADD.W D3,A1
 DBRA D1,SC23


 MOVEQ #23,D1
SC24:
 CLR.L D0
 MOVE.W (A0)+,D0
 LSL.L D2,D0
 MOVE.W D0,(A1)
 NOT.W D0
 AND.W D0,-2(A1)
 AND.W D0,-4(A1)
 AND.W D0,-6(A1)
 SWAP D0
 MOVE.W D0,-8(A1)
 NOT.W D0
 AND.W D0,-10(A1)
 AND.W D0,-12(A1)
 AND.W D0,-14(A1)
 ADD.W D3,A1
 DBRA D1,SC24

 MOVEQ #7,D1
SC25:
 CLR.L D0
 MOVE.W (A0)+,D0
 LSL.L D2,D0
 MOVE.W D0,(A1)
 NOT.W D0
 AND.W D0,-2(A1)
 AND.W D0,-4(A1)
 AND.W D0,-6(A1)
 SWAP D0
 MOVE.W D0,-8(A1)
 NOT.W D0
 AND.W D0,-10(A1)
 AND.W D0,-12(A1)
 AND.W D0,-14(A1)
 SUBQ.W #1,D2
 ADD.W D3,A1
 DBRA D1,SC25

 MOVE.W #320,D1
 MOVE.W #4,D0
SC26:
 MOVE.W (A0)+,(A1)
 MOVE.W (A0)+,160(A1)
 ADD.W D1,A1
 DBRA D0,SC26

 MOVEM.W (A0)+,D2-D5
 OR.W D2,(A1)
 OR.W D3,160(A1)
 OR.W D4,320(A1)
 OR.W D5,480(A1)
 ADD.W #640,A1
 MOVEM.W (A0)+,D2-D5
 OR.W D2,(A1)
 OR.W D3,160(A1)
 OR.W D4,320(A1)
 OR.W D5,480(A1)
 ADD.W #640,A1
 MOVEM.W (A0)+,D2-D5
 OR.W D2,(A1)
 OR.W D3,160(A1)
 OR.W D4,320(A1)
 OR.W D5,480(A1)
 ADD.W #640,A1
 MOVEM.W (A0)+,D2-D5
 OR.W D2,(A1)
 OR.W D3,160(A1)
 OR.W D4,320(A1)
 OR.W D5,480(A1)
 ADD.W #640,A1

 MOVE.W #20,D0
SC27:
 MOVE.W (A0)+,(A1)
 MOVE.W (A0)+,160(A1)
 ADD.W D1,A1
 DBRA D0,SC27

 CMP.W #$-1,(A0)
 BEQ SC22
STARTPEK1:
 ADD.L #0,SC2PEK+2
 RTS
SC22:
 MOVE.L #FONT2,SC2PEK+2
 RTS

POURGOLD:
 LEA GRAF+(121*(12*6)),A0
 MOVE.W #160,D1
 MOVEQ #121,D3
POUR3:
 MOVE.W CLOCK,D5
 ADDQ.W #4,D5
SYNC2:
 CMP.W CLOCK,D5
 BNE SYNC2
 LEA SCR+40,A1
 MOVE.W D1,D2
POUR2:
 MOVE.L A0,A2
 MOVE.L A1,A3
 MOVEQ #11,D0
POUR1:
 MOVE.L (A2)+,(A3)
 MOVE.W (A2)+,4(A3)
 ADDQ.W #8,A3
 DBRA D0,POUR1
 ADD.W #160,A1
 DBRA D2,POUR2

 SUB.W #12*6,A0
 SUBQ.W #1,D1
 DBRA D3,POUR3

 RTS



SPAR: DS.L 10

PAL:
 DC.W $000,$771,$770,$760,$750,$740,$730,$630
 DC.W $700,$771,$770,$760,$750,$740,$730,$630
OPAL:
 DS.W 16,0
OVBL:
 DC.L 0

MOUSE:
 DC.B $12,$1A,$14,8

SCREENS:
 DC.L SCR1,SCR

CLOCK:
 DC.W 0

ASCCI1:
 DC.B '           FLEXIBLE FRONT PRESENTS THE GOLDEN DISTORTING FF SCREEN. CODE, SINE WAVES AND IDEA'
 DC.B 'BY STALIN. GRAPHICS BY EARTHLIGHT. MUSIC RIPPED BY TDB. '
 DC.B '   SO WHAT SHALL I TYPE IN THIS SCROLLTEXT? MAYBE SOMETHING ABOUT GAMES. '
 DC.B 'I THINK THAT THE GAMES ARE WORSE THAN EVER NOW. ONLY ABOUT ONE NEW GAME '
 DC.B "PER MONTH IS WORTH PLAYING MORE THAN ONCE. I CAN'T BELIVE THAT PEOPLE CAN WORK "
 DC.B 'WORK FOR MONTHS ON A SHIT GAME. STORM TROOPER IS A GREAT EXAMPLE OF THIS. '
 DC.B "HERE IS A LIST OF SOME OF MY FAVOURITE GAMES... LAST DUEL: GOOD SHOOT'EM UP "
 DC.B "BUT FAR TO EASY TO COMPLETE. FLYING SHARK: BRILLIANT SHOOT'EM UP. R-TYPE: VERY "
 DC.B 'GOOD BUT MUCH TO DIFFICULT. SIDEARMS: CAN ANYONE BEAT MY HIGHSCORE? STAGE 8 SCORE 6588500! '
 DC.B ", CYBERMIND: THIS GAME LOOKS AWFUL AND IT'S VERY BAD PROGRAMMED, BUT THE LEVELS "
 DC.B 'ARE VERY CLEVERLY MADE AND CAN BE VERY CHALLENGING. TIGER ROAD: I HATED THIS '
 DC.B "GAME AT FIRST, BUT NOW I THINK IT'S QUITE GOOD. MAD SHOW: A FUN GAME WITH "
 DC.B 'GREAT GRAPHICS AND SOUND. ACTION FIGHTER: THIS GAME IS QUITE NICE, UNFORTUNATELY '
 DC.B 'THE REPLICANTS MEGA TRAINER FOR THIS GAME IS VERY GOOD TOO! NEBULUS: THIS GAME '
 DC.B 'IS TOO GOOD FOR WORDS. J M PHILLIPS IS A GENIUS! F16 FALCON: THIS IS PROBABLY '
 DC.B 'THE BEST GAME SO FAR FOR THE ST. BRILLIANT IN EVERY WAY. BATTLEHAWKS 1942 IS GOOD TOO.'
 DC.B '            I AM TYPING THIS TEXT ON A IBM PS/2 USING SIDE KICK SOFTWARE. '
 DC.B 'NO, I DO NOT OWN ONE OF THESE MACHINES BUT I AM WORKING WITH THEM. THE GOOD '
 DC.B 'THING WITH SIDE KICK IS THAT IT IS MEMORY RESIDENT, SO IF THE BOSS WALKS BY '
 DC.B ", I CAN JUST PRESS ESCAPE AND RETURN TO WORK. I DON'T USUALLY TYPE SCROLLTEXTS "
 DC.B 'AT WORK, BUT TODAY I HAVE NOTHING ELSE TO DO AND, SINCE THE COPY PARTY IS '
 DC.B "TOMORROW, I DON'T FEEL LIKE WASTING MY TIME DOING NOTHING! "
 DC.B '     HMM.. 1700 BYTES. WELL I WILL HAVE TO DO, I HAVE OTHER SCROLLTEXTS TO WRITE '
 DC.B 'TOO YOU KNOW! BYE FOR NOW...                           '
 DC.B 'CONTACT ADRESS: FLEXIBLE FRONT, C/O VILLE KRUMLINDE, TORSVIKSSVANGEN 17, S-181 34 LIDINGO, SWEDEN. '
 DS.B 20,' '
 DC.B 0
ASCCI2:
 DC.B '               GREETINGS TO THE CAREBEARS, AUTOMATIONS, REPLICANTS, THE BLADE RUNNERS, '
 DC.B 'PHALANX, SYNC, OMEGA, LEGEND, TEX...         '
 DS.B 20,' '
 DC.B 0
 ALIGN.W

BALLSIN:
 IBYTES BALLSIN1.DAT
 DC.B $FF
 ALIGN.W

ATAWOB:
 IBYTES ATAWOB1.DAT
 DC.B $FF
 ALIGN.W
ATAGRAF:
 IBYTES ATARI2.DAT
BALL:
 IBYTES GOLDBALL.DAT
FONT:
 IBYTES SMALLFNT.DAT

MUSIC:
 IBYTES GENESIS.MUS

GRAF:
 IBYTES GOLDFF.PIC,8784
FONT2 EQU GRAF+(16*8784)
 END

 