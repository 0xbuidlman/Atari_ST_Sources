
       "Make Your Own Demo" demo, Aggression 03/01/1999, 07:05



The wait has been long and painful. Many have suffered on the road to
enlightenment. There have been stories and legends, songs of prayer and
praise. Heroes fighting against menacing dangers - risking their very
existence in the face of powerful enemies. Finally the gods have answered
the peoples' prayers. After so many tears of agony Motion will ascend from 
the skies...

... but there's a catch... I mean, you didn't expect Aggression to really
work to complete the bloody thing, did you? Yes?? Well we have even better
news for you. You now have a chance to prove yourself worthy by reading
through thousands of lines of wonderful Motorola 68030 and DSP560001
assembly, putting it together, reading Finnish comments, fixing bugs, 
optimizing, tweaking and eventually throwing it all in the bin. Just so as not 
to make your task too easy (easy tasks are pointless), you must get everything
to work on a standard 4MB, unaccelerated Falcon. Of course there's a prize
for the person or persons who accomplish this fearsome task. We will allow
you the wonderful pleasure of being an *honorary member of Aggression*.
That means you can sit at our table at parties, under our glorious flag. You
can listen to Panasonic without feeling shame. You can show everyone
Braindamage. You can listen to endless questions about new releases. You 
can shorten your expected lifespan my helping to organize parties and alter 
voting results so your own crew (in this case, Aggression!) always wins. 
  Naturally, Aggression has never participated in such immoral activities.

This package contains the source code for all working effects Aggression
created for the Motion demo. It can be manipulated and used as seen fit
(credit, where due, is always a nice gesture). All parts compile but there
are still some bugs to work out. Precompiled binaries for RGB monitors
or TVs are included. You also get all related graphics and music built up
from samples in sequence.


 WizTom's comments:

  Nothing in this demo has been touched since new year 95-96, most not since 
summer 95. We simply lacked the time, interest and the Falcons to do something 
with. I gathered all the sources I was still able to compile and put them, 
along with needed gfx and binaries, into one archive. This demo was not 
completed mainly because of memory limitations (some parts take 3.5 megs for
precalculations) and really weird bugs in some parts causing random halts.
All routines should do panic exit with F1 or space. Usually holding down
control shows cpu usage. Screen setups are for RGB since it gives more 
time then vga. There is a kind of 'kernel' in freeintx.s that is included in
the beginning of every source. This does all the system store/restore 
routines and handles the queue for VBL/Raster/mainloop routines. In the final 
demo this kernel would just load all parts needed and call their inits. Then 
the parts would insert themselves into the queue. 


Technoporn:

 Fader2 - DSP-based crossfader routine used to play the first animation.
          The precompiled version works, but something has gone wrong with
	  the source and it hangs on the first frame. 

 Bezier - DSP-calculated texturemapped dot objects (up to 9000 dots) in one
          frame. You can morph between the objects with F9 and F10. The 
	  objects are: flying aggression hornet, snake, torus and the 
	  letter A. 256 colours.


 Explot7 - Weird additive balls/particles in 3d space. Rendered with 
           the DSP. Truecolor.

 GTmapImp - DSP texturemapping routine with g-shade (additive shade). This 
            just contains the raw polygon innerloops and no 3d math. Some 
	    logical bugs with UV steps. 1.25 texels/second. I wonder how the
            CPU can keep up by feeding polygon data :-). Supports textures
            up to 120*64 in the DSP memory. Truecolor.

 PalsDsp7 - Mainly CPU-based rotator/zoomer/sinwave/pixelblur thing. 
            Truecolor.

 Romeo - Realtime Julian-set morpher. Does all calculations with the DSP. About
         17hz update, 256 colours. Lacks interesting set locations, too many
         'black' areas. The iteration depth is about 120.

 Rotta - Your standard 24-bit motion blur rotator zoomer. Keys 1,2,3 and 4 swap
         the zoomer gfx. Fully DSP-based with lots of time left. A pixelsize 
         of 2x2. Truecolor. Was used in the invitation intro for the 
         Aggressive Party 2.

 Writer3 & Writer4 - Displays realtime handwriting gfx. Has an Aggression logo
                     with some text screens in between. Truecolor. Mainly 
                     created to compensate precalculations for Susie.

 Susie - Wolfestein/doom routine. Trilinear filtering (mipmaps!) and 
         featuring anti-aliasing of wall edges. The DSP is used just to do the 
         3d mathematics. Uses blitter in a funny way to read one pixel and 
         write it twice, but this causes problems with the sound DMA. Massive 
         precalculations. All wall heights are in memory. Features a nice roll 
         effect. 2x2 pixels, but proper ultra-low resolution screen might speed
         it up to 50hz. Truecolor.

 
                 A world without aggression knows no peace


                                 - Setok/Aggression, setok@fishpool.com




PS. If you really want to be wimpy you can require the Falcon to have 
over 4MBs..

