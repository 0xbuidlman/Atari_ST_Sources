'
' Programme construisant les routines polygone
' … partir de ROUTS3D.BIN
' Ce programme construit aussi toutes les tables
' Sauvegarde de ROUTS_1A.BIN - TABLE_1A.BIN - TABLE_1B.BIN
' Ska - 07/07/1992
'
'
PRINT "Construction de ROUTS_1A.BIN"
'
a$=SPACE$(21012)
b$=SPACE$(32767)
cop=V:b$
adr=V:a$
BLOAD "b:\3d_plein\routs3d.bin",adr
'
' long indique la longueur de la routine incrust‚e
anc_long=6
long=34
'
' Dans offset: long=34 / ancien long=6 (DBF+RTS) / 1 nop = 2 octets
offset=long+2
'
debut:
PRINT AT(1,2);"adr=";adr-V:a$
PRINT AT(1,3);"cop=";cop-V:b$
'
IF adr-V:a$>=21010
  GOTO fin
ENDIF
'
a=DPEEK(adr)
'
IF a=&H51CE
  DPOKE cop,&H70FC              !moveq   #-4,d0
  DPOKE cop+2,&HC058            !and.w   (a0)+,d0
  DPOKE cop+4,&H72FC            !moveq   #-4,d1
  DPOKE cop+6,&HC259            !and.w   (a1)+,d1
  LPOKE cop+8,&H4BED00A0        !lea     160(a5),a5
  LPOKE cop+12,&H22321000       !move.l  (a2,d1.w),d1
  LPOKE cop+16,&H20340000       !move.l  (a4,d0.w),d0
  DPOKE cop+20,&HD240           !add.w   d0,d1
  LPOKE cop+22,&H4EF31000       !jmp     (a3,d1.w)
  LPOKE cop+26,&H4AFC4AFC       !illegal illegal  (pr‚vu pour les 2 OR.W suppl‚-
  LPOKE cop+30,&H4AFC4AFC       !illegal illegal  mentaires routines coul.3)
  cop=cop+34
  adr=adr+6                     !on saute l'adresse du DBF et le RTS
  endrout=cop
ELSE
  DPOKE cop,a
  cop=cop+2
  adr=adr+2
ENDIF
GOTO debut
'
fin:
DPOKE endrout,&H2E79            !(move.l sauve_a7,a7)
LPOKE endrout+2,&H12345678      !move.l $12345678,a7
DPOKE endrout+6,&H4E43          !trap #3
DPOKE endrout+8,&H4E75          !rts
'
PRINT AT(1,4);"Construction de ROUTS_1B.BIN"
'
b2$=SPACE$(endrout-V:b$+10)
FOR a=0 TO (endrout-V:b$+10)-2 STEP 2
  v=DPEEK(V:b$+a)
  IF v=&H3B47
    DPOKE V:b2$+a,&H3B46
    GOTO conti
  ENDIF
  IF v=&H2232
    DPOKE V:b2$+a,&H2236
    GOTO conti
  ENDIF
  IF v=&H2034
    DPOKE V:b2$+a,&H2037
  ELSE
    DPOKE V:b2$+a,v
  ENDIF
conti:
NEXT a
'
PRINT AT(1,5);"Construction de TABLE_1A et TABLE_1B"
'
c$=SPACE$(1280)
d$=SPACE$(1280)
tbl1a=V:c$
tbl1b=V:d$
'
x=0
long_rout=100+long-anc_long
val=19*long_rout
'
FOR i=0 TO 19
  z=&HFFFF
  FOR j=16 DOWNTO 1
    z=BCLR(z,j)
    DPOKE tbl1a,z
    DPOKE tbl1a+2,x-32768       !ne pas oublier le -32768!
    tbl1a=tbl1a+4
  NEXT j
  x=x+val
  val=val-long_rout
NEXT i
'
x=offset
FOR i=0 TO 19
  z=0
  FOR j=15 DOWNTO 0
    z=BSET(z,j)
    DPOKE tbl1b,z
    DPOKE tbl1b+2,x
    tbl1b=tbl1b+4
  NEXT j
  x=x+long_rout
NEXT i
'
PRINT AT(1,10);"Longueur du fichier: ";endrout-V:b$
PRINT AT(1,11);"Avec MOVE.L SAUVE_A7,A7 - TRAP #3 - RTS: ";endrout-V:b$+10
PRINT AT(1,12);"Pressez une touche pour la sauvegarde de ROUTS_1A.BIN et ROUTS_1B.BIN"
PRINT AT(1,13);"(space=ne pas sauvegarder)"
o=INP(2)
IF o<>32
  BSAVE "b:\3d_plein\routs_1a.bin",V:b$,endrout-V:b$+10
  BSAVE "b:\3d_plein\routs_1b.bin",V:b2$,endrout-V:b$+10
ENDIF
'
PRINT AT(1,14);"Pressez une touche pour la sauvegarde de TABLE_1A.BIN"
PRINT AT(1,13);"(space=ne pas sauvegarder)"
o=INP(2)
IF o<>32
  BSAVE "b:\3d_plein\table_1a.bin",V:c$,1280
ENDIF
'
PRINT AT(1,16);"Pressez une touche pour la sauvegarde de TABLE_1B.BIN"
PRINT AT(1,13);"(space=ne pas sauvegarder)"
o=INP(2)
IF o<>32
  BSAVE "b:\3d_plein\table_1b.bin",V:d$,1280
ENDIF
