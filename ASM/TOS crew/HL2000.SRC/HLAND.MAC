
		.OFFSET   0

;/* game struct */
;struct gamestruct
;{
;  /* 
;    Eerste deel van deze struct moet het zelfde blijven
;    omdat assembley routines de variabelen ook gebruiken
;  */
music:       ds.w 1     ;  int music;       /* 0: no sound, 1:effects, 2: chipsound, 3: DMA_Sound */
musp:        ds.l 1     ;  char *musp;      /* current chip music adres */
ridel:       ds.l 1     ;  byte *ridel;     /* ridel pointer */
ridelend:    ds.l 1     ;  byte *ridelend;  /* einde ridel */

life:        ds.w 1     ;  int life;        /* dood zodra kleiner dan 0 */
score:       ds.w 1     ;  int score;       /* game score */

vbl_count:   ds.w 1     ;  int vbl_count;   /* deze variabele wordt iedere vbl met een verlaagd */

egg_ptr:     ds.l 1     ;  void* egg_ptr;   /* adres egg_data */

d_screen:    ds.l 1     ;  unsigned long *d_screen; /* screen displayed */
d_reg:       ds.l 1     ;  unsigned long d_reg; /* display screen register data */
w_screen:    ds.l 1     ;  unsigned long *w_screen; /* working screen */
w_reg:       ds.l 1     ;  unsigned long w_reg; /* working screen register data */

x_pos:       ds.w 1     ;  int x_pos; /* x positie */
y_pos:       ds.w 1     ;  int y_pos; /* y positie */
x_offs:      ds.w 1     ;  int x_offs; /* x offset */
y_offs:      ds.w 1     ;  int y_offs; /* y offset */
ani_count:   ds.w 1     ;  int ani_count;

;  /* end of assembley part */

