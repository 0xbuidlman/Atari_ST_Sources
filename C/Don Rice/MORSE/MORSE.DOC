Morse code practice software / Public domain / Unconditional distribution
Don Rice KL7JIQ
FXDDR@ALASKA.bitnet
CIS 72337,3417

This software is intended to help people who want to improve their morse
copying skills for amateur radio licenses.  It is not a morse code tutorial,
although a tutorial program could be constructed with the included
routines.  If you have no knowledge of morse code, I'd recommend the
ARRL "Tune in the World with Ham Radio" kit.  Once you know some of the
letters, the quiz program in this set will help to memorize the entire
required set.  The files in this collection are:

MORSE.C
  This is the C function that sends morse code at a given speed.  It is
  fully GEM compatible.  The methods for calculating the timing constants
  are illustrated in the comments.  I've checked the output speed against
  the "PARIS" timing, and it appears to be about 5% slower than the nominal
  speed.  The ASCII-->morse mapping used is similar to that used by the
  AEA morse senders.

QUIZ.PRG + source files
  This one sends the entire required morse alphabet one character at a time
  for you to identify.  The letters are sent in random order until you
  have correctly identified all of them.  This approach will familiarize
  you with the sound of the letters at the target speed.

SENDER.PRG + source files
  This program sends any text file in morse code.  The character speed
  and the spacing speed are independent; you should set the character speed
  to a value slightly higher than your target speed and then find a spacing
  speed that you are comfortable with.  Increase the spacing speed until
  it matches the character speed, and you are ready for the test.  (I don't
  recommend slowly increasing the character speed, because the characters
  sound different as the speed changes, and that complicates the learning
  process.)
  There is also an option to automatically increase the spacing speed.
  If the increment value is greater than zero, it will be added to the
  spacing speed each time a blank line is read in the text file, until
  the spacing speed equals the character speed.  This is useful in helping
  you to find your `natural' copying speed when you are starting out.
  Finally, you can choose either filtered or literal text.  In filter
  mode, only characters in the required morse alphabet are sent; blank
  lines are sent as AR and EOF is signalled as SK.  Use this mode to
  send arbitrary text files (eg, your mail, this documentation).
  In literal mode, the full ASCII mapping, including the [prosign]
  notation is accepted.  This mode allows you to prepare simulated
  QSO `scripts' to play for code practice class or whatever.

Feel free to distribute this ARC collection to anyone anywhere by
any means.  PLEASE keep the files together so the recipients can
customize the programs as desired.
