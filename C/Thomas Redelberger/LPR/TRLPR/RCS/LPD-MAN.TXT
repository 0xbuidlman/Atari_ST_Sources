head	1.2;
access;
symbols
	TRLPR11B:1.2;
locks
	Thomas:1.2; strict;
comment	@# @;


1.2
date	99.12.30.13.11.26;	author Thomas;	state Exp;
branches;
next	1.1;

1.1
date	99.11.28.15.27.52;	author Thomas;	state Exp;
branches;
next	;


desc
@Line printer spooler daemon
@


1.2
log
@Adapted for use of DEFAULT.CFG instead of printcap
@
text
@NAME
	lpd - line printer spooler daemon


SYNOPSIS
	lpd.acc or lpd.prg


DESCRIPTION

Lpd is a spooling daemon to receive files from a remote lpr client and
print them on a printer attached locally.

Options:
	none


ENVIRONMENT

No environment variables are used.


FILES

Lpd.prg accesses variables that are defined in the file default.cfg in the 
STinG directory. Note that STinG reads this file to memory during STinG
startup (auto folder processing). Hence changes to default.cfg take only
effect when rebooting.

lpd.prg supports up to 26 printers. This is much more you usually can
attach on your ST compatible machine. For each printer attached,
substitute a letter A to Z for the small x you find in the variable names
below. The printer name the remote lpr client conveys in his print request 
indexes in this "array" of LPx_QN variables described below.

Per printer lpd.prg needs the following variables:

LPx_QN          Queue Name. Name of the printer. This may be any string you
                like. You will want however to have LPA_QN = lp in
                default.cfg as lp is the default printer when option -P is
                not present.

LPx_LP          Line Printer. Device name of the port. Example: the
                parallel printer port on a ST has the device name PRN:

LPx_SD		Spool Directory. This shall point to a writable directory
		for temporary files.


SEE ALSO

lpr-man.txt, lp-man.txt


HISTORY

An lpd daemon appeared in Version 6 AT&T Unix.


DIAGNOSTICS

This version of lpd has a lot of limitations:

- Access control:
No checks on hosts or users are done. Jobs are accepted from all users and
from all hosts.

- Termination:
lpd.acc and lpd.prg can only be terminated by a shutdown (it properly
handles an AP_TERM AES message). There is currently no other clean way to
end the daemon as it has no user interface.

- Protocol support:
lpd only supports the "Receive a printer job" request from RFC1179. All
other requests (e.g. "Send queue state") are not yet supported.

- Connections:
Currently lpd handles only one connection at a time. A second client
trying to connect concurrently gets an error message.

- Spooling:
This version of lpd has no queuing mechanism. Files received over the
network get stored in the spooling directory and then get printed
immediately.

- Filtering & Formatting
No filtering mechanism is implemented. It is assumed print output directed
to lpd is already in binary format suitable for the printer attached to the
printer device.

All formatting options conveyed by a remote lpr are ignored. Hence no flag
pages, headers, ... are supported.


@


1.1
log
@Initial revision
@
text
@d25 17
a41 1
	printcap		printer description file
d43 2
a44 2
printcap is searched in the same directory as lpd.acc or lpd.prg (more
precisely: the current directory when lpd.acc or lpd.prg is invoked)
d46 2
d49 1
d52 1
a52 1
lpr(1), lpq(1), lprm(1), pr(1), printcap(5), lpc(8)
d71 1
a71 1
end the daemon.
d75 1
a75 1
other requests (e.g. "Send queue state") are not supported.
d78 2
a79 2
Currently lpd supports only one connection at a time. The second client
trying to connect gets an error message.
d82 1
a82 1
This version or lpd has no queuing mechanism. Files received over the
d86 1
a86 28
- printcap:
In contrast to some Un*x lpd versions which read printcap for each request,
this lpd reads printcap only when starting up. Thus you need to reboot to
have changes in printcap take effect.

- printcap file layout:
The printcap file layout follows the conventional Un*x one with some
limitations: The printer queue name may not contain aliases separated by a
vertical bar. The only items used and mandatory are
	sd=<spool directory>
	lp=<printer device>
other items are ignored.

Example printcap contents:
mydj:sd=c;\tmp:lp=u;\dev\prn

Note that as the colon is used as a field separator in print cap, a
semicolon *must* be used to designate that a TOS drive character is
present.

In the above example the printer connected to the parallel port - which is
the device u:\dev\prn under the MagiC operating system - is accessible as
the printer mydj from the remote computer, e.g. by lpr.ttp -Pmydj <file>
Temporary files get stored in the directory c:\tmp

You may have as many as 5 lines in printcap to designate different printers
or different queue names for the same printer.

d91 2
a92 1
No flag pages, headers, ... are supported.
a93 1
In short: all formatting options conveyed by a remote lpr are ignored.
@
