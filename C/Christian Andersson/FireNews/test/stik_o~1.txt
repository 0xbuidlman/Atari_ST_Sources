===Steven Bagley:  STiK RFC 00001 29/04/1997 rev.001===

In Q-FUNK:  STiK RFC 27.04.1997 rev.003, Martin-Eric Racine describes a 
method of standardising the outgoing mail and news queue, based on the 
current NEWSIE format. Although I fully agree with the idea of a 
standardised out queue format, I believe that the system proposed by Martin 
is not the best possible system for our purposes, and indeed could result 
in problems under a Multitasking system.

To recap, the Martin/NEWSIE system looks like this:

A STiK/Environment variable QUEUE points to a directory which contains the 
QUEUEd news and mail, set like this in the STIK.INF (DEFAULT.CFG) file.

QUEUE         = d:\stik\spool\

This directory contains files which are waiting to be sent, they follow 
Newsie's numbering scheme of MAIL9999.TXT and NEWS9999.TXT, along with 
Newsie's OUT.BOX format. Content is anything conforming to the related 
Mail/News RFC.

An example mail file is shown below:

*****mail9999.txt*****
To: stik@on-luebeck.de
From: list@flinny.demon.co.uk (Nicholas Flintham)
Subject: Re: STIK: NEWS/MAIL
X-Mailer: FunkMail (Atari) v1.00
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

blah blah blah
blah blah blah
blah blah blah

.

And an example news file:
*****news9999.txt*****
Newsgroups: comp.sys.atari.advocacy
From: q-funk@megacom.net (Martin-Eric Racine)
Subject: Defend yourself against the Windoze
X-Newsreader: NEWSie Version 0.70 (Atari)
Mime-Version: 1.0
Content-Type: TEXT/PLAIN; charset=US-ASCII

blah blah blah
blah blah blah
blah blah blah
.

That is basically Martin's suggestion and would work perfectly well under 
single TOS and/or for use by a single client. However it also requires the 
program sending mail to know the format of the Out.box and be able to find 
the next free slot in the queue.

I propose a similar system which doesn't suffer from these problems, and is 
based partialy on the system used by Antmail.

The STIK.INF sets a variable again called QUEUE as before to the spool 
directory, which contains two sub-directorys NEWS and MAIL, which hold the 
separate news and mail queues respectively.

Taking the MAIL folder as an example (the news queue is identical except 
that the files are as described in Martins format for NEWS above), it 
contains the mail's as files with any name, no rigid naming convention 
exists. The SMTP send program then uses a Fsfirst/Fsnext search to send 
each msg, collecting all the send info from the message header.

I say no rigid naming convention above, and although this is the case, I 
suggest a few refinements that will make this process more foolproof

FIrst, the fname should be split into two parts, the main bit and the 
extension.

Taking the extension first, it would be a decimal representation of the 
programs GEM ID (if not running in GEM, then use an ascii value based on 
your programs name, say for Greendale, GRN or GDL), so if your ID is 6 then 
the message has the extension 6.

The main part of the extension is a 8digit hexadecimal number based on the 
RTC. This is generated by the following C code fragement, which also takes 
into account the application id at the end.

void CreateFname(char *fname, WORD appl_id)
	{
	 ULONG name;

	 name = (Tgetdate() << 16) || Tgettime();

	 sprintf(fname,"%lx.%d",name,appl_id);
	}

You should always check the file doesn't exist before writting it, and if 
it does alter it in some way, until a free fname is found.

As mentioned before the news folder is exactly the same as the mail 
filenames.

If you have any queries contact me either at sbagley@innotts.co.uk, or on 
IRC (nick _STeveB_)

=== EoF ===